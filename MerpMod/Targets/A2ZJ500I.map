
 Start         Length     Name                   Class
 0000:00000000 000080000H ROM                    CODE
 0000:00000000 000007FFFH RAM                    


  Address         Publics by Value

 0000:00000000       off_0
 0000:00002000       aA2zj500i
 0000:0000208C       SBR_PULL2D_208C
 0000:00002140       SBR_PULL3D_2140
 0000:0000414C       nullsub_1
 0000:00004150       nullsub_2
 0000:0000416C       nullsub_3
 0000:00004750       a@@@@@@@@@@@@@@
 0000:00004D44       nullsub_13
 0000:00004D48       nullsub_20
 0000:00004D4C       nullsub_14
 0000:00004F1E       nullsub_21
 0000:00004F68       nullsub_15
 0000:00004F7E       nullsub_22
 0000:00004F82       nullsub_16
 0000:00004F9E       nullsub_17
 0000:00004FA2       nullsub_23
 0000:00004FA6       nullsub_18
 0000:00004FEE       nullsub_19
 0000:00005578       aOFocatnCF
 0000:000055A4       aFCatCF4cat6CF_
 0000:00005CBE       aOFucatCA
 0000:000077E4       SBR_MAF_CALC_77E4
 0000:0000C6AA       aCNcoAwCEu9
 0000:0000CAE4       nullsub_4
 0000:0000D37C       nullsub_5
 0000:0000E96C       aCuE0f@
 0000:0000F054       nullsub_6
 0000:000108BE       nullsub_25
 0000:00011624       nullsub_30
 0000:00012E84       aT8dC7Iu2elXp
 0000:0001335E       SBR_Target_Boost_Pull
 0000:00013AA4       Max_Wastegate_Duty_Limit_PostCompensation
 0000:000150A4       SBR_Coast_Swget
 0000:000150B8       SBR_Resume_Swget
 0000:0001883C       aCJCJoFsC
 0000:0001D410       SBR_Load_Calcs
 0000:0001D754       Engine_Load_Limit_Maximum
 0000:0001F5EC       Front_Oxygen_Sensor_Rich_Limit
 0000:000202B0       SBR_Clutch_SwGet
 0000:00022E24       nullsub_28
 0000:00022E28       nullsub_7
 0000:00022E2C       nullsub_8
 0000:00022E30       nullsub_9
 0000:0002327C       nullsub_31
 0000:00023284       nullsub_33
 0000:0002540C       aCoCrA0_
 0000:00029CE4       aAAfl@
 0000:0002A498       SBR_REVLIM_2A498
 0000:0002BC08       aCOAe6U
 0000:00033020       nullsub_32
 0000:0003BF4C       aOXTC0f5@
 0000:0003CD2A       SsmGet_Learned_Ignition_Timing_Correction_P153
 0000:0003CD30       SsmGet_Coolant_Temperature_P2
 0000:0003CD3E       SsmGet_AF_Correction_1_P3
 0000:0003CD5A       SsmGet_AF_Learning_1_P4
 0000:0003CD6A       SsmGet_Boost_Pressure_actual_P7
 0000:0003CD78       SsmGet_Engine_Speed_P8
 0000:0003CDA6       SsmGet_Vehicle_Speed_P9
 0000:0003CDB2       SsmGet_Ignition_Total_Timing_P10
 0000:0003CE1C       SsmGet_Intake_Air_Temperature_P11
 0000:0003CE2A       SsmGet_Mass_Airflow_P12
 0000:0003CE58       SsmGet_Throttle_Opening_Angle_P13
 0000:0003CE66       SsmGet_Rear_O2_Sensor_P15
 0000:0003CE94       SsmGet_Battery_Voltage_P17
 0000:0003CEA2       SsmGet_Mass_Airflow_Sensor_Voltage_P18
 0000:0003CEC6       SsmGet_Throttle_Sensor_Voltage_P19
 0000:0003CEEA       SsmGet_Fuel_Injector_1_Pulse_Width_P21
 0000:0003CEFE       SsmGet_Knock_Correction_Advance_P23
 0000:0003CF0E       SsmGet_Atmospheric_Pressure_P24
 0000:0003CF7C       SsmGet_Manifold_Relative_Pressure_P25
 0000:0003CF9A       SsmGet_Fuel_Tank_Pressure_P27
 0000:0003CFAA       SsmGet_Accelerator_Pedal_Angle_P30
 0000:0003CFB8       SsmGet_Fuel_Temperature_P31
 0000:0003CFC6       SsmGet_Fuel_Level_P35
 0000:0003CFD4       SsmGet_Primary_Wastegate_Duty_Cycle_P36
 0000:0003CFE2       SsmGet_CPC_Valve_Duty_Ratio_P38
 0000:0003CFFA       SsmGet_Tumble_Valve_Position_Sensor_Right_P39
 0000:0003D01E       SsmGet_Tumble_Valve_Position_Sensor_Left_P40
 0000:0003D042       SsmGet_Idle_Speed_Control_Valve_Duty_Ratio_P41
 0000:0003D054       SsmGet_Alternator_Duty_P46
 0000:0003D064       SsmGet_Fuel_Pump_Duty_P47
 0000:0003D072       SsmGet_Intake_VVT_Advance_Angle_Right_P48
 0000:0003D080       SsmGet_Intake_VVT_Advance_Angle_Left_P49
 0000:0003D0F0       SsmGet_Intake_OCV_Duty_Right_P50
 0000:0003D0FE       SsmGet_Intake_OCV_Duty_Left_P51
 0000:0003D10C       SsmGet_Intake_OCV_Current_Right_P52
 0000:0003D11A       SsmGet_Intake_OCV_Current_Left_P53
 0000:0003D128       SsmGet_AF_Sensor_1_Current_P54
 0000:0003D138       SsmGet_AF_Sensor_1_Resistance_P56
 0000:0003D144       SsmGet_AF_Sensor_1_P58
 0000:0003D15C       SsmGet_Switches_69_70_71
 0000:0003D266       SsmGet_Switches_4_5_6_7_8_9
 0000:0003D33E       SsmGet_Switches_10_11_12_13_14_15_16_17
 0000:0003D414       SsmGet_Switches_18_19_20_21_22_23_24_25
 0000:0003D554       SsmGet_Switches_26_27_28_29_30_31_32_33
 0000:0003D606       SsmGet_Switches_34_35_36_37_38_39_40_41
 0000:0003D6EC       SsmGet_Switches_42_43_44_45_46_47_48_49
 0000:0003D724       SsmGet_Switches_50_51_52_53
 0000:0003D7D6       SsmGet_Switches_54_55_56_57_58_59_60_61
 0000:0003D914       SsmGet_Roughness_Monitor_Cylinder_1_P63
 0000:0003D91A       SsmGet_Roughness_Monitor_Cylinder_2_P64
 0000:0003D920       SsmGet_AF_Correction_3_32bit_ECU_P89
 0000:0003DA88       SsmGet_Roughness_Monitor_Cylinder_3_P69
 0000:0003DA8E       SsmGet_Roughness_Monitor_Cylinder_4_P70
 0000:0003DC0A       SsmGet_Throttle_Motor_Duty_P71
 0000:0003DC1A       SsmGet_Throttle_Motor_Voltage_P72
 0000:0003DC28       SsmGet_Sub_Throttle_Sensor_P73
 0000:0003DC4C       SsmGet_Main_Throttle_Sensor_P74
 0000:0003DCA0       SsmGet_Sub_Accelerator_Sensor_P75
 0000:0003DCC4       SsmGet_Main_Accelerator_Sensor_P76
 0000:0003DCE8       SsmGet_Exhaust_Gas_Temperature_P79
 0000:0003DCF8       SsmGet_Memorised_Cruise_Speed_P82
 0000:0003DD04       SsmGet_Estimated_odometer_P120
 0000:0003DD1E       SsmGet_Exhaust_VVT_Advance_Angle_Right_P83
 0000:0003DD2A       SsmGet_Exhaust_VVT_Advance_Angle_Left_P84
 0000:0003DD36       SsmGet_Exhaust_OCV_Duty_Right_P85
 0000:0003DD48       SsmGet_Exhaust_OCV_Duty_Left_P86
 0000:0003DD5A       SsmGet_Exhaust_OCV_Current_Right_P87
 0000:0003DD68       SsmGet_Exhaust_OCV_Current_Left_P88
 0000:0003DD76       SsmGet_Switches_62
 0000:0003DECE       SsmGet_Switches_63_64_65_66_67_68
 0000:0003E068       SsmGet_Accumulated_Count_of_Overspeed_Instances_High_RPM_P199
 0000:0003E06C       SsmGet_Boost_Pressure_Feedback_P168
 0000:0003E0D0       SsmGet_Interior_Heater_P178
 0000:0003E0DE       SsmGet_Battery_Current_P183
 0000:0003E102       SsmGet_Alternator_Control_Mode_P185
 0000:0003E108       SsmGet_Battery_Temperature_P184
 0000:0003E114       SsmGet_Exhaust_Gas_Temperature_at_Diesel_Particulate_Filter_DPF_Inlet_P189
 0000:0004272C       SSM_BASE
 0000:00042748       PtrSsmGet_Engine_Load_Relative_P1
 0000:0004274C       PtrSsmGet_Coolant_Temperature_P2
 0000:00042750       PtrSsmGet_AF_Correction_1_P3
 0000:00042754       PtrSsmGet_AF_Learning_1_P4
 0000:00042758       PtrSsmGet_AF_Correction_2_P5
 0000:0004275C       PtrSsmGet_AF_Learning_2_P6
 0000:00042760       PtrSsmGet_Boost_Pressure_actual_P7
 0000:00042764       PtrSsmGet_Engine_Speed_P8
 0000:0004276C       PtrSsmGet_Vehicle_Speed_P9
 0000:00042770       PtrSsmGet_Ignition_Total_Timing_P10
 0000:00042774       PtrSsmGet_Intake_Air_Temperature_P11
 0000:00042778       PtrSsmGet_Mass_Airflow_P12
 0000:00042780       PtrSsmGet_Throttle_Opening_Angle_P13
 0000:00042784       PtrSsmGet_Front_O2_Sensor_1_P14
 0000:0004278C       PtrSsmGet_Rear_O2_Sensor_P15
 0000:00042794       PtrSsmGet_Front_O2_Sensor_2_P16
 0000:0004279C       PtrSsmGet_Battery_Voltage_P17
 0000:000427A0       PtrSsmGet_Mass_Airflow_Sensor_Voltage_P18
 0000:000427A4       PtrSsmGet_Throttle_Sensor_Voltage_P19
 0000:000427A8       PtrSsmGet_Differential_Pressure_Sensor_Voltage_P20
 0000:000427AC       PtrSsmGet_Fuel_Injector_1_Pulse_Width_P21
 0000:000427B0       PtrSsmGet_Fuel_Injector_2_Pulse_Width_P22
 0000:000427B4       PtrSsmGet_Knock_Correction_Advance_P23
 0000:000427B8       PtrSsmGet_Atmospheric_Pressure_P24
 0000:000427BC       PtrSsmGet_Manifold_Relative_Pressure_P25
 0000:000427C0       PtrSsmGet_Pressure_Differential_Sensor_P26
 0000:000427C4       PtrSsmGet_Fuel_Tank_Pressure_P27
 0000:000427C8       PtrSsmGet_CO_Adjustment_P28
 0000:000427CC       PtrSsmGet_Learned_Ignition_Timing_P29
 0000:000427D0       PtrSsmGet_Accelerator_Pedal_Angle_P30
 0000:000427D4       PtrSsmGet_Fuel_Temperature_P31
 0000:000427D8       PtrSsmGet_Front_O2_Heater_Current_1_P32
 0000:000427DC       PtrSsmGet_Rear_O2_Heater_Current_P33
 0000:000427E0       PtrSsmGet_Front_O2_Heater_Current_2_P34
 0000:000427E4       PtrSsmGet_Fuel_Level_P35
 0000:000427E8       PtrSsmGet_Radiator_Fan_Control_P92
 0000:000427EC       PtrSsmGet_Primary_Wastegate_Duty_Cycle_P36
 0000:000427F0       PtrSsmGet_Secondary_Wastegate_Duty_Cycle_P37
 0000:000427F4       PtrSsmGet_CPC_Valve_Duty_Ratio_P38
 0000:000427F8       PtrSsmGet_Tumble_Valve_Position_Sensor_Right_P39
 0000:000427FC       PtrSsmGet_Tumble_Valve_Position_Sensor_Left_P40
 0000:00042800       PtrSsmGet_Idle_Speed_Control_Valve_Duty_Ratio_P41
 0000:00042804       PtrSsmGet_AF_Lean_Correction_P42
 0000:00042808       PtrSsmGet_AF_Heater_Duty_P43
 0000:0004280C       PtrSsmGet_Idle_Speed_Control_Valve_Step_P44
 0000:00042810       PtrSsmGet_Number_of_Exh_Gas_Recirc_Steps_P45
 0000:00042814       PtrSsmGet_Alternator_Duty_P46
 0000:00042818       PtrSsmGet_Fuel_Pump_Duty_P47
 0000:0004281C       PtrSsmGet_Intake_VVT_Advance_Angle_Right_P48
 0000:00042820       PtrSsmGet_Intake_VVT_Advance_Angle_Left_P49
 0000:00042824       PtrSsmGet_Intake_OCV_Duty_Right_P50
 0000:00042828       PtrSsmGet_Intake_OCV_Duty_Left_P51
 0000:0004282C       PtrSsmGet_Intake_OCV_Current_Right_P52
 0000:00042830       PtrSsmGet_Intake_OCV_Current_Left_P53
 0000:00042834       PtrSsmGet_AF_Sensor_1_Current_P54
 0000:00042838       PtrSsmGet_AF_Sensor_2_Current_P55
 0000:0004283C       PtrSsmGet_AF_Sensor_1_Resistance_P56
 0000:00042840       PtrSsmGet_AF_Sensor_2_Resistance_P57
 0000:00042844       PtrSsmGet_AF_Sensor_1_P58
 0000:00042848       PtrSsmGet_AF_Sensor_2_P59
 0000:0004284C       PtrSsmGet_Front_Wheel_Speed_P93
 0000:00042850       PtrSsmGet_ATF_Temperature_P94
 0000:00042854       PtrSsmGet_Gear_Position_P60
 0000:00042858       PtrSsmGet_Line_Pressure_Duty_Ratio_P95
 0000:0004285C       PtrSsmGet_Lock_Up_Duty_Ratio_P96
 0000:00042860       PtrSsmGet_Transfer_Duty_Ratio_P97
 0000:00042864       PtrSsmGet_Throttle_Sensor_Voltage_P98
 0000:00042868       PtrSsmGet_Turbine_Revolution_Speed_P99
 0000:0004286C       PtrSsmGet_Brake_Clutch_Duty_Ratio_P100
 0000:00042870       PtrSsmGet_Rear_Wheel_Speed_P101
 0000:00042874       PtrSsmGet_Manifold_Pressure_Sensor_Voltage_P102
 0000:00042878       PtrSsmGet_AF_Sensor_1_Heater_Current_P61
 0000:0004287C       PtrSsmGet_AF_Sensor_2_Heater_Current_P62
 0000:00042880       PtrSsmGet_Lateral_G_Sensor_Voltage_P103
 0000:00042884       PtrSsmGet_ATF_Temperature_P104
 0000:00042888       PtrSsmGet_Low_Clutch_Duty_P105
 0000:0004288C       PtrSsmGet_High_Clutch_Duty_P106
 0000:00042890       PtrSsmGet_Load_and_Reverse_Brake_L_and_RB_Duty_P107
 0000:00042894       PtrSsmGet_ATF_Temperature_2_P108
 0000:00042898       PtrSsmGet_Voltage_Center_Differential_Switch_P109
 0000:0004289C       PtrSsmGet_AT_Turbine_Speed_1_P110
 0000:000428A0       PtrSsmGet_AT_Turbine_Speed_2_P111
 0000:000428A4       PtrSsmGet_Center_Differential_Real_Current_P112
 0000:000428A8       PtrSsmGet_Center_Differential_Indicate_Current_P113
 0000:000428B0       PtrSsmGet_Switches_69_70_71
 0000:000428B4       PtrSsmGet_Switches_4_5_6_7_8_9
 0000:000428B8       PtrSsmGet_Switches_10_11_12_13_14_15_16_17
 0000:000428BC       PtrSsmGet_Switches_18_19_20_21_22_23_24_25
 0000:000428C0       PtrSsmGet_Switches_26_27_28_29_30_31_32_33
 0000:000428C4       PtrSsmGet_Switches_34_35_36_37_38_39_40_41
 0000:000428C8       PtrSsmGet_Switches_42_43_44_45_46_47_48_49
 0000:000428CC       PtrSsmGet_Switches_50_51_52_53
 0000:000428D0       PtrSsmGet_Switches_54_55_56_57_58_59_60_61
 0000:000428D4       PtrSsmGet_Switches_76_77_78_79_80_81_82_83
 0000:000428D8       PtrSsmGet_Switches_84_85_86_87_88_89_90_91
 0000:000428DC       PtrSsmGet_Switches_92_93_94_95_96_97_98_99
 0000:000428E0       PtrSsmGet_Switches_100_101_102_103_104_105_106_107
 0000:000428E4       PtrSsmGet_Switches_108_109_110_111_112_113_114_115
 0000:00042A64       PtrSsmGet_Roughness_Monitor_Cylinder_1_P63
 0000:00042A68       PtrSsmGet_Roughness_Monitor_Cylinder_2_P64
 0000:00042A6C       PtrSsmGet_AF_Correction_3_32bit_ECU_P89
 0000:00042A70       PtrSsmGet_AF_Learning_3_P66
 0000:00042A74       PtrSsmGet_Rear_O2_Heater_Voltage_P67
 0000:00042A78       PtrSsmGet_AF_Adjustment_Voltage_P68
 0000:00042A7C       PtrSsmGet_Switches_116_117_118_119_120_121_122_123
 0000:00042A80       PtrSsmGet_Switches_124_125_126_127_128_129
 0000:00042A84       PtrSsmGet_Switches_142_143_144_145_146_147
 0000:00042A88       PtrSsmGet_Switches_148_149_150_151_152_153_154
 0000:00042A8C       PtrSsmGet_Roughness_Monitor_Cylinder_3_P69
 0000:00042A90       PtrSsmGet_Roughness_Monitor_Cylinder_4_P70
 0000:00042AE8       PtrSsmGet_Roughness_Monitor_Cylinder_5_P151
 0000:00042B0C       PtrSsmGet_Roughness_Monitor_Cylinder_6_P152
 0000:00042B10       PtrSsmGet_Learned_Ignition_Timing_Correction_P153
 0000:00042B14       PtrSsmGet_Throttle_Motor_Duty_P71
 0000:00042B18       PtrSsmGet_Throttle_Motor_Voltage_P72
 0000:00042B2C       PtrSsmGet_Sub_Throttle_Sensor_P73
 0000:00042B30       PtrSsmGet_Main_Throttle_Sensor_P74
 0000:00042B34       PtrSsmGet_Sub_Accelerator_Sensor_P75
 0000:00042B38       PtrSsmGet_Main_Accelerator_Sensor_P76
 0000:00042B3C       PtrSsmGet_Brake_Booster_Pressure_P77
 0000:00042B40       PtrSsmGet_Fuel_Pressure_High_P78
 0000:00042B44       PtrSsmGet_Exhaust_Gas_Temperature_P79
 0000:00042B48       PtrSsmGet_Exhaust_Gas_Temperature_2_P116
 0000:00042B4C       PtrSsmGet_Cold_Start_Injector_Air_Pump_P80
 0000:00042B50       PtrSsmGet_SCV_Step_P81
 0000:00042B54       PtrSsmGet_Memorised_Cruise_Speed_P82
 0000:00042B58       PtrSsmGet_AirFuel_Correction_4_P117
 0000:00042B5C       PtrSsmGet_AirFuel_Learning_4_P118
 0000:00042B60       PtrSsmGet_Fuel_Level_Sensor_Resistance_P119
 0000:00042B64       PtrSsmGet_Estimated_odometer_P120
 0000:00042B78       PtrSsmGet_Oil_Temperature_P122
 0000:00042B7C       PtrSsmGet_Oil_Switching_Solenoid_Valve_OSV_Duty_Right_P123
 0000:00042B80       PtrSsmGet_Oil_Switching_Solenoid_Valve_OSV_Duty_Left_P124
 0000:00042B84       PtrSsmGet_Oil_Switching_Solenoid_Valve_OSV_Current_Right_P125
 0000:00042B88       PtrSsmGet_Oil_Switching_Solenoid_Valve_OSV_Current_Left_P126
 0000:00042B8C       PtrSsmGet_Exhaust_VVT_Advance_Angle_Right_P83
 0000:00042B90       PtrSsmGet_Exhaust_VVT_Advance_Angle_Left_P84
 0000:00042B94       PtrSsmGet_Exhaust_OCV_Duty_Right_P85
 0000:00042B98       PtrSsmGet_Exhaust_OCV_Duty_Left_P86
 0000:00042B9C       PtrSsmGet_Exhaust_OCV_Current_Right_P87
 0000:00042BA0       PtrSsmGet_Exhaust_OCV_Current_Left_P88
 0000:00042BA4       PtrSsmGet_VVL_Lift_Mode_P127
 0000:00042BAC       PtrSsmGet_Switches_62
 0000:00042BB0       PtrSsmGet_Switches_63_64_65_66_67_68
 0000:00042BB4       PtrSsmGet_Switches_134_135_136_137_138_139_140_141
 0000:00042C1C       PtrSsmGet_Wheel_Speed_Front_Right_P144
 0000:00042C20       PtrSsmGet_Wheel_Speed_Front_Left_P145
 0000:00042C24       PtrSsmGet_Wheel_Speed_Rear_Right_P146
 0000:00042C28       PtrSsmGet_Wheel_Speed_Rear_Left_P147
 0000:00042C2C       PtrSsmGet_H_and_LRC_Solenoid_Valve_Current_P128
 0000:00042C30       PtrSsmGet_DC_Solenoid_Valve_Current_P129
 0000:00042C34       PtrSsmGet_FB_Solenoid_Valve_Current_P130
 0000:00042C38       PtrSsmGet_IC_Solenoid_Valve_Current_P131
 0000:00042C3C       PtrSsmGet_PL_Solenoid_Valve_Current_P132
 0000:00042C40       PtrSsmGet_LU_Solenoid_Valve_Current_P133
 0000:00042C44       PtrSsmGet_AWD_Solenoid_Valve_Current_P134
 0000:00042C48       PtrSsmGet_Yaw_Rate_Sensor_Voltage_P135
 0000:00042C4C       PtrSsmGet_H_and_LRC_Solenoid_Valve_Pressure_P136
 0000:00042C50       PtrSsmGet_DC_Solenoid_Valve_Pressure_P137
 0000:00042C54       PtrSsmGet_FB_Solenoid_Valve_Pressure_P138
 0000:00042C58       PtrSsmGet_IC_Solenoid_Valve_Pressure_P139
 0000:00042C5C       PtrSsmGet_PL_Solenoid_Valve_Pressure_P140
 0000:00042C60       PtrSsmGet_LU_Solenoid_Valve_Pressure_P141
 0000:00042C64       PtrSsmGet_AWD_Solenoid_Valve_Pressure_P142
 0000:00042C68       PtrSsmGet_Yaw_Rate_and__G_Sensor_Reference_Voltage_P143
 0000:00042C94       PtrSsmGet_Steering_Angle_Sensor_P148
 0000:00042CD4       PtrSsmGet_SIDrive_Mode_P114
 0000:00042CD8       PtrSsmGet_Throttle_Sensor_Closed_Voltage_P115
 0000:00042CF4       PtrSsmGet_Fuel_Tank_Air_Pressure_P121
 0000:00042D40       PtrSsmGet_FwdB_Solenoid_Valve_Current_P149
 0000:00042D44       PtrSsmGet_FwdB_Solenoid_Valve_Target_Pressure_P150
 0000:00042D84       PtrSsmGet_Switches_155_156_157
 0000:00042D88       PtrSsmGet_Switches_158_159_160_161_162_163_164_165
 0000:00042D90       PtrSsmGet_Fine_Learning_Knock_Correction_P91
 0000:00042D94       PtrSsmGet_Fuel_Tank_Pressure_P154
 0000:00042E60       PtrSsmGet_Switches_166_167
 0000:00042E64       PtrSsmGet_Switches_168_169_170_171_172
 0000:00042EB0       PtrSsmGet_Main_Injection_Period_P155
 0000:00042EB4       PtrSsmGet_Final_Injection_Amount_P156
 0000:00042EBC       PtrSsmGet_Number_of_Times_Injected_P157
 0000:00042EC0       PtrSsmGet_Target_Intake_Manifold_Pressure_P158
 0000:00042EC4       PtrSsmGet_Target_Intake_Air_Amount_P159
 0000:00042EC8       PtrSsmGet_Air_Mass_P160
 0000:00042ECC       PtrSsmGet_Exhaust_Gas_Recirculation_EGR_Target_Valve_Opening_Angle_P161
 0000:00042ED0       PtrSsmGet_Exhaust_Gas_Recirculation_EGR_Valve_Opening_Angle_P162
 0000:00042ED4       PtrSsmGet_Exhaust_Gas_Recirculation_EGR_Duty_P163
 0000:00042ED8       PtrSsmGet_Common_Rail_Target_Pressure_P164
 0000:00042EDC       PtrSsmGet_Common_Rail_Pressure_P165
 0000:00042EE0       PtrSsmGet_Intake_Air_Temperature_combined_P166
 0000:00042EE4       PtrSsmGet_Target_Engine_Speed_P167
 0000:00042EEC       PtrSsmGet_Boost_Pressure_Feedback_P168
 0000:00042EF0       PtrSsmGet_Yaw_Rate_P171
 0000:00042EF4       PtrSsmGet_Lateral_G_P172
 0000:00042EF8       PtrSsmGet_Drivers_Control_Center_Differential_DCCD_Torque_Allocation_P173
 0000:00042EFC       PtrSsmGet_Drivers_Control_Center_Differential_DCCD_Mode_P174
 0000:00042F00       PtrSsmGet_Electric_Power_Steering_Current_P169
 0000:00042F04       PtrSsmGet_Fuel_Pump_Suction_Control_Valve_Current_Target_P170
 0000:00042F0C       PtrSsmGet_Fuel_Pump_Suction_Control_Valve_Current_Actual_P175
 0000:00042F14       PtrSsmGet_Mileage_after_Injector_Learning_P176
 0000:00042F3C       PtrSsmGet_Mileage_after_Injector_Replacement_P177
 0000:000430A0       PtrSsmGet_Quantity_Correction_Cylinder_1_P179
 0000:000430A4       PtrSsmGet_Quantity_Correction_Cylinder_2_P180
 0000:000430A8       PtrSsmGet_Quantity_Correction_Cylinder_3_P181
 0000:000430AC       PtrSsmGet_Quantity_Correction_Cylinder_4_P182
 0000:000430EC       PtrSsmGet_Interior_Heater_P178
 0000:000430F0       PtrSsmGet_Battery_Current_P183
 0000:000430F4       PtrSsmGet_Alternator_Control_Mode_P185
 0000:000430F8       PtrSsmGet_Battery_Temperature_P184
 0000:00043100       PtrSsmGet_Cumulative_Ash_Ratio_P186
 0000:00043104       PtrSsmGet_Pressure_Difference_between_Diesel_Particulate_Filter_DPF_Inlet_and_Outlet_P187
 0000:00043108       PtrSsmGet_Exhaust_Gas_Temperature_at_Catalyst_Inlet_P188
 0000:0004310C       PtrSsmGet_Exhaust_Gas_Temperature_at_Diesel_Particulate_Filter_DPF_Inlet_P189
 0000:00043110       PtrSsmGet_Estimated_Catalyst_Temperature_P190
 0000:00043114       PtrSsmGet_Estimated_Temperature_of_the_Diesel_Particulate_Filter_DPF_P191
 0000:00043118       PtrSsmGet_Soot_Accumulation_Ratio_P192
 0000:0004311C       PtrSsmGet_Oil_Dilution_Ratio_P193
 0000:00043178       PtrSsmGet_FrontRear_Wheel_Rotation_Ratio_P194
 0000:0004317C       PtrSsmGet_ABSVDC_Front_Wheel_Mean_Wheel_Speed_P195
 0000:00043180       PtrSsmGet_ABSVDC_Rear_Wheel_Mean_Wheel_Speed_P196
 0000:00043184       PtrSsmGet_Automatic_Transmission_Fluid_ATF_Deterioration_Degree_P197
 0000:0004318C       PtrSsmGet_Accumulated_Count_of_Overspeed_Instances_Very_High_RPM_P198
 0000:00043190       PtrSsmGet_Accumulated_Count_of_Overspeed_Instances_High_RPM_P199
 0000:000475B4       P0335_CRANKSHAFT_POS_SENSOR_A_MALFUNCTION
 0000:000475B5       P0336_CRANKSHAFT_POS_SENSOR_A_RANGEPERF
 0000:000475B8       P0604_CONTROL_MODULE_RAM_ERROR
 0000:000475B9       P0102_MAF_SENSOR_LOW_INPUT
 0000:000475BA       P0103_MAF_SENSOR_HIGH_INPUT
 0000:000475BC       P0327_KNOCK_SENSOR_1_LOW_INPUT
 0000:000475BD       P0328_KNOCK_SENSOR_1_HIGH_INPUT
 0000:000475BE       P0122_TPS_A_LOW_INPUT
 0000:000475BF       P0123_TPS_A_HIGH_INPUT
 0000:000475C1       P0117_COOLANT_TEMP_SENSOR_LOW_INPUT
 0000:000475C2       P0118_COOLANT_TEMP_SENSOR_HIGH_INPUT
 0000:000475C3       P0464_FUEL_LEVEL_SENSOR_INTERMITTENT
 0000:000475C4       P0125_INSUFFICIENT_COOLANT_TEMP_FUELING
 0000:000475C5       P0462_FUEL_LEVEL_SENSOR_LOW_INPUT
 0000:000475C6       P0463_FUEL_LEVEL_SENSOR_HIGH_INPUT
 0000:000475C7       P0461_FUEL_LEVEL_SENSOR_RANGEPERF
 0000:000475C9       P1518_STARTER_SWITCH_LOW_INPUT
 0000:000475CA       P0512_STARTER_REQUEST_CIRCUIT
 0000:000475CB       P0452_EVAP_PRESSURE_SENSOR_LOW_INPUT
 0000:000475CC       P0453_EVAP_PRESSURE_SENSOR_HIGH_INPUT
 0000:000475CD       P0451_EVAP_PRESSURE_SENSOR_RANGEPERF
 0000:000475CE       P0851_NEUTRAL_SWITCH_INPUT_LOW
 0000:000475CF       P0182_FUEL_TEMP_SENSOR_A_LOW_INPUT
 0000:000475D0       P0183_FUEL_TEMP_SENSOR_A_HIGH_INPUT
 0000:000475D1       P0181_FUEL_TEMP_SENSOR_A_RANGEPERF
 0000:000475D2       P0852_NEUTRAL_SWITCH_INPUT_HIGH
 0000:000475D3       P1446_FUEL_TANK_SENSOR_CONTROL_CIRCUIT_LOW
 0000:000475D4       P1447_FUEL_TANK_SENSOR_CONTROL_CIRCUIT_HIGH
 0000:000475D5       P1090_TGV_SYSTEM_1_VALVE_OPEN
 0000:000475D6       P1091_TGV_SYSTEM_1_VALVE_CLOSE
 0000:000475D7       P1092_TGV_SYSTEM_2_VALVE_OPEN
 0000:000475D8       P1093_TGV_SYSTEM_2_VALVE_CLOSE
 0000:000475DB       P0506_IDLE_CONTROL_RPM_LOWER_THAN_EXPECTED
 0000:000475DC       P0507_IDLE_CONTROL_RPM_HIGH_THAN_EXPECTED
 0000:000475DD       P1448_FUEL_TANK_SENSOR_CONTROL_RANGEPERF
 0000:000475DE       P0691_RADIATOR_FAN_CIRCUIT_LOW
 0000:000475DF       P0692_RADIATOR_FAN_CIRCUIT_HIGH
 0000:000475E0       P0483_RADIATOR_FAN_RATIONALITY_CHECK
 0000:000475E4       P0011_CAMSHAFT_POS__TIMING_OVERADVANCED_1
 0000:000475E5       P0021_CAMSHAFT_POS__TIMING_OVERADVANCED_2
 0000:000475E6       P1400_FUEL_TANK_PRESSURE_SOL_LOW
 0000:000475E7       P1420_FUEL_TANK_PRESSURE_SOL_HIGH_INPUT
 0000:000475E8       P0458_EVAP_PURGE_VALVE_CIRCUIT_LOW
 0000:000475E9       P0459_EVAP_PURGE_VALVE_CIRCUIT_HIGH
 0000:000475EC       P1443_VENT_CONTROL_SOLENOID_FUNCTION_PROBLEM
 0000:000475ED       P0447_EVAP_VENT_CONTROL_CIRCUIT_OPEN
 0000:000475EE       P0448_EVAP_VENT_CONTROL_CIRCUIT_SHORTED
 0000:000475EF       P0133_FRONT_O2_SENSOR_SLOW_RESPONSE
 0000:000475F0       P0139_REAR_O2_SENSOR_SLOW_RESPONSE
 0000:000475F1       P1152_FRONT_O2_SENSOR_RANGEPERF_LOW_B1_S1
 0000:000475F2       P1153_FRONT_O2_SENSOR_RANGEPERF_HIGH_B1_S1
 0000:000475F3       P0420_CAT_EFFICIENCY_BELOW_THRESHOLD
 0000:000475F4       P0442_EVAP_LEAK_DETECTED_SMALL
 0000:000475F5       P0456_EVAP_LEAK_DETECTED_VERY_SMALL
 0000:000475F6       P0171_SYSTEM_TOO_LEAN
 0000:000475F7       P0172_SYSTEM_TOO_RICH
 0000:000475F8       P0301_MISFIRE_CYLINDER_1
 0000:000475F9       P0302_MISFIRE_CYLINDER_2
 0000:000475FA       P0303_MISFIRE_CYLINDER_3
 0000:000475FB       P0304_MISFIRE_CYLINDER_4
 0000:000475FC       P1301_MISFIRE_HIGH_TEMP_EXHAUST_GAS
 0000:000475FD       P0457_EVAP_LEAK_DETECTED_FUEL_CAP
 0000:000475FE       P0000_PASS_CODE_NO_DTC_DETECTED
 0000:000475FF       P0000_PASS_CODE_NO_DTC_DETECTED_
 0000:00047600       P0137_REAR_O2_SENSOR_LOW_VOLTAGE
 0000:00047601       P0131_FRONT_O2_SENSOR_LOW_INPUT
 0000:00047602       P0132_FRONT_O2_SENSOR_HIGH_INPUT
 0000:00047603       P0138_REAR_O2_SENSOR_HIGH_VOLTAGE
 0000:00047604       P0112_IAT_SENSOR_LOW_INPUT
 0000:00047605       P0113_IAT_SENSOR_HIGH_INPUT
 0000:00047606       P0111_IAT_SENSOR_RANGEPERF
 0000:00047607       P0038_REAR_O2_SENSOR_HIGH_INPUT
 0000:00047608       P0032_FRONT_O2_SENSOR_HIGH_INPUT
 0000:00047609       P0037_REAR_O2_SENSOR_LOW_INPUT
 0000:0004760A       P0031_FRONT_O2_SENSOR_LOW_INPUT
 0000:0004760B       P1110_ATMOS_PRESSURE_SENSOR_LOW_INPUT
 0000:0004760C       P1111_ATMOS_PRESSURE_SENSOR_HIGH_INPUT
 0000:0004760D       P0107_MAP_SENSOR_LOW_INPUT
 0000:0004760E       P0108_MAP_SENSOR_HIGH_INPUT
 0000:0004760F       P0128_THERMOSTAT_MALFUNCTION
 0000:00047610       P1491_PCV_BLOWBY_FUNCTION_PROBLEM
 0000:00047611       P1560_BACKUP_VOLTAGE_MALFUNCTION
 0000:00047614       P0245_WASTEGATE_SOLENOID_A_LOW
 0000:00047615       P0246_WASTEGATE_SOLENOID_A_HIGH
 0000:00047616       P0244_WASTEGATE_SOLENOID_A_RANGEPERF
 0000:00047617       P1095_TGV_SIGNAL_1_SHORT
 0000:00047618       P1097_TGV_SIGNAL_2_SHORT
 0000:00047619       P1094_TGV_SIGNAL_1_OPEN
 0000:0004761A       P1096_TGV_SIGNAL_2_OPEN
 0000:0004761F       P0545_EGT_SENSOR_CIRCUIT_LOW
 0000:00047620       P0546_EGT_SENSOR_CIRCUIT_HIGH
 0000:00047621       P1312_EGT_SENSOR_MALFUNCTION
 0000:00047622       P1544_EGT_TOO_HIGH
 0000:00047623       P1086_TGV_POS_2_CIRCUIT_LOW
 0000:00047624       P1087_TGV_POS_2_CIRCUIT_HIGH
 0000:00047625       P1088_TGV_POS_1_CIRCUIT_LOW
 0000:00047626       P1089_TGV_POS_1_CIRCUIT_HIGH
 0000:00047627       P1282_PCV_SYSTEM_CIRCUIT_OPEN
 0000:0004762A       P0502_VEHICLE_SPEED_SENSOR_LOW_INPUT
 0000:0004762B       P0230_FUEL_PUMP_PRIMARY_CIRCUIT
 0000:0004762C       P0068_MAP_SENSOR_RANGEPERF
 0000:0004762D       P0129_ATMOS_PRESSURE_SENSOR_RANGEPERF
 0000:0004762E       P0519_IDLE_CONTROL_MALFUNCTION_FAILSAFE
 0000:0004762F       P0101_MAF_SENSOR_RANGEPERF
 0000:00047630       P0134_FRONT_O2_SENSOR_NO_ACTIVITY
 0000:00047631       P0030_FRONT_O2_SENSOR_RANGEPERF
 0000:00047632       P0503_VEHICLE_SPEED_SENSOR_INTERMITTENT
 0000:00047633       P2109_TPS_A_MINIMUM_STOP_PERF
 0000:00047634       P0222_TPS_B_LOW_INPUT
 0000:00047635       P0223_TPS_B_HIGH_INPUT
 0000:00047636       P1160_ABNORMAL_RETURN_SPRING
 0000:00047637       P2102_THROTTLE_ACTUATOR_CIRCUIT_LOW
 0000:00047638       P2103_THROTTLE_ACTUATOR_CIRCUIT_HIGH
 0000:00047639       P2101_THROTTLE_ACTUATOR_CIRCUIT_RANGEPERF
 0000:0004763A       P2096_POST_CATALYST_TOO_LEAN_B1
 0000:0004763B       P0638_THROTTLE_ACTUATOR_RANGEPERF
 0000:0004763C       P0607_CONTROL_MODULE_PERFORMANCE
 0000:0004763D       P2138_TPS_DE_VOLTAGE
 0000:0004763E       P2127_TPS_E_CIRCUIT_LOW_INPUT
 0000:0004763F       P2128_TPS_E_CIRCUIT_HIGH_INPUT
 0000:00047640       P2122_TPS_D_CIRCUIT_LOW_INPUT
 0000:00047641       P2123_TPS_D_CIRCUIT_HIGH_INPUT
 0000:00047642       P2135_TPS_AB_VOLTAGE
 0000:00047643       P2097_POST_CATALYST_TOO_RICH_B1
 0000:00047644       P0600_SERIAL_COMMUNICATION_LINK
 0000:00047647       P0345_CAMSHAFT_POS_SENSOR_A_BANK_2
 0000:00047648       P0340_CAMSHAFT_POS_SENSOR_A_MALFUNCTION_
 0000:00047649       P0605_CONTROL_MODULE_ROM_ERROR
 0000:0004764E       P2093_OCV_SOLENOID_A2_CIRCUIT_SHORT
 0000:0004764F       P2092_OCV_SOLENOID_A2_CIRCUIT_OPEN
 0000:00047650       P2089_OCV_SOLENOID_A1_CIRCUIT_SHORT
 0000:00047651       P2088_OCV_SOLENOID_A1_CIRCUIT_OPEN
 0000:00047652       P0700_TRANSMISSION_CONTROL_SYSTEM
 0000:00049DE6       nullsub_24
 0000:0004A812       Force_Pass_Readiness_Monitors
 0000:0004CE54       aBBF
 0000:0004CFE0       SBR_CEL_EVAL_JUMPS
 0000:0004D2A2       nullsub_26
 0000:0004D2A6       nullsub_27
 0000:0004D600       SBR_CEL_LIGHT_TRIGGER
 0000:0004E322       SBR_CEL_EVAL_0
 0000:0004E3B8       SBR_CEL_EVAL_1
 0000:00052770       aCOTUlF
 0000:00057914       Coolant_Temp_Sensor_Scaling_Y_Axis
 0000:00057984       Coolant_Temp_Sensor_Scaling
 0000:000579F4       Intake_Temp_Sensor_Scaling_Y_Axis
 0000:00057A6C       Intake_Temp_Sensor_Scaling
 0000:00057BEC       aA2zj500i_0
 0000:00057C5C       Atmospheric_Pressure_Sensor_Scaling
 0000:00057CB8       Manifold_Pressure_Sensor_Scaling
 0000:00057EC4       aA
 0000:00057ED6       aA_0
 0000:00057EDA       aA_1
 0000:00057EEC       aA_2
 0000:00057EF0       aFFa
 0000:00057EF6       aA_3
 0000:00057EF8       aA_4
 0000:00057EFA       aA_5
 0000:00057F06       aFFa_0
 0000:00057F0C       aA_6
 0000:00057F0E       aA_7
 0000:00057F10       aA_8
 0000:00057F1C       aA_9
 0000:00057F1E       aA_10
 0000:00057F20       aA_11
 0000:00057F22       aA_12
 0000:00057F32       aA_13
 0000:00057F34       aA_14
 0000:00057F36       aA_15
 0000:00057F38       aA_16
 0000:00057F48       aA_17
 0000:00057F4A       aA_18
 0000:00057F4C       aA_19
 0000:00057F4E       aA_20
 0000:00057FD9       Boost_Control_Disable_Delay_Fine_Correction
 0000:00057FEC       TD_Activation_Thresholds_Target_Boost
 0000:00057FF8       TD_Integral_Negative_Activation_Boost_Error
 0000:00058000       TD_Integral_Positive_Activation_Boost_Error
 0000:00058004       TD_Integral_Positive_Activation_Wastegate_Duty
 0000:00058018       TD_Activation_Thresholds_RPM
 0000:00058020       TD_Integral_Cumulative_Range_WGDC_Correction
 0000:00058030       Boost_Control_Disable_Fine_Correction
 0000:00058034       Boost_Control_Disable_IAM
 0000:0005804C       Target_Boost_Compensation_1st_Gear_Speed_Disable
 0000:00058054       Target_Boost_Compensation_1st_Gear
 0000:00058058       InitialMax_Wastegate_Duty_Compensation_ECT_Y_Axis
 0000:000580A4       InitialMax_Wastegate_Duty_Compensation_IAT_Y_Axis
 0000:000580E4       InitialMax_Wastegate_Duty_Compensation_IAT
 0000:00058104       InitialMax_Wastegate_Duty_Compensation_ECT
 0000:00058124       Target_Boost_Compensation_ECT
 0000:00058148       Target_Boost_Compensation_Atm_Pressure_Multiplier_Offset_Y_Axis
 0000:00058158       Target_Boost_Compensation_Atm_Pressure_Multiplier_Offset
 0000:0005815C       Turbo_Dynamics_Proportional_Y_Axis
 0000:00058180       Turbo_Dynamics_Proportional
 0000:00058194       Turbo_Dynamics_Integral_Negative_Y_Axis
 0000:000581B8       Turbo_Dynamics_Integral_Negative
 0000:000581CC       Turbo_Dynamics_Integral_Positive_Y_Axis
 0000:000581F0       Turbo_Dynamics_Integral_Positive
 0000:0005821C       Target_Boost_Compensation_Atm_Pressure_Multiplier_Y_Axis
 0000:0005822C       Target_Boost_Compensation_Atm_Pressure_Multiplier
 0000:00058248       InitialMax_Wastegate_Duty_Compensation_Atm_Pressure_X_Axis
 0000:00058260       InitialMax_Wastegate_Duty_Compensation_Atm_Pressure_Y_Axis
 0000:00058270       InitialMax_Wastegate_Duty_Compensation_Atm_Pressure
 0000:000582D0       Initial_Wastegate_Duty_X_Axis
 0000:000582F0       Initial_Wastegate_Duty_Y_Axis
 0000:00058320       Initial_Wastegate_Duty
 0000:000583F8       Max_Wastegate_Duty_X_Axis
 0000:00058418       Max_Wastegate_Duty_Y_Axis
 0000:00058438       Max_Wastegate_Duty
 0000:00058500       Target_Boost_X_Axis
 0000:00058520       Target_Boost_Y_Axis
 0000:00058550       Target_Boost
 0000:00059100       aAAACCCCCCAAAAA
 0000:0005916E       aD
 0000:00059170       aD_0
 0000:00059172       aD_1
 0000:00059174       aD_2
 0000:00059176       aD_3
 0000:00059178       aD_4
 0000:0005917A       aD_5
 0000:0005917C       aD_6
 0000:00059298       aYBt33bI?bgo?bg
 0000:000592B8       a@
 0000:000592C0       a@_0
 0000:000592C4       aBIbU?a
 0000:000592D4       a?
 0000:00059344       MAF_Limit_Maximum
 0000:00059348       Load_Filter_A_59348
 0000:0005934C       Load_Filter_B_5934C
 0000:00059350       Load_Filter_Final_59350
 0000:00059558       Gear_Determination_Thresholds
 0000:00059604       Speed_Limiting_Throttle
 0000:00059740       Front_Oxygen_Sensor_Compensation_Atm_Pressure_Y_Axis
 0000:00059750       Front_Oxygen_Sensor_Compensation_Atm_Pressure
 0000:000599DC       Engine_Load_Compensation_MP_X_Axis
 0000:00059A08       Engine_Load_Compensation_MP_Y_Axis
 0000:00059A38       Engine_Load_Compensation_MP
 0000:00059ABC       MAF_Compensation_IAT_X_Axis
 0000:00059AD0       MAF_Compensation_IAT_Y_Axis
 0000:00059AF0       MAF_Compensation_IAT
 0000:0005A00D       Manifold_Pressure_Sensor_CEL_Delays
 0000:0005A218       a?P?sssCffbr
 0000:0005A22C       aB_0
 0000:0005A4FC       aLL?333bm
 0000:0005A510       aAa
 0000:0005A514       a@_1
 0000:0005A51C       aBh_0
 0000:0005AB0C       aUsI1VX@uxb@uxb
 0000:0005B09C       aUPTJEAAiMshAId
 0000:0005CE07       Tipin_Enrichment_Disable_Applied_Counter_Threshold
 0000:0005CE08       Tipin_Enrichment_Applied_Counter_Reset
 0000:0005CE09       Tipin_Throttle_Cumulative_Reset
 0000:0005CE3E       CL_to_OL_Delay
 0000:0005CF14       Injector_Flow_Scaling
 0000:0005CF18       Min_Primary_Base_Enrich_3_Decay_Multiplier
 0000:0005CF30       aLLUtUP?a
 0000:0005CF44       aLG8qi@
 0000:0005CFB0       aL?fff?333?s33
 0000:0005D028       a5NuM4a
 0000:0005D044       aPRJlZqaITKdL6z
 0000:0005D0B8       a?u33?j_L
 0000:0005D0CC       aUP?a
 0000:0005D12C       AF_Learning_1_Limits
 0000:0005D138       AF_Learning_1_Airflow_Ranges
 0000:0005D180       Minimum_Active_Primary_Open_Loop_Enrichment
 0000:0005D184       CL_to_OL_Transition_with_Delay_Throttle_Hysteresis
 0000:0005D188       CL_to_OL_Transition_with_Delay_BPW_Hysteresis
 0000:0005D18C       CL_Delay_Minimum_ECT
 0000:0005D1B8       CL_Delay_Maximum_Engine_Speed_Per_Gear
 0000:0005D1E0       CL_Delay_Maximum_Engine_Speed_Neutral
 0000:0005D1F8       CL_Delay_Maximum_Throttle
 0000:0005D1FC       CL_Delay_Maximum_Vehicle_Speed
 0000:0005D204       CL_Delay_Maximum_EGT
 0000:0005D21C       Primary_Open_Loop_Fuel_Map_Switch_IAM
 0000:0005D318       Minimum_Tipin_Enrichment_Activation_Throttle
 0000:0005D31C       Minimum_Tipin_Enrichment_Activation
 0000:0005D320       Tipin_Enrichment_Disable_Throttle_Cumulative_Threshold
 0000:0005D364       Rev_Limit_Fuel_Cut
 0000:0005D36C       Rev_Limit_Fuel_Resume_Boost
 0000:0005D3B4       Speed_Limiting_Enable_Fuel_Cut
 0000:0005D3BC       Speed_Limiting_Disable_Fuel_Cut
 0000:0005D430       Min_Primary_Base_Enrich_3_Decay_Delay_B_Y_Axis
 0000:0005D4C0       Cranking_Fuel_IPW_Compensation_Accelerator_Y_Axis
 0000:0005D4D8       Cranking_Fuel_IPW_Compensation_Accelerator
 0000:0005D4EE       Min_Primary_Base_Enrich_3_Decay_Delay_A
 0000:0005D4FE       Min_Primary_Base_Enrich_3_Decay_Delay_B
 0000:0005D52E       Min_Primary_Base_Enrichment_1
 0000:0005D6AC       CL_to_OL_Transition_with_Delay_Throttle_Y_Axis
 0000:0005D6EC       CL_to_OL_Transition_with_Delay_Throttle
 0000:0005D6FC       Minimum_Primary_Open_Loop_Enrichment_Throttle_Y_Axis
 0000:0005D714       Minimum_Primary_Open_Loop_Enrichment_Throttle
 0000:0005D71C       Primary_Open_Loop_Fueling_Compensation_Timing_Compensation__Y_Axis
 0000:0005D734       Primary_Open_Loop_Fueling_Compensation_Timing_Compensation_
 0000:0005D794       Tipin_Enrichment_Compensation_Boost_Error_Y_Axis
 0000:0005D7B8       Tipin_Enrichment_Compensation_Boost_Error
 0000:0005D842       Cranking_Fuel_Injector_Pulse_Width_A_ECT
 0000:0005D862       Cranking_Fuel_Injector_Pulse_Width_B_ECT
 0000:0005D882       Cranking_Fuel_Injector_Pulse_Width_C_ECT
 0000:0005D8A2       Cranking_Fuel_Injector_Pulse_Width_D_ECT
 0000:0005D8C2       Min_Primary_Base_Enrich_3_Initial_Start_1A
 0000:0005D8E2       Min_Primary_Base_Enrich_3_Initial_Start_1B
 0000:0005D902       Min_Primary_Base_Enrich_3_Initial_Start_2A
 0000:0005D922       Min_Primary_Base_Enrich_3_Initial_Start_2B
 0000:0005D942       Min_Primary_Base_Enrich_2_Initial_Start_1A
 0000:0005D962       Min_Primary_Base_Enrich_2_Initial_Start_2A
 0000:0005D982       Min_Primary_Base_Enrich_2_Initial_Start_1B
 0000:0005D9A2       Min_Primary_Base_Enrich_2_Initial_Start_2B
 0000:0005D9C2       Min_Primary_Base_Enrich_2_Decay_Step_1
 0000:0005D9E2       Min_Primary_Base_Enrich_2_Decay_Step_2
 0000:0005DD94       CL_to_OL_Transition_with_Delay_Base_Pulse_Width_Y_Axis
 0000:0005DDD4       CL_to_OL_Transition_with_Delay_Base_Pulse_Width
 0000:0005DDF4       Primary_Open_Loop_Fueling_Compensation_ECT
 0000:0005DDFC       a1KDzgoqYA
 0000:0005DE0C       aA_21
 0000:0005DE0E       aA_22
 0000:0005DE10       aA_23
 0000:0005DE12       aA_24
 0000:0005DE18       aC_1
 0000:0005DEB4       Throttle_Tipin_Enrichment_Y_Axis
 0000:0005DEFC       Throttle_Tipin_Enrichment
 0000:0005DF20       Tipin_Enrichment_Compensation_ECT
 0000:0005DF60       Boost_Limit_Fuel_Cut_Y_Axis
 0000:0005DF78       Boost_Limit_Fuel_Cut
 0000:0005E100       Cranking_Fuel_IPW_Compensation_RPM_X_Axis
 0000:0005E114       Cranking_Fuel_IPW_Compensation_RPM_Y_Axis
 0000:0005E130       Cranking_Fuel_IPW_Compensation_RPM
 0000:0005E1FC       Min_Primary_Base_Enrichment_1_NonPrimary_OL_X_Axis
 0000:0005E21C       Min_Primary_Base_Enrichment_1_NonPrimary_OL_Y_Axis
 0000:0005E228       Min_Primary_Base_Enrichment_1_NonPrimary_OL
 0000:0005E254       Primary_Open_Loop_Fueling_X_Axis
 0000:0005E290       Primary_Open_Loop_Fueling_Y_Axis
 0000:0005E2D8       Primary_Open_Loop_Fueling
 0000:0005E3FC       Primary_Open_Loop_Fueling_Failsafe_X_Axis
 0000:0005E438       Primary_Open_Loop_Fueling_Failsafe_Y_Axis
 0000:0005E480       Primary_Open_Loop_Fueling_Failsafe
 0000:0005E590       Per_Injector_Primary_Fuel_Offset_Compensation_A_X_Axis
 0000:0005E5D4       Per_Injector_Primary_Fuel_Offset_Compensation_A_Y_Axis
 0000:0005E60C       Per_Injector_Primary_Fuel_Offset_Compensation_A
 0000:0005E6FC       Per_Injector_Primary_Fuel_Offset_Compensation_B_X_Axis
 0000:0005E740       Per_Injector_Primary_Fuel_Offset_Compensation_B_Y_Axis
 0000:0005E778       Per_Injector_Primary_Fuel_Offset_Compensation_B
 0000:0005E868       Per_Injector_Primary_Fuel_Offset_Compensation_C_X_Axis
 0000:0005E8AC       Per_Injector_Primary_Fuel_Offset_Compensation_C_Y_Axis
 0000:0005E8E4       Per_Injector_Primary_Fuel_Offset_Compensation_C
 0000:0005E9D4       Per_Injector_Primary_Fuel_Offset_Compensation_D_X_Axis
 0000:0005EA18       Per_Injector_Primary_Fuel_Offset_Compensation_D_Y_Axis
 0000:0005EA50       Per_Injector_Primary_Fuel_Offset_Compensation_D
 0000:0005EC98       CL_Fueling_Target_Compensation_A_ECT_Y_Axis
 0000:0005ECA4       CL_Fueling_Target_Compensation_A_ECT
 0000:0005ED4C       CL_Fueling_Target_Compensation_B_ECT_Y_Axis
 0000:0005ED58       CL_Fueling_Target_Compensation_B_ECT
 0000:0005EDA4       aJfjfjfsSMAdada
 0000:0005EDD0       CL_Fueling_Target_Compensation_Load_X_Axis
 0000:0005EDFC       CL_Fueling_Target_Compensation_Load_Y_Axis
 0000:0005EE24       CL_Fueling_Target_Compensation_Load
 0000:0005EF10       a33333333
 0000:0005EF5C       Feedback_Correction_Negative_Advance_Delay
 0000:0005EF6A       Fine_Correction_Advance_Delay
 0000:0005EFCC       a?333?333?333?3
 0000:0005F030       Base_Timing_Idle_Vehicle_Speed_Threshold
 0000:0005F05C       Base_Timing_Idle_Below_Speed_Threshold
 0000:0005F060       Timing_Comp_Min_Load_IAT
 0000:0005F168       Timing_Comp_Maximum_RPM_Per_Cylinder
 0000:0005F16C       Timing_Comp_Minimum_Load_Per_Cylinder
 0000:0005F170       Timing_Comp_Minimum_Coolant_Temp_Per_Cylinder
 0000:0005F180       Feedback_Correction_Retard_Limit
 0000:0005F184       Feedback_Correction_Retard_Value
 0000:0005F188       Feedback_Correction_Negative_Advance_Value
 0000:0005F1A0       Feedback_Correction_Range_RPM
 0000:0005F1B0       Feedback_Correction_Minimum_Load
 0000:0005F1B8       Extended_Feedback_Correction_High_RPM_Compensation
 0000:0005F22C       Advance_Multiplier_Initial
 0000:0005F230       Rough_Correction_Range_RPM
 0000:0005F240       Rough_Correction_Range_Load
 0000:0005F250       Rough_Correction_Minimum_KC_Advance_Map_Value
 0000:0005F254       Advance_Multiplier_Step_Value
 0000:0005F27C       Fine_Correction_Advance_Limit
 0000:0005F280       Fine_Correction_Retard_Limit
 0000:0005F284       Fine_Correction_Advance_Value
 0000:0005F288       Fine_Correction_Range_RPM
 0000:0005F298       Fine_Correction_Range_Load
 0000:0005F2A8       Fine_Correction_Columns_Load
 0000:0005F2B8       Fine_Correction_Rows_RPM
 0000:0005F2D0       Fine_Correction_Retard_Value
 0000:0005F2DC       Timing_Compensation_ECT_Y_Axis
 0000:0005F3C4       aAgggg
 0000:0005F40C       Base_Timing_Idle_Above_Speed_Threshold_Y_Axis
 0000:0005F430       Base_Timing_Idle_Above_Speed_Threshold
 0000:0005F449       Timing_Compensation_ECT
 0000:0005F45C       Timing_Compensation_IAT_Y_Axis
 0000:0005F49C       Timing_Compensation_IAT
 0000:0005F85C       Timing_Compensation_Per_Cylinder_A___Y_Axis
 0000:0005F894       Timing_Compensation_Per_Cylinder_A__
 0000:0005F8A4       Timing_Compensation_Per_Cylinder_B___Y_Axis
 0000:0005F8DC       Timing_Compensation_Per_Cylinder_B__
 0000:0005F8EC       Timing_Compensation_Per_Cylinder_C___Y_Axis
 0000:0005F924       Timing_Compensation_Per_Cylinder_C__
 0000:0005F934       Timing_Compensation_Per_Cylinder_D___Y_Axis
 0000:0005F96C       Timing_Compensation_Per_Cylinder_D__
 0000:0005F97C       Rough_Correction_Learning_Delay_Increasing_Y_Axis
 0000:0005F9A4       Rough_Correction_Learning_Delay_Increasing
 0000:0005FCB4       Base_Timing_X_Axis
 0000:0005FCF0       Base_Timing_Y_Axis
 0000:0005FD38       Base_Timing
 0000:0005FF84       Knock_Correction_Advance_Max_X_Axis
 0000:0005FFC4       Knock_Correction_Advance_Max_Y_Axis
 0000:0006000C       Knock_Correction_Advance_Max
 0000:00060140       Timing_Compensation_MRP_X_Axis
 0000:00060154       Timing_Compensation_MRP_Y_Axis
 0000:00060160       Timing_Compensation_MRP
 0000:00060574       aGAFf@FfL
 0000:000605F4       aP
 0000:00060608       a@333
 0000:00060610       aBa
 0000:00060614       aL
 0000:00060620       aBh
 0000:00060624       aB
 0000:00060628       aC
 0000:0006062C       Idle_Speed_Target_C_Y_Axis
 0000:00060B54       Idle_Speed_Target_A
 0000:00060B94       Idle_Speed_Target_B
 0000:00060BD4       Idle_Speed_Target_C
 0000:00061048       aAjffbFfbyssbjf
 0000:00061348       Target_Throttle_Plate_Position_Requested_Torque_X_Axis
 0000:0006138C       Target_Throttle_Plate_Position_Requested_Torque_Y_Axis
 0000:000613CC       Target_Throttle_Plate_Position_Requested_Torque
 0000:000615EC       Requested_Torque_Accelerator_Pedal_X_Axis
 0000:00061628       Requested_Torque_Accelerator_Pedal_Y_Axis
 0000:00061664       Requested_Torque_Accelerator_Pedal
 0000:00061B72       Manifold_Pressure_Sensor_Limits_CEL
 0000:00061BB0       a@33@33?Zs?Goez
 0000:00061BC4       a@p
 0000:00061C18       Injector_Latency_Y_Axis
 0000:00061C2C       Injector_Latency
 0000:00061D90       Fuel_Temp_Sensor_Scaling_Y_Axis
 0000:00061E08       Fuel_Temp_Sensor_Scaling
 0000:00061E80       MAF_Sensor_Scaling_Y_Axis
 0000:00061F40       MAF_Sensor_Scaling
 0000:00062000       EGT_Sensor_Scaling_Y_Axis
 0000:00062078       EGT_Sensor_Scaling
 0000:000620F0       Front_Oxygen_Sensor_Scaling_Y_Axis
 0000:00062124       Front_Oxygen_Sensor_Scaling
 0000:000628A0       Radiator_Fan_Modes_ECT
 0000:000628B0       Radiator_Fan_Modes_Veh_Speed
 0000:00062CE4       aAaaaaaaaaaaaaa
 0000:00063420       Intake_Cam_Advance_Angle_AVCS_X_Axis
 0000:00063458       Intake_Cam_Advance_Angle_AVCS_Y_Axis
 0000:000634A0       Intake_Cam_Advance_Angle_AVCS
 0000:0006988E       nullsub_10
 0000:00072B28       aCJCJs
 0000:00075406       aCOF0t8Ls7i
 0000:000778B6       aCoUgtgdscm3P
 0000:00077B7A       aCoUgtgdscm3P_0
 0000:0007B848       nullsub_11
 0000:0007B85C       nullsub_12
 0000:0007B886       nullsub_29
 0000:0007FB80       Checksum_Fix
 0000:FFFF84FC       E_AF_Learning_1_A_StoredExt_E44
 0000:FFFF8504       E_AF_Learning_1_B_StoredExt_E45
 0000:FFFF850C       E_AF_Learning_1_C_StoredExt_E46
 0000:FFFF8514       E_AF_Learning_1_D_StoredExt_E47
 0000:FFFF8550       E_IAM_4byteExt_E31
 0000:FFFF9022       E_MAF_VOLTS_DIRECT_9022
 0000:FFFF90B8       E_SSM_IAT_90B8
 0000:FFFF90F4       E_MAF_GS_DIRECT_90F4
 0000:FFFF913C       E_SSM_Atmo_Press_913C
 0000:FFFFA284       E_Boost_ErrorExt_E35
 0000:FFFFA288       E_Target_Boost_4byteExt_E36
 0000:FFFFA28C       E_Turbo_Dynamics_Proportional_4byteExt_E37
 0000:FFFFA290       E_Turbo_Dynamics_Integral_4byteExt_E34
 0000:FFFFA2AC       E_Primary_Wastegate_Duty_MaximumExt_4byteExt__E77
 0000:FFFFA4E8       E_CruiseLight_Flags_A4E8
 0000:FFFFA528       E_Manifold_Relative_Sea_Level_Pressure_4byteExt_E52
 0000:FFFFA52C       E_Manifold_Relative_Pressure_4byteExt_E113
 0000:FFFFA5B8       E_Throttle_Plate_Opening_Angle_4byteExt_E38
 0000:FFFFA5BC       E_Tipin_ThrottleExt_E54
 0000:FFFFA6AC       E_Engine_Load_4ByteExt_E32
 0000:FFFFA78C       E_AF_Sensor_1_4byteExt_E91
 0000:FFFFA7CC       E_Vehicle_Speed_A7CC
 0000:FFFFA7DC       E_Engine_Speed_A7DC
 0000:FFFFA8D1       E_Gear_CalculatedExt_E59
 0000:FFFFA9F0       E_Final_Fueling_Base_4byteExt_E123
 0000:FFFFAA20       E_Primary_Enrichment_Final_4byteExt_E115
 0000:FFFFAA9C       E_AF_Correction_1_4byteExt_E81
 0000:FFFFAAE4       E_Closed_Loop_Fueling_Target_4byteExt_E121
 0000:FFFFABE4       E_AF_Learning_1_4byteExt_E48
 0000:FFFFABED       E_AF_Learning_Airflow_Range_CurrentExt_E61
 0000:FFFFAC3C       E_Primary_Open_Loop_Map_Enrichment_4byteExt_E84
 0000:FFFFAD44       E_Tipin_Enrichment_Last_CalculatedExt_E55
 0000:FFFFAD94       E_Revlim_FuelCut_Flags_AD94
 0000:FFFFAE10       E_Fuel_Injector_1_Pulse_Width_4byteExt_E60
 0000:FFFFAE24       E_Fuel_Injector_1_Latency_4byteExt_E50
 0000:FFFFAF40       E_Ignition_Base_TimingExt_E53
 0000:FFFFB030       E_Feedback_Knock_Correction_4byteExt_E39
 0000:FFFFB074       E_Knock_Correction_Advance_IAM_onlyExt_E40
 0000:FFFFB08C       E_Fine_Learning_Knock_Correction_4byteExt_E41
 0000:FFFFB095       E_Fine_Learning_Table_OffsetExt_E58
 0000:FFFFB168       E_Target_Throttle_Plate_PositionExt_E57
 0000:FFFFB16C       E_Requested_TorqueExt_E56
 0000:FFFFB2E4       E_Idle_Speed_Map_SelectionExt_E49
 0000:FFFFB81C       E_Map_Ratio_PrimaryExt_E42
 0000:FFFFC11D       E_CLOL_FuelingExt_E33
 0000:FFFFC17E       E_CEL_Trigger_Bit_C17E
 0000:FFFFC4D0       ROMHOLESTART_0
 MakeNameEx(0x47604, "P0112_IAT_SENSOR_LOW_INPUT_", SN_CHECK);
MakeNameEx(0x47605, "P0113_IAT_SENSOR_HIGH_INPUT_", SN_CHECK);
MakeNameEx(0x475C1, "P0117_COOLANT_TEMP_SENSOR_LOW_INPUT_", SN_CHECK);
MakeNameEx(0x475C2, "P0118_COOLANT_TEMP_SENSOR_HIGH_INPUT_", SN_CHECK);
MakeNameEx(0x475BE, "P0122_TPS_A_LOW_INPUT_", SN_CHECK);
MakeNameEx(0x475BF, "P0123_TPS_A_HIGH_INPUT_", SN_CHECK);
MakeNameEx(0x475C4, "P0125_INSUFFICIENT_COOLANT_TEMP_FUELING_", SN_CHECK);
MakeNameEx(0x4760F, "P0128_THERMOSTAT_MALFUNCTION_", SN_CHECK);
MakeNameEx(0x4762D, "P0129_ATMOS_PRESSURE_SENSOR_RANGEPERF_", SN_CHECK);
MakeNameEx(0x47601, "P0131_FRONT_O2_SENSOR_LOW_INPUT_", SN_CHECK);
MakeNameEx(0x47602, "P0132_FRONT_O2_SENSOR_HIGH_INPUT_", SN_CHECK);
MakeNameEx(0x475EF, "P0133_FRONT_O2_SENSOR_SLOW_RESPONSE_", SN_CHECK);
MakeNameEx(0x47630, "P0134_FRONT_O2_SENSOR_NO_ACTIVITY_", SN_CHECK);
MakeNameEx(0x47600, "P0137_REAR_O2_SENSOR_LOW_VOLTAGE_", SN_CHECK);
MakeNameEx(0x47603, "P0138_REAR_O2_SENSOR_HIGH_VOLTAGE_", SN_CHECK);
MakeNameEx(0x475F0, "P0139_REAR_O2_SENSOR_SLOW_RESPONSE_", SN_CHECK);
MakeNameEx(0x475F7, "P0172_SYSTEM_TOO_RICH_", SN_CHECK);
MakeNameEx(0x475D1, "P0181_FUEL_TEMP_SENSOR_A_RANGEPERF_", SN_CHECK);
MakeNameEx(0x475CF, "P0182_FUEL_TEMP_SENSOR_A_LOW_INPUT_", SN_CHECK);
MakeNameEx(0x475F6, "P0171_SYSTEM_TOO_LEAN_", SN_CHECK);
MakeNameEx(0x475D0, "P0183_FUEL_TEMP_SENSOR_A_HIGH_INPUT_", SN_CHECK);
MakeNameEx(0x47635, "P0223_TPS_B_HIGH_INPUT_", SN_CHECK);
MakeNameEx(0x4762B, "P0230_FUEL_PUMP_PRIMARY_CIRCUIT_", SN_CHECK);
MakeNameEx(0x47634, "P0222_TPS_B_LOW_INPUT_", SN_CHECK);
MakeNameEx(0x47616, "P0244_WASTEGATE_SOLENOID_A_RANGEPERF_", SN_CHECK);
MakeNameEx(0x47614, "P0245_WASTEGATE_SOLENOID_A_LOW_", SN_CHECK);
MakeNameEx(0x47615, "P0246_WASTEGATE_SOLENOID_A_HIGH_", SN_CHECK);
MakeNameEx(0x475F8, "P0301_MISFIRE_CYLINDER_1_", SN_CHECK);
MakeNameEx(0x475F9, "P0302_MISFIRE_CYLINDER_2_", SN_CHECK);
MakeNameEx(0x475FA, "P0303_MISFIRE_CYLINDER_3_", SN_CHECK);
MakeNameEx(0x475FB, "P0304_MISFIRE_CYLINDER_4_", SN_CHECK);
MakeNameEx(0x475BC, "P0327_KNOCK_SENSOR_1_LOW_INPUT_", SN_CHECK);
MakeNameEx(0x475BD, "P0328_KNOCK_SENSOR_1_HIGH_INPUT_", SN_CHECK);
MakeNameEx(0x475B4, "P0335_CRANKSHAFT_POS_SENSOR_A_MALFUNCTION_", SN_CHECK);
MakeNameEx(0x475B5, "P0336_CRANKSHAFT_POS_SENSOR_A_RANGEPERF_", SN_CHECK);
MakeNameEx(0x47647, "P0345_CAMSHAFT_POS_SENSOR_A_BANK_2_", SN_CHECK);
MakeNameEx(0x475F3, "P0420_CAT_EFFICIENCY_BELOW_THRESHOLD_", SN_CHECK);
MakeNameEx(0x475F4, "P0442_EVAP_LEAK_DETECTED_SMALL_", SN_CHECK);
MakeNameEx(0x475ED, "P0447_EVAP_VENT_CONTROL_CIRCUIT_OPEN_", SN_CHECK);
MakeNameEx(0x475EE, "P0448_EVAP_VENT_CONTROL_CIRCUIT_SHORTED_", SN_CHECK);
MakeNameEx(0x475CD, "P0451_EVAP_PRESSURE_SENSOR_RANGEPERF_", SN_CHECK);
MakeNameEx(0x475CB, "P0452_EVAP_PRESSURE_SENSOR_LOW_INPUT_", SN_CHECK);
MakeNameEx(0x475CC, "P0453_EVAP_PRESSURE_SENSOR_HIGH_INPUT_", SN_CHECK);
MakeNameEx(0x475F5, "P0456_EVAP_LEAK_DETECTED_VERY_SMALL_", SN_CHECK);
MakeNameEx(0x475FD, "P0457_EVAP_LEAK_DETECTED_FUEL_CAP_", SN_CHECK);
MakeNameEx(0x475E8, "P0458_EVAP_PURGE_VALVE_CIRCUIT_LOW_", SN_CHECK);
MakeNameEx(0x475E9, "P0459_EVAP_PURGE_VALVE_CIRCUIT_HIGH_", SN_CHECK);
MakeNameEx(0x475C7, "P0461_FUEL_LEVEL_SENSOR_RANGEPERF_", SN_CHECK);
MakeNameEx(0x475C5, "P0462_FUEL_LEVEL_SENSOR_LOW_INPUT_", SN_CHECK);
MakeNameEx(0x475C6, "P0463_FUEL_LEVEL_SENSOR_HIGH_INPUT_", SN_CHECK);
MakeNameEx(0x475C3, "P0464_FUEL_LEVEL_SENSOR_INTERMITTENT_", SN_CHECK);
MakeNameEx(0x475E0, "P0483_RADIATOR_FAN_RATIONALITY_CHECK_", SN_CHECK);
MakeNameEx(0x4762A, "P0502_VEHICLE_SPEED_SENSOR_LOW_INPUT_", SN_CHECK);
MakeNameEx(0x47632, "P0503_VEHICLE_SPEED_SENSOR_INTERMITTENT_", SN_CHECK);
MakeNameEx(0x475DB, "P0506_IDLE_CONTROL_RPM_LOWER_THAN_EXPECTED_", SN_CHECK);
MakeNameEx(0x475DC, "P0507_IDLE_CONTROL_RPM_HIGH_THAN_EXPECTED_", SN_CHECK);
MakeNameEx(0x4761F, "P0545_EGT_SENSOR_CIRCUIT_LOW_", SN_CHECK);
MakeNameEx(0x475CA, "P0512_STARTER_REQUEST_CIRCUIT_", SN_CHECK);
MakeNameEx(0x47644, "P0600_SERIAL_COMMUNICATION_LINK_", SN_CHECK);
MakeNameEx(0x47620, "P0546_EGT_SENSOR_CIRCUIT_HIGH_", SN_CHECK);
MakeNameEx(0x4763C, "P0607_CONTROL_MODULE_PERFORMANCE_", SN_CHECK);
MakeNameEx(0x4763B, "P0638_THROTTLE_ACTUATOR_RANGEPERF_", SN_CHECK);
MakeNameEx(0x47649, "P0605_CONTROL_MODULE_ROM_ERROR_", SN_CHECK);
MakeNameEx(0x475DE, "P0691_RADIATOR_FAN_CIRCUIT_LOW_", SN_CHECK);
MakeNameEx(0x475DF, "P0692_RADIATOR_FAN_CIRCUIT_HIGH_", SN_CHECK);
MakeNameEx(0x475CE, "P0851_NEUTRAL_SWITCH_INPUT_LOW_", SN_CHECK);
MakeNameEx(0x475D2, "P0852_NEUTRAL_SWITCH_INPUT_HIGH_", SN_CHECK);
MakeNameEx(0x47623, "P1086_TGV_POS_2_CIRCUIT_LOW_", SN_CHECK);
MakeNameEx(0x47624, "P1087_TGV_POS_2_CIRCUIT_HIGH_", SN_CHECK);
MakeNameEx(0x47625, "P1088_TGV_POS_1_CIRCUIT_LOW_", SN_CHECK);
MakeNameEx(0x47626, "P1089_TGV_POS_1_CIRCUIT_HIGH_", SN_CHECK);
MakeNameEx(0x475D5, "P1090_TGV_SYSTEM_1_VALVE_OPEN_", SN_CHECK);
MakeNameEx(0x475D6, "P1091_TGV_SYSTEM_1_VALVE_CLOSE_", SN_CHECK);
MakeNameEx(0x475B8, "P0604_CONTROL_MODULE_RAM_ERROR_", SN_CHECK);
MakeNameEx(0x475D7, "P1092_TGV_SYSTEM_2_VALVE_OPEN_", SN_CHECK);
MakeNameEx(0x475D8, "P1093_TGV_SYSTEM_2_VALVE_CLOSE_", SN_CHECK);
MakeNameEx(0x47652, "P0700_TRANSMISSION_CONTROL_SYSTEM_", SN_CHECK);
MakeNameEx(0x4761A, "P1096_TGV_SIGNAL_2_OPEN_", SN_CHECK);
MakeNameEx(0x47618, "P1097_TGV_SIGNAL_2_SHORT_", SN_CHECK);
MakeNameEx(0x47617, "P1095_TGV_SIGNAL_1_SHORT_", SN_CHECK);
MakeNameEx(0x4760B, "P1110_ATMOS_PRESSURE_SENSOR_LOW_INPUT_", SN_CHECK);
MakeNameEx(0x4760C, "P1111_ATMOS_PRESSURE_SENSOR_HIGH_INPUT_", SN_CHECK);
MakeNameEx(0x475F1, "P1152_FRONT_O2_SENSOR_RANGEPERF_LOW_B1_S1_", SN_CHECK);
MakeNameEx(0x475F2, "P1153_FRONT_O2_SENSOR_RANGEPERF_HIGH_B1_S1_", SN_CHECK);
MakeNameEx(0x47636, "P1160_ABNORMAL_RETURN_SPRING_", SN_CHECK);
MakeNameEx(0x47627, "P1282_PCV_SYSTEM_CIRCUIT_OPEN_", SN_CHECK);
MakeNameEx(0x475FC, "P1301_MISFIRE_HIGH_TEMP_EXHAUST_GAS_", SN_CHECK);
MakeNameEx(0x47621, "P1312_EGT_SENSOR_MALFUNCTION_", SN_CHECK);
MakeNameEx(0x475E6, "P1400_FUEL_TANK_PRESSURE_SOL_LOW_", SN_CHECK);
MakeNameEx(0x475E7, "P1420_FUEL_TANK_PRESSURE_SOL_HIGH_INPUT_", SN_CHECK);
MakeNameEx(0x475EC, "P1443_VENT_CONTROL_SOLENOID_FUNCTION_PROBLEM_", SN_CHECK);
MakeNameEx(0x475D3, "P1446_FUEL_TANK_SENSOR_CONTROL_CIRCUIT_LOW_", SN_CHECK);
MakeNameEx(0x475D4, "P1447_FUEL_TANK_SENSOR_CONTROL_CIRCUIT_HIGH_", SN_CHECK);
MakeNameEx(0x475DD, "P1448_FUEL_TANK_SENSOR_CONTROL_RANGEPERF_", SN_CHECK);
MakeNameEx(0x47610, "P1491_PCV_BLOWBY_FUNCTION_PROBLEM_", SN_CHECK);
MakeNameEx(0x47622, "P1544_EGT_TOO_HIGH_", SN_CHECK);
MakeNameEx(0x475C9, "P1518_STARTER_SWITCH_LOW_INPUT_", SN_CHECK);
MakeNameEx(0x47611, "P1560_BACKUP_VOLTAGE_MALFUNCTION_", SN_CHECK);
MakeNameEx(0x47651, "P2088_OCV_SOLENOID_A1_CIRCUIT_OPEN_", SN_CHECK);
MakeNameEx(0x47650, "P2089_OCV_SOLENOID_A1_CIRCUIT_SHORT_", SN_CHECK);
MakeNameEx(0x4764F, "P2092_OCV_SOLENOID_A2_CIRCUIT_OPEN_", SN_CHECK);
MakeNameEx(0x4764E, "P2093_OCV_SOLENOID_A2_CIRCUIT_SHORT_", SN_CHECK);
MakeNameEx(0x4763A, "P2096_POST_CATALYST_TOO_LEAN_B1_", SN_CHECK);
MakeNameEx(0x47643, "P2097_POST_CATALYST_TOO_RICH_B1_", SN_CHECK);
MakeNameEx(0x47639, "P2101_THROTTLE_ACTUATOR_CIRCUIT_RANGEPERF_", SN_CHECK);
MakeNameEx(0x47637, "P2102_THROTTLE_ACTUATOR_CIRCUIT_LOW_", SN_CHECK);
MakeNameEx(0x47638, "P2103_THROTTLE_ACTUATOR_CIRCUIT_HIGH_", SN_CHECK);
MakeNameEx(0x47633, "P2109_TPS_A_MINIMUM_STOP_PERF_", SN_CHECK);
MakeNameEx(0x47640, "P2122_TPS_D_CIRCUIT_LOW_INPUT_", SN_CHECK);
MakeNameEx(0x47641, "P2123_TPS_D_CIRCUIT_HIGH_INPUT_", SN_CHECK);
MakeNameEx(0x4763E, "P2127_TPS_E_CIRCUIT_LOW_INPUT_", SN_CHECK);
MakeNameEx(0x4763F, "P2128_TPS_E_CIRCUIT_HIGH_INPUT_", SN_CHECK);
MakeNameEx(0x47642, "P2135_TPS_AB_VOLTAGE_", SN_CHECK);
MakeNameEx(0x4763D, "P2138_TPS_DE_VOLTAGE_", SN_CHECK);
MakeNameEx(0x61664, "Requested_Torque_Accelerator_Pedal_", SN_CHECK);
referenceAddress = DfirstB(0x61664);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 12;
    MakeNameEx(referenceAddress, "Table_Requested_Torque_Accelerator_Pedal_", SN_CHECK);
}
else
{
MakeNameEx(0x4762E, "P0519_IDLE_CONTROL_MALFUNCTION_FAILSAFE_", SN_CHECK);
MakeNameEx(0x47619, "P1094_TGV_SIGNAL_1_OPEN_", SN_CHECK);
    Message("No reference to Requested_Torque_Accelerator_Pedal_\n");
MakeNameEx(0x615EC, "Requested_Torque_Accelerator_Pedal_X_AXIS_", SN_CHECK);
MakeNameEx(0x61628, "Requested_Torque_Accelerator_Pedal_Y_AXIS_", SN_CHECK);
MakeNameEx(0x613CC, "Target_Throttle_Plate_Position_Requested_Torque_", SN_CHECK);

referenceAddress = DfirstB(0x613CC);
if (referenceAddress > 0)
    MakeNameEx(referenceAddress, "Table_Target_Throttle_Plate_Position_Requested_Torque_", SN_CHECK);
}
}
else
{
}

{
MakeNameEx(0x61348, "Target_Throttle_Plate_Position_Requested_Torque_X_AXIS_", SN_CHECK);
    Message("No reference to Target_Throttle_Plate_Position_Requested_Torque_\n");
MakeNameEx(0x5D12C, "AF_Learning_1_Limits_", SN_CHECK);
MakeNameEx(0x5D138, "AF_Learning_1_Airflow_Ranges_", SN_CHECK);
MakeNameEx(0x5CE3E, "CL_to_OL_Delay_", SN_CHECK);
MakeNameEx(0x5D6EC, "CL_to_OL_Transition_with_Delay_Throttle_", SN_CHECK);
referenceAddress = DfirstB(0x5D6EC);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_CL_to_OL_Transition_with_Delay_Throttle_", SN_CHECK);
}
else
{
    Message("No reference to CL_to_OL_Transition_with_Delay_Throttle_\n");
}

MakeNameEx(0x6138C, "Target_Throttle_Plate_Position_Requested_Torque_Y_AXIS_", SN_CHECK);
MakeNameEx(0x5D6AC, "CL_to_OL_Transition_with_Delay_Throttle_Y_AXIS_", SN_CHECK);
MakeNameEx(0x5D184, "CL_to_OL_Transition_with_Delay_Throttle_Hysteresis_", SN_CHECK);
MakeNameEx(0x5DDD4, "CL_to_OL_Transition_with_Delay_Base_Pulse_Width_", SN_CHECK);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_CL_to_OL_Transition_with_Delay_Base_Pulse_Width_", SN_CHECK);
}
else
{
    Message("No reference to CL_to_OL_Transition_with_Delay_Base_Pulse_Width_\n");
}

MakeNameEx(0x5DD94, "CL_to_OL_Transition_with_Delay_Base_Pulse_Width_Y_AXIS_", SN_CHECK);
MakeNameEx(0x5D188, "CL_to_OL_Transition_with_Delay_BPW_Hysteresis_", SN_CHECK);
MakeNameEx(0x5D204, "CL_Delay_Maximum_EGT_", SN_CHECK);
MakeNameEx(0x5D1F8, "CL_Delay_Maximum_Throttle_", SN_CHECK);
MakeNameEx(0x5D1FC, "CL_Delay_Maximum_Vehicle_Speed_", SN_CHECK);
referenceAddress = DfirstB(0x5DDD4);
MakeNameEx(0x5D1B8, "CL_Delay_Maximum_Engine_Speed_Per_Gear_", SN_CHECK);
MakeNameEx(0x5D1E0, "CL_Delay_Maximum_Engine_Speed_Neutral_", SN_CHECK);
MakeNameEx(0x62124, "Front_Oxygen_Sensor_Scaling_", SN_CHECK);
    referenceAddress = referenceAddress - 12;
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Front_Oxygen_Sensor_Scaling_", SN_CHECK);
}
else
{
}
MakeNameEx(0x5D18C, "CL_Delay_Minimum_ECT_", SN_CHECK);
    Message("No reference to Front_Oxygen_Sensor_Scaling_\n");
referenceAddress = DfirstB(0x62124);
MakeNameEx(0x59750, "Front_Oxygen_Sensor_Compensation_Atm_Pressure_", SN_CHECK);
referenceAddress = DfirstB(0x59750);

MakeNameEx(0x620F0, "Front_Oxygen_Sensor_Scaling_Y_AXIS_", SN_CHECK);
{
MakeNameEx(0x1F5EC, "Front_Oxygen_Sensor_Rich_Limit_", SN_CHECK);
    MakeNameEx(referenceAddress, "Table_Front_Oxygen_Sensor_Compensation_Atm_Pressure_", SN_CHECK);
}
else
{
    Message("No reference to Front_Oxygen_Sensor_Compensation_Atm_Pressure_\n");
}

MakeNameEx(0x59740, "Front_Oxygen_Sensor_Compensation_Atm_Pressure_Y_AXIS_", SN_CHECK);
MakeNameEx(0x5EE24, "CL_Fueling_Target_Compensation_Load_", SN_CHECK);
referenceAddress = DfirstB(0x5EE24);
if (referenceAddress > 0)
if (referenceAddress > 0)
    referenceAddress = referenceAddress - 12;
    MakeNameEx(referenceAddress, "Table_CL_Fueling_Target_Compensation_Load_", SN_CHECK);
}
else
{
    Message("No reference to CL_Fueling_Target_Compensation_Load_\n");
{
}
MakeNameEx(0x5EDD0, "CL_Fueling_Target_Compensation_Load_X_AXIS_", SN_CHECK);
MakeNameEx(0x5EDFC, "CL_Fueling_Target_Compensation_Load_Y_AXIS_", SN_CHECK);
MakeNameEx(0x5ECA4, "CL_Fueling_Target_Compensation_A_ECT_", SN_CHECK);
referenceAddress = DfirstB(0x5ECA4);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 12;
    MakeNameEx(referenceAddress, "Table_CL_Fueling_Target_Compensation_A_ECT_", SN_CHECK);
}
else
{
    Message("No reference to CL_Fueling_Target_Compensation_A_ECT_\n");
}


MakeNameEx(0x5D430, "CL_Fueling_Target_Compensation_A_ECT_X_AXIS_", SN_CHECK);
MakeNameEx(0x5EC98, "CL_Fueling_Target_Compensation_A_ECT_Y_AXIS_", SN_CHECK);
MakeNameEx(0x5ED58, "CL_Fueling_Target_Compensation_B_ECT_", SN_CHECK);
referenceAddress = DfirstB(0x5ED58);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 12;
    MakeNameEx(referenceAddress, "Table_CL_Fueling_Target_Compensation_B_ECT_", SN_CHECK);
else
}
{
}
    Message("No reference to CL_Fueling_Target_Compensation_B_ECT_\n");

MakeNameEx(0x5ED4C, "CL_Fueling_Target_Compensation_B_ECT_Y_AXIS_", SN_CHECK);
MakeNameEx(0x5D430, "CL_Fueling_Target_Compensation_B_ECT_X_AXIS_", SN_CHECK);
referenceAddress = DfirstB(0x5D842);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Cranking_Fuel_Injector_Pulse_Width_A_ECT_", SN_CHECK);
}
else
{
    Message("No reference to Cranking_Fuel_Injector_Pulse_Width_A_ECT_\n");
}

MakeNameEx(0x5D430, "Cranking_Fuel_Injector_Pulse_Width_A_ECT_Y_AXIS_", SN_CHECK);
MakeNameEx(0x5D862, "Cranking_Fuel_Injector_Pulse_Width_B_ECT_", SN_CHECK);
referenceAddress = DfirstB(0x5D862);
MakeNameEx(0x5D842, "Cranking_Fuel_Injector_Pulse_Width_A_ECT_", SN_CHECK);
{
if (referenceAddress > 0)
    MakeNameEx(referenceAddress, "Table_Cranking_Fuel_Injector_Pulse_Width_B_ECT_", SN_CHECK);
    referenceAddress = referenceAddress - 8;
}
{
    Message("No reference to Cranking_Fuel_Injector_Pulse_Width_B_ECT_\n");
}

else
MakeNameEx(0x5D430, "Cranking_Fuel_Injector_Pulse_Width_B_ECT_Y_AXIS_", SN_CHECK);
MakeNameEx(0x5D882, "Cranking_Fuel_Injector_Pulse_Width_C_ECT_", SN_CHECK);
referenceAddress = DfirstB(0x5D882);
if (referenceAddress > 0)
{
    MakeNameEx(referenceAddress, "Table_Cranking_Fuel_Injector_Pulse_Width_C_ECT_", SN_CHECK);
}
    referenceAddress = referenceAddress - 8;
    referenceAddress = referenceAddress - 8;
{
    Message("No reference to Cranking_Fuel_Injector_Pulse_Width_C_ECT_\n");
else
MakeNameEx(0x5D430, "Cranking_Fuel_Injector_Pulse_Width_C_ECT_Y_AXIS_", SN_CHECK);
referenceAddress = DfirstB(0x5D8A2);
MakeNameEx(0x5D8A2, "Cranking_Fuel_Injector_Pulse_Width_D_ECT_", SN_CHECK);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Cranking_Fuel_Injector_Pulse_Width_D_ECT_", SN_CHECK);
}
else

    Message("No reference to Cranking_Fuel_Injector_Pulse_Width_D_ECT_\n");
{
}

MakeNameEx(0x5D430, "Cranking_Fuel_Injector_Pulse_Width_D_ECT_Y_AXIS_", SN_CHECK);
}
MakeNameEx(0x5E130, "Cranking_Fuel_IPW_Compensation_RPM_", SN_CHECK);
referenceAddress = DfirstB(0x5E130);
if (referenceAddress > 0)
{
}
    MakeNameEx(referenceAddress, "Table_Cranking_Fuel_IPW_Compensation_RPM_", SN_CHECK);
    referenceAddress = referenceAddress - 12;
    Message("No reference to Cranking_Fuel_IPW_Compensation_RPM_\n");
}

MakeNameEx(0x5E100, "Cranking_Fuel_IPW_Compensation_RPM_X_AXIS_", SN_CHECK);
MakeNameEx(0x5E114, "Cranking_Fuel_IPW_Compensation_RPM_Y_AXIS_", SN_CHECK);
else
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Cranking_Fuel_IPW_Compensation_Accelerator_", SN_CHECK);
}
referenceAddress = DfirstB(0x5D4D8);
else
{
    Message("No reference to Cranking_Fuel_IPW_Compensation_Accelerator_\n");
MakeNameEx(0x5D4D8, "Cranking_Fuel_IPW_Compensation_Accelerator_", SN_CHECK);
MakeNameEx(0x5D4C0, "Cranking_Fuel_IPW_Compensation_Accelerator_Y_AXIS_", SN_CHECK);
MakeNameEx(0x61C2C, "Injector_Latency_", SN_CHECK);

referenceAddress = DfirstB(0x61C2C);
}
if (referenceAddress > 0)
    referenceAddress = referenceAddress - 8;
}
    MakeNameEx(referenceAddress, "Table_Injector_Latency_", SN_CHECK);
else
{
}

    Message("No reference to Injector_Latency_\n");
{
MakeNameEx(0x5E60C, "Per_Injector_Primary_Fuel_Offset_Compensation_A_", SN_CHECK);
MakeNameEx(0x61C18, "Injector_Latency_Y_AXIS_", SN_CHECK);
MakeNameEx(0x5CF14, "Injector_Flow_Scaling_", SN_CHECK);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 12;
{
}
else
{
    Message("No reference to Per_Injector_Primary_Fuel_Offset_Compensation_A_\n");
}

MakeNameEx(0x5E590, "Per_Injector_Primary_Fuel_Offset_Compensation_A_X_AXIS_", SN_CHECK);
MakeNameEx(0x5E5D4, "Per_Injector_Primary_Fuel_Offset_Compensation_A_Y_AXIS_", SN_CHECK);
MakeNameEx(0x5E778, "Per_Injector_Primary_Fuel_Offset_Compensation_B_", SN_CHECK);
referenceAddress = DfirstB(0x5E778);
referenceAddress = DfirstB(0x5E60C);
if (referenceAddress > 0)
    MakeNameEx(referenceAddress, "Table_Per_Injector_Primary_Fuel_Offset_Compensation_A_", SN_CHECK);
}
else
{
{
    Message("No reference to Per_Injector_Primary_Fuel_Offset_Compensation_B_\n");
}

MakeNameEx(0x5E6FC, "Per_Injector_Primary_Fuel_Offset_Compensation_B_X_AXIS_", SN_CHECK);
MakeNameEx(0x5E740, "Per_Injector_Primary_Fuel_Offset_Compensation_B_Y_AXIS_", SN_CHECK);
MakeNameEx(0x5E8E4, "Per_Injector_Primary_Fuel_Offset_Compensation_C_", SN_CHECK);
referenceAddress = DfirstB(0x5E8E4);
if (referenceAddress > 0)
{
    MakeNameEx(referenceAddress, "Table_Per_Injector_Primary_Fuel_Offset_Compensation_B_", SN_CHECK);
    referenceAddress = referenceAddress - 12;
    MakeNameEx(referenceAddress, "Table_Per_Injector_Primary_Fuel_Offset_Compensation_C_", SN_CHECK);
}
else
    Message("No reference to Per_Injector_Primary_Fuel_Offset_Compensation_C_\n");
{

}
MakeNameEx(0x5E868, "Per_Injector_Primary_Fuel_Offset_Compensation_C_X_AXIS_", SN_CHECK);
MakeNameEx(0x5EA50, "Per_Injector_Primary_Fuel_Offset_Compensation_D_", SN_CHECK);
referenceAddress = DfirstB(0x5EA50);
{
if (referenceAddress > 0)
    referenceAddress = referenceAddress - 12;
    MakeNameEx(referenceAddress, "Table_Per_Injector_Primary_Fuel_Offset_Compensation_D_", SN_CHECK);
}
MakeNameEx(0x5E8AC, "Per_Injector_Primary_Fuel_Offset_Compensation_C_Y_AXIS_", SN_CHECK);
else
{
    Message("No reference to Per_Injector_Primary_Fuel_Offset_Compensation_D_\n");

MakeNameEx(0x5E9D4, "Per_Injector_Primary_Fuel_Offset_Compensation_D_X_AXIS_", SN_CHECK);
MakeNameEx(0x5EA18, "Per_Injector_Primary_Fuel_Offset_Compensation_D_Y_AXIS_", SN_CHECK);
MakeNameEx(0x5E2D8, "Primary_Open_Loop_Fueling_", SN_CHECK);
referenceAddress = DfirstB(0x5E2D8);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 12;
    MakeNameEx(referenceAddress, "Table_Primary_Open_Loop_Fueling_", SN_CHECK);
}
else
}
    Message("No reference to Primary_Open_Loop_Fueling_\n");
{
}

MakeNameEx(0x5E254, "Primary_Open_Loop_Fueling_X_AXIS_", SN_CHECK);
MakeNameEx(0x5E290, "Primary_Open_Loop_Fueling_Y_AXIS_", SN_CHECK);
MakeNameEx(0x5E480, "Primary_Open_Loop_Fueling_Failsafe_", SN_CHECK);
referenceAddress = DfirstB(0x5E480);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 12;
    MakeNameEx(referenceAddress, "Table_Primary_Open_Loop_Fueling_Failsafe_", SN_CHECK);
else
}
{
    Message("No reference to Primary_Open_Loop_Fueling_Failsafe_\n");
}

MakeNameEx(0x5E3FC, "Primary_Open_Loop_Fueling_Failsafe_X_AXIS_", SN_CHECK);
MakeNameEx(0x5D21C, "Primary_Open_Loop_Fuel_Map_Switch_IAM_", SN_CHECK);
MakeNameEx(0x5D180, "Minimum_Active_Primary_Open_Loop_Enrichment_", SN_CHECK);
MakeNameEx(0x5D714, "Minimum_Primary_Open_Loop_Enrichment_Throttle_", SN_CHECK);
referenceAddress = DfirstB(0x5D714);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Minimum_Primary_Open_Loop_Enrichment_Throttle_", SN_CHECK);
}
{
else
    Message("No reference to Minimum_Primary_Open_Loop_Enrichment_Throttle_\n");
}
MakeNameEx(0x5E438, "Primary_Open_Loop_Fueling_Failsafe_Y_AXIS_", SN_CHECK);
MakeNameEx(0x5D6FC, "Minimum_Primary_Open_Loop_Enrichment_Throttle_Y_AXIS_", SN_CHECK);
MakeNameEx(0x5DDF4, "Primary_Open_Loop_Fueling_Compensation_ECT_", SN_CHECK);
referenceAddress = DfirstB(0x5DDF4);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Primary_Open_Loop_Fueling_Compensation_ECT_", SN_CHECK);
}
else

{
    Message("No reference to Primary_Open_Loop_Fueling_Compensation_ECT_\n");
}
MakeNameEx(0x5D430, "Primary_Open_Loop_Fueling_Compensation_ECT_Y_AXIS_", SN_CHECK);

MakeNameEx(0x5D734, "Primary_Open_Loop_Fueling_Compensation_Timing_Compensation__", SN_CHECK);
if (referenceAddress > 0)
referenceAddress = DfirstB(0x5D734);
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Primary_Open_Loop_Fueling_Compensation_Timing_Compensation__", SN_CHECK);
else
{
}
    Message("No reference to Primary_Open_Loop_Fueling_Compensation_Timing_Compensation__\n");
}

MakeNameEx(0x5D71C, "Primary_Open_Loop_Fueling_Compensation_Timing_Compensation_Y_AXIS_", SN_CHECK);
MakeNameEx(0x5DEFC, "Throttle_Tipin_Enrichment_", SN_CHECK);
referenceAddress = DfirstB(0x5DEFC);
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Throttle_Tipin_Enrichment_", SN_CHECK);
if (referenceAddress > 0)
}
else
{
    Message("No reference to Throttle_Tipin_Enrichment_\n");

MakeNameEx(0x5DEB4, "Throttle_Tipin_Enrichment_Y_AXIS_", SN_CHECK);
MakeNameEx(0x5D31C, "Minimum_Tipin_Enrichment_Activation_", SN_CHECK);
MakeNameEx(0x5D318, "Minimum_Tipin_Enrichment_Activation_Throttle_", SN_CHECK);
MakeNameEx(0x5D7B8, "Tipin_Enrichment_Compensation_Boost_Error_", SN_CHECK);
referenceAddress = DfirstB(0x5D7B8);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Tipin_Enrichment_Compensation_Boost_Error_", SN_CHECK);
}
else
    Message("No reference to Tipin_Enrichment_Compensation_Boost_Error_\n");
{
}

MakeNameEx(0x5D794, "Tipin_Enrichment_Compensation_Boost_Error_Y_AXIS_", SN_CHECK);
MakeNameEx(0x5DF20, "Tipin_Enrichment_Compensation_ECT_", SN_CHECK);
referenceAddress = DfirstB(0x5DF20);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Tipin_Enrichment_Compensation_ECT_", SN_CHECK);
}
else
{
    Message("No reference to Tipin_Enrichment_Compensation_ECT_\n");
}

MakeNameEx(0x5D430, "Tipin_Enrichment_Compensation_ECT_Y_AXIS_", SN_CHECK);
MakeNameEx(0x5CE07, "Tipin_Enrichment_Disable_Applied_Counter_Threshold_", SN_CHECK);
MakeNameEx(0x5CE08, "Tipin_Enrichment_Applied_Counter_Reset_", SN_CHECK);
MakeNameEx(0x5D320, "Tipin_Enrichment_Disable_Throttle_Cumulative_Threshold_", SN_CHECK);
MakeNameEx(0x5CE09, "Tipin_Throttle_Cumulative_Reset_", SN_CHECK);
MakeNameEx(0x5D52E, "Min_Primary_Base_Enrichment_1_", SN_CHECK);
referenceAddress = DfirstB(0x5D52E);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Min_Primary_Base_Enrichment_1_", SN_CHECK);
}
else
{
    Message("No reference to Min_Primary_Base_Enrichment_1_\n");
}

MakeNameEx(0x5D430, "Min_Primary_Base_Enrichment_1_Y_AXIS_", SN_CHECK);
MakeNameEx(0x5E228, "Min_Primary_Base_Enrichment_1_NonPrimary_OL_", SN_CHECK);
referenceAddress = DfirstB(0x5E228);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 12;
    MakeNameEx(referenceAddress, "Table_Min_Primary_Base_Enrichment_1_NonPrimary_OL_", SN_CHECK);
}
else
{
    Message("No reference to Min_Primary_Base_Enrichment_1_NonPrimary_OL_\n");
}

MakeNameEx(0x5E1FC, "Min_Primary_Base_Enrichment_1_NonPrimary_OL_X_AXIS_", SN_CHECK);
MakeNameEx(0x5D942, "Min_Primary_Base_Enrich_2_Initial_Start_1A_", SN_CHECK);
referenceAddress = DfirstB(0x5D942);
MakeNameEx(0x5E21C, "Min_Primary_Base_Enrichment_1_NonPrimary_OL_Y_AXIS_", SN_CHECK);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
}
    MakeNameEx(referenceAddress, "Table_Min_Primary_Base_Enrich_2_Initial_Start_1A_", SN_CHECK);
}
else
{
    Message("No reference to Min_Primary_Base_Enrich_2_Initial_Start_1A_\n");
}

MakeNameEx(0x5D982, "Min_Primary_Base_Enrich_2_Initial_Start_1B_", SN_CHECK);
MakeNameEx(0x5D430, "Min_Primary_Base_Enrich_2_Initial_Start_1A_Y_AXIS_", SN_CHECK);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Min_Primary_Base_Enrich_2_Initial_Start_1B_", SN_CHECK);
}
else
{
    Message("No reference to Min_Primary_Base_Enrich_2_Initial_Start_1B_\n");
}

MakeNameEx(0x5D430, "Min_Primary_Base_Enrich_2_Initial_Start_1B_Y_AXIS_", SN_CHECK);
MakeNameEx(0x5D962, "Min_Primary_Base_Enrich_2_Initial_Start_2A_", SN_CHECK);
referenceAddress = DfirstB(0x5D982);
referenceAddress = DfirstB(0x5D962);
if (referenceAddress > 0)
{
    MakeNameEx(referenceAddress, "Table_Min_Primary_Base_Enrich_2_Initial_Start_2A_", SN_CHECK);
}
else
{
    Message("No reference to Min_Primary_Base_Enrich_2_Initial_Start_2A_\n");

}
    referenceAddress = referenceAddress - 8;
MakeNameEx(0x5D430, "Min_Primary_Base_Enrich_2_Initial_Start_2A_Y_AXIS_", SN_CHECK);
referenceAddress = DfirstB(0x5D9A2);
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Min_Primary_Base_Enrich_2_Initial_Start_2B_", SN_CHECK);
MakeNameEx(0x5D9A2, "Min_Primary_Base_Enrich_2_Initial_Start_2B_", SN_CHECK);
}
else
if (referenceAddress > 0)
{
}

MakeNameEx(0x5D430, "Min_Primary_Base_Enrich_2_Initial_Start_2B_Y_AXIS_", SN_CHECK);
MakeNameEx(0x5D9C2, "Min_Primary_Base_Enrich_2_Decay_Step_1_", SN_CHECK);
referenceAddress = DfirstB(0x5D9C2);
    Message("No reference to Min_Primary_Base_Enrich_2_Initial_Start_2B_\n");
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Min_Primary_Base_Enrich_2_Decay_Step_1_", SN_CHECK);
}
else
{
    Message("No reference to Min_Primary_Base_Enrich_2_Decay_Step_1_\n");
}

MakeNameEx(0x5D430, "Min_Primary_Base_Enrich_2_Decay_Step_1_Y_AXIS_", SN_CHECK);
MakeNameEx(0x5D9E2, "Min_Primary_Base_Enrich_2_Decay_Step_2_", SN_CHECK);
referenceAddress = DfirstB(0x5D9E2);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    referenceAddress = referenceAddress - 12;
    MakeNameEx(referenceAddress, "Table_Min_Primary_Base_Enrich_2_Decay_Step_2_", SN_CHECK);
else
{
    Message("No reference to Min_Primary_Base_Enrich_2_Decay_Step_2_\n");
MakeNameEx(0x5D430, "Min_Primary_Base_Enrich_2_Decay_Step_2_Y_AXIS_", SN_CHECK);

MakeNameEx(0x5D8C2, "Min_Primary_Base_Enrich_3_Initial_Start_1A_", SN_CHECK);
referenceAddress = DfirstB(0x5D8C2);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Min_Primary_Base_Enrich_3_Initial_Start_1A_", SN_CHECK);
}
else
{
    Message("No reference to Min_Primary_Base_Enrich_3_Initial_Start_1A_\n");
}

}
}
MakeNameEx(0x5D8E2, "Min_Primary_Base_Enrich_3_Initial_Start_1B_", SN_CHECK);
{
if (referenceAddress > 0)
    referenceAddress = referenceAddress - 8;
}
MakeNameEx(0x5D430, "Min_Primary_Base_Enrich_3_Initial_Start_1A_Y_AXIS_", SN_CHECK);
    MakeNameEx(referenceAddress, "Table_Min_Primary_Base_Enrich_3_Initial_Start_1B_", SN_CHECK);
else
{
referenceAddress = DfirstB(0x5D8E2);
    Message("No reference to Min_Primary_Base_Enrich_3_Initial_Start_1B_\n");

referenceAddress = DfirstB(0x5D902);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Min_Primary_Base_Enrich_3_Initial_Start_2A_", SN_CHECK);
}
}
MakeNameEx(0x5D430, "Min_Primary_Base_Enrich_3_Initial_Start_1B_Y_AXIS_", SN_CHECK);
else
MakeNameEx(0x5D902, "Min_Primary_Base_Enrich_3_Initial_Start_2A_", SN_CHECK);

MakeNameEx(0x5D430, "Min_Primary_Base_Enrich_3_Initial_Start_2A_Y_AXIS_", SN_CHECK);
MakeNameEx(0x5D922, "Min_Primary_Base_Enrich_3_Initial_Start_2B_", SN_CHECK);
referenceAddress = DfirstB(0x5D922);
}
{
{
    referenceAddress = referenceAddress - 8;
if (referenceAddress > 0)
    MakeNameEx(referenceAddress, "Table_Min_Primary_Base_Enrich_3_Initial_Start_2B_", SN_CHECK);
}
else
{
    Message("No reference to Min_Primary_Base_Enrich_3_Initial_Start_2B_\n");

MakeNameEx(0x5D430, "Min_Primary_Base_Enrich_3_Initial_Start_2B_Y_AXIS_", SN_CHECK);
}
referenceAddress = DfirstB(0x5D4EE);
MakeNameEx(0x5D4EE, "Min_Primary_Base_Enrich_3_Decay_Delay_A_", SN_CHECK);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Min_Primary_Base_Enrich_3_Decay_Delay_A_", SN_CHECK);
}
{
else
    Message("No reference to Min_Primary_Base_Enrich_3_Decay_Delay_A_\n");
}

MakeNameEx(0x5D430, "Min_Primary_Base_Enrich_3_Decay_Delay_A_Y_AXIS_", SN_CHECK);
referenceAddress = DfirstB(0x5D4FE);
MakeNameEx(0x5D4FE, "Min_Primary_Base_Enrich_3_Decay_Delay_B_", SN_CHECK);
{
if (referenceAddress > 0)
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Min_Primary_Base_Enrich_3_Decay_Delay_B_", SN_CHECK);
}
else
    Message("No reference to Min_Primary_Base_Enrich_3_Decay_Delay_B_\n");
{
}

MakeNameEx(0x5D430, "Min_Primary_Base_Enrich_3_Decay_Delay_B_Y_AXIS_", SN_CHECK);
MakeNameEx(0x5CF18, "Min_Primary_Base_Enrich_3_Decay_Multiplier_", SN_CHECK);
MakeNameEx(0x60B54, "Idle_Speed_Target_A_", SN_CHECK);
referenceAddress = DfirstB(0x60B54);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Idle_Speed_Target_A_", SN_CHECK);
}
else
    Message("No reference to Idle_Speed_Target_A_\n");
{

MakeNameEx(0x6062C, "Idle_Speed_Target_A_Y_AXIS_", SN_CHECK);
MakeNameEx(0x60B94, "Idle_Speed_Target_B_", SN_CHECK);
referenceAddress = DfirstB(0x60B94);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Idle_Speed_Target_B_", SN_CHECK);
}
else
{
    Message("No reference to Idle_Speed_Target_B_\n");

}
MakeNameEx(0x6062C, "Idle_Speed_Target_B_Y_AXIS_", SN_CHECK);
MakeNameEx(0x60BD4, "Idle_Speed_Target_C_", SN_CHECK);
referenceAddress = DfirstB(0x60BD4);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Idle_Speed_Target_C_", SN_CHECK);
}
else
{
}
}

MakeNameEx(0x6062C, "Idle_Speed_Target_C_Y_AXIS_", SN_CHECK);
MakeNameEx(0x5FD38, "Base_Timing_", SN_CHECK);
referenceAddress = DfirstB(0x5FD38);
if (referenceAddress > 0)
{
    Message("No reference to Idle_Speed_Target_C_\n");
    MakeNameEx(referenceAddress, "Table_Base_Timing_", SN_CHECK);
}
else
{
    Message("No reference to Base_Timing_\n");
    referenceAddress = referenceAddress - 12;
}

MakeNameEx(0x5FCB4, "Base_Timing_X_AXIS_", SN_CHECK);
MakeNameEx(0x5F05C, "Base_Timing_Idle_Below_Speed_Threshold_", SN_CHECK);
MakeNameEx(0x5FCF0, "Base_Timing_Y_AXIS_", SN_CHECK);
referenceAddress = DfirstB(0x5F430);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Base_Timing_Idle_Above_Speed_Threshold_", SN_CHECK);
}
else
{
    Message("No reference to Base_Timing_Idle_Above_Speed_Threshold_\n");
MakeNameEx(0x5F430, "Base_Timing_Idle_Above_Speed_Threshold_", SN_CHECK);
MakeNameEx(0x5F40C, "Base_Timing_Idle_Above_Speed_Threshold_Y_AXIS_", SN_CHECK);

MakeNameEx(0x5F030, "Base_Timing_Idle_Vehicle_Speed_Threshold_", SN_CHECK);
MakeNameEx(0x6000C, "Knock_Correction_Advance_Max_", SN_CHECK);
referenceAddress = DfirstB(0x6000C);
if (referenceAddress > 0)
{
}
    referenceAddress = referenceAddress - 12;
}
    MakeNameEx(referenceAddress, "Table_Knock_Correction_Advance_Max_", SN_CHECK);
{
    Message("No reference to Knock_Correction_Advance_Max_\n");
}

MakeNameEx(0x5FF84, "Knock_Correction_Advance_Max_X_AXIS_", SN_CHECK);
MakeNameEx(0x5FFC4, "Knock_Correction_Advance_Max_Y_AXIS_", SN_CHECK);
MakeNameEx(0x5F49C, "Timing_Compensation_IAT_", SN_CHECK);
referenceAddress = DfirstB(0x5F49C);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Timing_Compensation_IAT_", SN_CHECK);
}
else
{
    Message("No reference to Timing_Compensation_IAT_\n");
}

MakeNameEx(0x5F45C, "Timing_Compensation_IAT_Y_AXIS_", SN_CHECK);
MakeNameEx(0x5F060, "Timing_Comp_Min_Load_IAT_", SN_CHECK);
else
MakeNameEx(0x5F449, "Timing_Compensation_ECT_", SN_CHECK);
    Message("No reference to Min_Primary_Base_Enrich_3_Initial_Start_2A_\n");
if (referenceAddress > 0)
    referenceAddress = referenceAddress - 8;
{
    MakeNameEx(referenceAddress, "Table_Timing_Compensation_ECT_", SN_CHECK);
else
referenceAddress = DfirstB(0x5F449);
}
    Message("No reference to Timing_Compensation_ECT_\n");

MakeNameEx(0x60160, "Timing_Compensation_MRP_", SN_CHECK);
{
if (referenceAddress > 0)
}
{
MakeNameEx(0x5F2DC, "Timing_Compensation_ECT_Y_AXIS_", SN_CHECK);
    referenceAddress = referenceAddress - 12;
else
{
    Message("No reference to Timing_Compensation_MRP_\n");
}

    MakeNameEx(referenceAddress, "Table_Timing_Compensation_MRP_", SN_CHECK);
MakeNameEx(0x60140, "Timing_Compensation_MRP_X_AXIS_", SN_CHECK);
}
MakeNameEx(0x60154, "Timing_Compensation_MRP_Y_AXIS_", SN_CHECK);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Timing_Compensation_Per_Cylinder_A__", SN_CHECK);
}
else
{
    Message("No reference to Timing_Compensation_Per_Cylinder_A__\n");
}

MakeNameEx(0x5F85C, "Timing_Compensation_Per_Cylinder_A__Y_AXIS_", SN_CHECK);
MakeNameEx(0x5F8DC, "Timing_Compensation_Per_Cylinder_B__", SN_CHECK);
referenceAddress = DfirstB(0x5F8DC);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Timing_Compensation_Per_Cylinder_B__", SN_CHECK);
}
else
{
    Message("No reference to Timing_Compensation_Per_Cylinder_B__\n");
referenceAddress = DfirstB(0x60160);
}
MakeNameEx(0x5F894, "Timing_Compensation_Per_Cylinder_A__", SN_CHECK);
MakeNameEx(0x5F924, "Timing_Compensation_Per_Cylinder_C__", SN_CHECK);
referenceAddress = DfirstB(0x5F924);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Timing_Compensation_Per_Cylinder_C__", SN_CHECK);
}
else
{
    Message("No reference to Timing_Compensation_Per_Cylinder_C__\n");
}

MakeNameEx(0x5F8EC, "Timing_Compensation_Per_Cylinder_C__Y_AXIS_", SN_CHECK);
MakeNameEx(0x5F96C, "Timing_Compensation_Per_Cylinder_D__", SN_CHECK);
referenceAddress = DfirstB(0x5F96C);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Timing_Compensation_Per_Cylinder_D__", SN_CHECK);
}
else
{
    Message("No reference to Timing_Compensation_Per_Cylinder_D__\n");
}

MakeNameEx(0x5F934, "Timing_Compensation_Per_Cylinder_D__Y_AXIS_", SN_CHECK);
MakeNameEx(0x5F16C, "Timing_Comp_Minimum_Load_Per_Cylinder_", SN_CHECK);
MakeNameEx(0x5F168, "Timing_Comp_Maximum_RPM_Per_Cylinder_", SN_CHECK);
MakeNameEx(0x5F170, "Timing_Comp_Minimum_Coolant_Temp_Per_Cylinder_", SN_CHECK);
MakeNameEx(0x5F1A0, "Feedback_Correction_Range_RPM_", SN_CHECK);
MakeNameEx(0x5F1B0, "Feedback_Correction_Minimum_Load_", SN_CHECK);
MakeNameEx(0x5F184, "Feedback_Correction_Retard_Value_", SN_CHECK);
MakeNameEx(0x5F180, "Feedback_Correction_Retard_Limit_", SN_CHECK);
MakeNameEx(0x5F188, "Feedback_Correction_Negative_Advance_Value_", SN_CHECK);
MakeNameEx(0x5EF5C, "Feedback_Correction_Negative_Advance_Delay_", SN_CHECK);
MakeNameEx(0x5F1B8, "Extended_Feedback_Correction_High_RPM_Compensation_", SN_CHECK);
MakeNameEx(0x5F288, "Fine_Correction_Range_RPM_", SN_CHECK);
MakeNameEx(0x5F298, "Fine_Correction_Range_Load_", SN_CHECK);
MakeNameEx(0x5F2B8, "Fine_Correction_Rows_RPM_", SN_CHECK);
MakeNameEx(0x5F2A8, "Fine_Correction_Columns_Load_", SN_CHECK);
MakeNameEx(0x5F2D0, "Fine_Correction_Retard_Value_", SN_CHECK);
MakeNameEx(0x5F280, "Fine_Correction_Retard_Limit_", SN_CHECK);
MakeNameEx(0x5F284, "Fine_Correction_Advance_Value_", SN_CHECK);
MakeNameEx(0x5F27C, "Fine_Correction_Advance_Limit_", SN_CHECK);
MakeNameEx(0x5EF6A, "Fine_Correction_Advance_Delay_", SN_CHECK);
MakeNameEx(0x5F230, "Rough_Correction_Range_RPM_", SN_CHECK);
MakeNameEx(0x5F240, "Rough_Correction_Range_Load_", SN_CHECK);
MakeNameEx(0x5F250, "Rough_Correction_Minimum_KC_Advance_Map_Value_", SN_CHECK);
MakeNameEx(0x5F9A4, "Rough_Correction_Learning_Delay_Increasing_", SN_CHECK);
referenceAddress = DfirstB(0x5F9A4);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Rough_Correction_Learning_Delay_Increasing_", SN_CHECK);
}
else
{
    Message("No reference to Rough_Correction_Learning_Delay_Increasing_\n");
}

MakeNameEx(0x5F97C, "Rough_Correction_Learning_Delay_Increasing_Y_AXIS_", SN_CHECK);
MakeNameEx(0x5F22C, "Advance_Multiplier_Initial_", SN_CHECK);
MakeNameEx(0x5F254, "Advance_Multiplier_Step_Value_", SN_CHECK);
MakeNameEx(0x57CB8, "Manifold_Pressure_Sensor_Scaling_", SN_CHECK);
MakeNameEx(0x61B72, "Manifold_Pressure_Sensor_Limits_CEL_", SN_CHECK);
MakeNameEx(0x5A00D, "Manifold_Pressure_Sensor_CEL_Delays_", SN_CHECK);
MakeNameEx(0x59344, "MAF_Limit_Maximum_", SN_CHECK);
MakeNameEx(0x61F40, "MAF_Sensor_Scaling_", SN_CHECK);
referenceAddress = DfirstB(0x61F40);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_MAF_Sensor_Scaling_", SN_CHECK);
}
else
{
    Message("No reference to MAF_Sensor_Scaling_\n");
}

MakeNameEx(0x61E80, "MAF_Sensor_Scaling_Y_AXIS_", SN_CHECK);
MakeNameEx(0x59AF0, "MAF_Compensation_IAT_", SN_CHECK);
referenceAddress = DfirstB(0x59AF0);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 12;
    MakeNameEx(referenceAddress, "Table_MAF_Compensation_IAT_", SN_CHECK);
}
else
{
    Message("No reference to MAF_Compensation_IAT_\n");
}

MakeNameEx(0x59ABC, "MAF_Compensation_IAT_X_AXIS_", SN_CHECK);
MakeNameEx(0x59AD0, "MAF_Compensation_IAT_Y_AXIS_", SN_CHECK);
MakeNameEx(0x1D754, "Engine_Load_Limit_Maximum_", SN_CHECK);
MakeNameEx(0x59A38, "Engine_Load_Compensation_MP_", SN_CHECK);
referenceAddress = DfirstB(0x59A38);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 12;
    MakeNameEx(referenceAddress, "Table_Engine_Load_Compensation_MP_", SN_CHECK);
}
else
{
    Message("No reference to Engine_Load_Compensation_MP_\n");
}

MakeNameEx(0x599DC, "Engine_Load_Compensation_MP_X_AXIS_", SN_CHECK);
MakeNameEx(0x59A08, "Engine_Load_Compensation_MP_Y_AXIS_", SN_CHECK);
MakeNameEx(0x5D364, "Rev_Limit_Fuel_Cut_", SN_CHECK);
MakeNameEx(0x5F8A4, "Timing_Compensation_Per_Cylinder_B__Y_AXIS_", SN_CHECK);
MakeNameEx(0x5D36C, "Rev_Limit_Fuel_Resume_Boost_", SN_CHECK);
MakeNameEx(0x5D3BC, "Speed_Limiting_Disable_Fuel_Cut_", SN_CHECK);
MakeNameEx(0x59604, "Speed_Limiting_Throttle_", SN_CHECK);
MakeNameEx(0x62078, "EGT_Sensor_Scaling_", SN_CHECK);
referenceAddress = DfirstB(0x62078);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
MakeNameEx(0x5D3B4, "Speed_Limiting_Enable_Fuel_Cut_", SN_CHECK);
    MakeNameEx(referenceAddress, "Table_EGT_Sensor_Scaling_", SN_CHECK);
}
else
{
    Message("No reference to EGT_Sensor_Scaling_\n");

MakeNameEx(0x62000, "EGT_Sensor_Scaling_Y_AXIS_", SN_CHECK);
MakeNameEx(0x61E08, "Fuel_Temp_Sensor_Scaling_", SN_CHECK);
referenceAddress = DfirstB(0x61E08);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Fuel_Temp_Sensor_Scaling_", SN_CHECK);
}
else
{
    Message("No reference to Fuel_Temp_Sensor_Scaling_\n");
}

MakeNameEx(0x61D90, "Fuel_Temp_Sensor_Scaling_Y_AXIS_", SN_CHECK);
MakeNameEx(0x57A6C, "Intake_Temp_Sensor_Scaling_", SN_CHECK);
referenceAddress = DfirstB(0x57A6C);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Intake_Temp_Sensor_Scaling_", SN_CHECK);
}
else
{
    Message("No reference to Intake_Temp_Sensor_Scaling_\n");
referenceAddress = DfirstB(0x5F894);

MakeNameEx(0x579F4, "Intake_Temp_Sensor_Scaling_Y_AXIS_", SN_CHECK);
MakeNameEx(0x57984, "Coolant_Temp_Sensor_Scaling_", SN_CHECK);
}
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Coolant_Temp_Sensor_Scaling_", SN_CHECK);
}
else
{
    Message("No reference to Coolant_Temp_Sensor_Scaling_\n");
}

MakeNameEx(0x57914, "Coolant_Temp_Sensor_Scaling_Y_AXIS_", SN_CHECK);
MakeNameEx(0x57C5C, "Atmospheric_Pressure_Sensor_Scaling_", SN_CHECK);
MakeNameEx(0x628A0, "Radiator_Fan_Modes_ECT_", SN_CHECK);
MakeNameEx(0x628B0, "Radiator_Fan_Modes_Veh_Speed_", SN_CHECK);
MakeNameEx(0x59558, "Gear_Determination_Thresholds_", SN_CHECK);

MakeNameEx(0x4A812, "Force_Pass_Readiness_Monitors_", SN_CHECK);
MakeNameEx(0x634A0, "Intake_Cam_Advance_Angle_AVCS_", SN_CHECK);
referenceAddress = DfirstB(0x634A0);
if (referenceAddress > 0)
{
    MakeNameEx(referenceAddress, "Table_Intake_Cam_Advance_Angle_AVCS_", SN_CHECK);
}
else
{
    Message("No reference to Intake_Cam_Advance_Angle_AVCS_\n");
}

MakeNameEx(0x63420, "Intake_Cam_Advance_Angle_AVCS_X_AXIS_", SN_CHECK);
    referenceAddress = referenceAddress - 12;
MakeNameEx(0x5DF78, "Boost_Limit_Fuel_Cut__", SN_CHECK);
referenceAddress = DfirstB(0x5DF78);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Boost_Limit_Fuel_Cut__", SN_CHECK);
}
else
{
    Message("No reference to Boost_Limit_Fuel_Cut__\n");
}

MakeNameEx(0x5DF60, "Boost_Limit_Fuel_Cut_Y_AXIS__", SN_CHECK);
MakeNameEx(0x58034, "Boost_Control_Disable_IAM__", SN_CHECK);
MakeNameEx(0x58030, "Boost_Control_Disable_Fine_Correction__", SN_CHECK);
MakeNameEx(0x57FD9, "Boost_Control_Disable_Delay_Fine_Correction__", SN_CHECK);
MakeNameEx(0x58550, "Target_Boost__", SN_CHECK);
}
referenceAddress = DfirstB(0x58550);
referenceAddress = DfirstB(0x57984);
MakeNameEx(0x63458, "Intake_Cam_Advance_Angle_AVCS_Y_AXIS_", SN_CHECK);
    referenceAddress = referenceAddress - 12;
    MakeNameEx(referenceAddress, "Table_Target_Boost__", SN_CHECK);
}
else
{
}

MakeNameEx(0x58500, "Target_Boost_X_AXIS__", SN_CHECK);
MakeNameEx(0x58520, "Target_Boost_Y_AXIS__", SN_CHECK);
MakeNameEx(0x58124, "Target_Boost_Compensation_ECT__", SN_CHECK);
    Message("No reference to Target_Boost__\n");
referenceAddress = DfirstB(0x58124);
if (referenceAddress > 0)
if (referenceAddress > 0)
{
    MakeNameEx(referenceAddress, "Table_Target_Boost_Compensation_ECT__", SN_CHECK);
}
else
{
    Message("No reference to Target_Boost_Compensation_ECT__\n");
}
{
MakeNameEx(0x58054, "Target_Boost_Compensation_1st_Gear__", SN_CHECK);
MakeNameEx(0x5804C, "Target_Boost_Compensation_1st_Gear_Speed_Disable__", SN_CHECK);
MakeNameEx(0x58058, "Target_Boost_Compensation_ECT_Y_AXIS__", SN_CHECK);
    referenceAddress = referenceAddress - 8;
MakeNameEx(0x5822C, "Target_Boost_Compensation_Atm_Pressure_Multiplier__", SN_CHECK);
referenceAddress = DfirstB(0x5822C);
    referenceAddress = referenceAddress - 8;
{
}
else
{
    Message("No reference to Target_Boost_Compensation_Atm_Pressure_Multiplier__\n");
}

MakeNameEx(0x5821C, "Target_Boost_Compensation_Atm_Pressure_Multiplier_Y_AXIS__", SN_CHECK);
MakeNameEx(0x58158, "Target_Boost_Compensation_Atm_Pressure_Multiplier_Offset__", SN_CHECK);
referenceAddress = DfirstB(0x58158);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Target_Boost_Compensation_Atm_Pressure_Multiplier_Offset__", SN_CHECK);
}
else
{
    Message("No reference to Target_Boost_Compensation_Atm_Pressure_Multiplier_Offset__\n");
}

MakeNameEx(0x58148, "Target_Boost_Compensation_Atm_Pressure_Multiplier_Offset_Y_AXIS__", SN_CHECK);
MakeNameEx(0x58180, "Turbo_Dynamics_Proportional__", SN_CHECK);
referenceAddress = DfirstB(0x58180);
if (referenceAddress > 0)
{

    MakeNameEx(referenceAddress, "Table_Turbo_Dynamics_Proportional__", SN_CHECK);
}
else
{
    referenceAddress = referenceAddress - 8;
    Message("No reference to Turbo_Dynamics_Proportional__\n");
}

MakeNameEx(0x5815C, "Turbo_Dynamics_Proportional_Y_AXIS__", SN_CHECK);
MakeNameEx(0x581F0, "Turbo_Dynamics_Integral_Positive__", SN_CHECK);
referenceAddress = DfirstB(0x581F0);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Turbo_Dynamics_Integral_Positive__", SN_CHECK);
}
{
else
    Message("No reference to Turbo_Dynamics_Integral_Positive__\n");
}

MakeNameEx(0x581CC, "Turbo_Dynamics_Integral_Positive_Y_AXIS__", SN_CHECK);
MakeNameEx(0x581B8, "Turbo_Dynamics_Integral_Negative__", SN_CHECK);
referenceAddress = DfirstB(0x581B8);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Turbo_Dynamics_Integral_Negative__", SN_CHECK);
}
else
{
    Message("No reference to Turbo_Dynamics_Integral_Negative__\n");
}

MakeNameEx(0x58194, "Turbo_Dynamics_Integral_Negative_Y_AXIS__", SN_CHECK);
MakeNameEx(0x58018, "TD_Activation_Thresholds_RPM__", SN_CHECK);
MakeNameEx(0x57FEC, "TD_Activation_Thresholds_Target_Boost__", SN_CHECK);
MakeNameEx(0x58020, "TD_Integral_Cumulative_Range_WGDC_Correction__", SN_CHECK);
MakeNameEx(0x57FF8, "TD_Integral_Negative_Activation_Boost_Error__", SN_CHECK);
MakeNameEx(0x58000, "TD_Integral_Positive_Activation_Boost_Error__", SN_CHECK);
MakeNameEx(0x58004, "TD_Integral_Positive_Activation_Wastegate_Duty__", SN_CHECK);
MakeNameEx(0x58320, "Initial_Wastegate_Duty__", SN_CHECK);
referenceAddress = DfirstB(0x58320);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 12;
    MakeNameEx(referenceAddress, "Table_Initial_Wastegate_Duty__", SN_CHECK);
}
else
{
    Message("No reference to Initial_Wastegate_Duty__\n");
}

MakeNameEx(0x582D0, "Initial_Wastegate_Duty_X_AXIS__", SN_CHECK);
MakeNameEx(0x582F0, "Initial_Wastegate_Duty_Y_AXIS__", SN_CHECK);
MakeNameEx(0x58438, "Max_Wastegate_Duty__", SN_CHECK);
referenceAddress = DfirstB(0x58438);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 12;
    MakeNameEx(referenceAddress, "Table_Max_Wastegate_Duty__", SN_CHECK);
}
else
{
    Message("No reference to Max_Wastegate_Duty__\n");
}

MakeNameEx(0x583F8, "Max_Wastegate_Duty_X_AXIS__", SN_CHECK);
MakeNameEx(0x58418, "Max_Wastegate_Duty_Y_AXIS__", SN_CHECK);
MakeNameEx(0x13AA4, "Max_Wastegate_Duty_Limit_PostCompensation__", SN_CHECK);
MakeNameEx(0x580E4, "InitialMax_Wastegate_Duty_Compensation_IAT__", SN_CHECK);
referenceAddress = DfirstB(0x580E4);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_InitialMax_Wastegate_Duty_Compensation_IAT__", SN_CHECK);
}
else
{
    Message("No reference to InitialMax_Wastegate_Duty_Compensation_IAT__\n");
}

MakeNameEx(0x580A4, "InitialMax_Wastegate_Duty_Compensation_IAT_Y_AXIS__", SN_CHECK);
MakeNameEx(0x58104, "InitialMax_Wastegate_Duty_Compensation_ECT__", SN_CHECK);
referenceAddress = DfirstB(0x58104);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_InitialMax_Wastegate_Duty_Compensation_ECT__", SN_CHECK);
}
else
{
    Message("No reference to InitialMax_Wastegate_Duty_Compensation_ECT__\n");
}

MakeNameEx(0x58058, "InitialMax_Wastegate_Duty_Compensation_ECT_Y_AXIS__", SN_CHECK);
MakeNameEx(0x58270, "InitialMax_Wastegate_Duty_Compensation_Atm_Pressure__", SN_CHECK);
referenceAddress = DfirstB(0x58270);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 12;
    MakeNameEx(referenceAddress, "Table_InitialMax_Wastegate_Duty_Compensation_Atm_Pressure__", SN_CHECK);
}
else
{
    Message("No reference to InitialMax_Wastegate_Duty_Compensation_Atm_Pressure__\n");
}

MakeNameEx(0x58248, "InitialMax_Wastegate_Duty_Compensation_Atm_Pressure_X_AXIS__", SN_CHECK);
MakeNameEx(0x58260, "InitialMax_Wastegate_Duty_Compensation_Atm_Pressure_Y_AXIS__", SN_CHECK);
MakeNameEx(0x475FE, "P0000_PASS_CODE_NO_DTC_DETECTED__", SN_CHECK);
MakeNameEx(0x475E4, "P0011_CAMSHAFT_POS_TIMING_OVERADVANCED_1__", SN_CHECK);
MakeNameEx(0x475E5, "P0021_CAMSHAFT_POS_TIMING_OVERADVANCED_2__", SN_CHECK);
MakeNameEx(0x47631, "P0030_FRONT_O2_SENSOR_RANGEPERF__", SN_CHECK);
MakeNameEx(0x4760A, "P0031_FRONT_O2_SENSOR_LOW_INPUT__", SN_CHECK);
MakeNameEx(0x47608, "P0032_FRONT_O2_SENSOR_HIGH_INPUT__", SN_CHECK);
MakeNameEx(0x47609, "P0037_REAR_O2_SENSOR_LOW_INPUT__", SN_CHECK);
MakeNameEx(0x47607, "P0038_REAR_O2_SENSOR_HIGH_INPUT__", SN_CHECK);
MakeNameEx(0x4762C, "P0068_MAP_SENSOR_RANGEPERF__", SN_CHECK);
MakeNameEx(0x4762F, "P0101_MAF_SENSOR_RANGEPERF__", SN_CHECK);
MakeNameEx(0x475B9, "P0102_MAF_SENSOR_LOW_INPUT__", SN_CHECK);
MakeNameEx(0x475BA, "P0103_MAF_SENSOR_HIGH_INPUT__", SN_CHECK);
MakeNameEx(0x4760D, "P0107_MAP_SENSOR_LOW_INPUT__", SN_CHECK);
MakeNameEx(0x4760E, "P0108_MAP_SENSOR_HIGH_INPUT__", SN_CHECK);
MakeNameEx(0x47606, "P0111_IAT_SENSOR_RANGEPERF__", SN_CHECK);
MakeNameEx(0x47604, "P0112_IAT_SENSOR_LOW_INPUT__", SN_CHECK);
MakeNameEx(0x47605, "P0113_IAT_SENSOR_HIGH_INPUT__", SN_CHECK);
MakeNameEx(0x475C1, "P0117_COOLANT_TEMP_SENSOR_LOW_INPUT__", SN_CHECK);
MakeNameEx(0x475C2, "P0118_COOLANT_TEMP_SENSOR_HIGH_INPUT__", SN_CHECK);
MakeNameEx(0x475BE, "P0122_TPS_A_LOW_INPUT__", SN_CHECK);
MakeNameEx(0x475BF, "P0123_TPS_A_HIGH_INPUT__", SN_CHECK);
MakeNameEx(0x475C4, "P0125_INSUFFICIENT_COOLANT_TEMP_FUELING__", SN_CHECK);
MakeNameEx(0x4760F, "P0128_THERMOSTAT_MALFUNCTION__", SN_CHECK);
MakeNameEx(0x4762D, "P0129_ATMOS_PRESSURE_SENSOR_RANGEPERF__", SN_CHECK);
MakeNameEx(0x47601, "P0131_FRONT_O2_SENSOR_LOW_INPUT__", SN_CHECK);
MakeNameEx(0x47602, "P0132_FRONT_O2_SENSOR_HIGH_INPUT__", SN_CHECK);
MakeNameEx(0x475EF, "P0133_FRONT_O2_SENSOR_SLOW_RESPONSE__", SN_CHECK);
MakeNameEx(0x47630, "P0134_FRONT_O2_SENSOR_NO_ACTIVITY__", SN_CHECK);
MakeNameEx(0x47600, "P0137_REAR_O2_SENSOR_LOW_VOLTAGE__", SN_CHECK);
MakeNameEx(0x47603, "P0138_REAR_O2_SENSOR_HIGH_VOLTAGE__", SN_CHECK);
MakeNameEx(0x475F0, "P0139_REAR_O2_SENSOR_SLOW_RESPONSE__", SN_CHECK);
MakeNameEx(0x475F6, "P0171_SYSTEM_TOO_LEAN__", SN_CHECK);
MakeNameEx(0x475F7, "P0172_SYSTEM_TOO_RICH__", SN_CHECK);
MakeNameEx(0x475D1, "P0181_FUEL_TEMP_SENSOR_A_RANGEPERF__", SN_CHECK);
MakeNameEx(0x475CF, "P0182_FUEL_TEMP_SENSOR_A_LOW_INPUT__", SN_CHECK);
MakeNameEx(0x475D0, "P0183_FUEL_TEMP_SENSOR_A_HIGH_INPUT__", SN_CHECK);
MakeNameEx(0x47634, "P0222_TPS_B_LOW_INPUT__", SN_CHECK);
MakeNameEx(0x47635, "P0223_TPS_B_HIGH_INPUT__", SN_CHECK);
MakeNameEx(0x47616, "P0244_WASTEGATE_SOLENOID_A_RANGEPERF__", SN_CHECK);
MakeNameEx(0x4762B, "P0230_FUEL_PUMP_PRIMARY_CIRCUIT__", SN_CHECK);
MakeNameEx(0x47614, "P0245_WASTEGATE_SOLENOID_A_LOW__", SN_CHECK);
MakeNameEx(0x47615, "P0246_WASTEGATE_SOLENOID_A_HIGH__", SN_CHECK);
MakeNameEx(0x475F8, "P0301_MISFIRE_CYLINDER_1__", SN_CHECK);
MakeNameEx(0x475F9, "P0302_MISFIRE_CYLINDER_2__", SN_CHECK);
MakeNameEx(0x475FA, "P0303_MISFIRE_CYLINDER_3__", SN_CHECK);
MakeNameEx(0x475FB, "P0304_MISFIRE_CYLINDER_4__", SN_CHECK);
MakeNameEx(0x475BC, "P0327_KNOCK_SENSOR_1_LOW_INPUT__", SN_CHECK);
MakeNameEx(0x475BD, "P0328_KNOCK_SENSOR_1_HIGH_INPUT__", SN_CHECK);
MakeNameEx(0x475B4, "P0335_CRANKSHAFT_POS_SENSOR_A_MALFUNCTION__", SN_CHECK);
MakeNameEx(0x475B5, "P0336_CRANKSHAFT_POS_SENSOR_A_RANGEPERF__", SN_CHECK);
MakeNameEx(0x47647, "P0345_CAMSHAFT_POS_SENSOR_A_BANK_2__", SN_CHECK);
MakeNameEx(0x475F3, "P0420_CAT_EFFICIENCY_BELOW_THRESHOLD__", SN_CHECK);
MakeNameEx(0x475F4, "P0442_EVAP_LEAK_DETECTED_SMALL__", SN_CHECK);
MakeNameEx(0x475ED, "P0447_EVAP_VENT_CONTROL_CIRCUIT_OPEN__", SN_CHECK);
MakeNameEx(0x475EE, "P0448_EVAP_VENT_CONTROL_CIRCUIT_SHORTED__", SN_CHECK);
MakeNameEx(0x475CD, "P0451_EVAP_PRESSURE_SENSOR_RANGEPERF__", SN_CHECK);
MakeNameEx(0x475CB, "P0452_EVAP_PRESSURE_SENSOR_LOW_INPUT__", SN_CHECK);
MakeNameEx(0x475CC, "P0453_EVAP_PRESSURE_SENSOR_HIGH_INPUT__", SN_CHECK);
MakeNameEx(0x475F5, "P0456_EVAP_LEAK_DETECTED_VERY_SMALL__", SN_CHECK);
MakeNameEx(0x475FD, "P0457_EVAP_LEAK_DETECTED_FUEL_CAP__", SN_CHECK);
MakeNameEx(0x475E8, "P0458_EVAP_PURGE_VALVE_CIRCUIT_LOW__", SN_CHECK);
MakeNameEx(0x475E9, "P0459_EVAP_PURGE_VALVE_CIRCUIT_HIGH__", SN_CHECK);
MakeNameEx(0x475C7, "P0461_FUEL_LEVEL_SENSOR_RANGEPERF__", SN_CHECK);
MakeNameEx(0x475C5, "P0462_FUEL_LEVEL_SENSOR_LOW_INPUT__", SN_CHECK);
MakeNameEx(0x475C6, "P0463_FUEL_LEVEL_SENSOR_HIGH_INPUT__", SN_CHECK);
MakeNameEx(0x475C3, "P0464_FUEL_LEVEL_SENSOR_INTERMITTENT__", SN_CHECK);
MakeNameEx(0x475E0, "P0483_RADIATOR_FAN_RATIONALITY_CHECK__", SN_CHECK);
MakeNameEx(0x4762A, "P0502_VEHICLE_SPEED_SENSOR_LOW_INPUT__", SN_CHECK);
MakeNameEx(0x47632, "P0503_VEHICLE_SPEED_SENSOR_INTERMITTENT__", SN_CHECK);
MakeNameEx(0x475DB, "P0506_IDLE_CONTROL_RPM_LOWER_THAN_EXPECTED__", SN_CHECK);
MakeNameEx(0x475DC, "P0507_IDLE_CONTROL_RPM_HIGH_THAN_EXPECTED__", SN_CHECK);
MakeNameEx(0x475CA, "P0512_STARTER_REQUEST_CIRCUIT__", SN_CHECK);
MakeNameEx(0x4762E, "P0519_IDLE_CONTROL_MALFUNCTION_FAILSAFE__", SN_CHECK);
MakeNameEx(0x4761F, "P0545_EGT_SENSOR_CIRCUIT_LOW__", SN_CHECK);
MakeNameEx(0x47620, "P0546_EGT_SENSOR_CIRCUIT_HIGH__", SN_CHECK);
MakeNameEx(0x47644, "P0600_SERIAL_COMMUNICATION_LINK__", SN_CHECK);
MakeNameEx(0x475B8, "P0604_CONTROL_MODULE_RAM_ERROR__", SN_CHECK);
MakeNameEx(0x47649, "P0605_CONTROL_MODULE_ROM_ERROR__", SN_CHECK);
MakeNameEx(0x4763C, "P0607_CONTROL_MODULE_PERFORMANCE__", SN_CHECK);
MakeNameEx(0x4763B, "P0638_THROTTLE_ACTUATOR_RANGEPERF__", SN_CHECK);
if (referenceAddress > 0)
    MakeNameEx(referenceAddress, "Table_Target_Boost_Compensation_Atm_Pressure_Multiplier__", SN_CHECK);
MakeNameEx(0x47652, "P0700_TRANSMISSION_CONTROL_SYSTEM__", SN_CHECK);
MakeNameEx(0x475CE, "P0851_NEUTRAL_SWITCH_INPUT_LOW__", SN_CHECK);
MakeNameEx(0x475D2, "P0852_NEUTRAL_SWITCH_INPUT_HIGH__", SN_CHECK);
MakeNameEx(0x475DE, "P0691_RADIATOR_FAN_CIRCUIT_LOW__", SN_CHECK);
MakeNameEx(0x47625, "P1088_TGV_POS_1_CIRCUIT_LOW__", SN_CHECK);
MakeNameEx(0x47626, "P1089_TGV_POS_1_CIRCUIT_HIGH__", SN_CHECK);
MakeNameEx(0x475D5, "P1090_TGV_SYSTEM_1_VALVE_OPEN__", SN_CHECK);
MakeNameEx(0x47623, "P1086_TGV_POS_2_CIRCUIT_LOW__", SN_CHECK);
MakeNameEx(0x47624, "P1087_TGV_POS_2_CIRCUIT_HIGH__", SN_CHECK);
MakeNameEx(0x475D6, "P1091_TGV_SYSTEM_1_VALVE_CLOSE__", SN_CHECK);
MakeNameEx(0x47619, "P1094_TGV_SIGNAL_1_OPEN__", SN_CHECK);
MakeNameEx(0x475D8, "P1093_TGV_SYSTEM_2_VALVE_CLOSE__", SN_CHECK);
MakeNameEx(0x475DF, "P0692_RADIATOR_FAN_CIRCUIT_HIGH__", SN_CHECK);
MakeNameEx(0x475D7, "P1092_TGV_SYSTEM_2_VALVE_OPEN__", SN_CHECK);
MakeNameEx(0x4761A, "P1096_TGV_SIGNAL_2_OPEN__", SN_CHECK);
MakeNameEx(0x47618, "P1097_TGV_SIGNAL_2_SHORT__", SN_CHECK);
MakeNameEx(0x4760C, "P1111_ATMOS_PRESSURE_SENSOR_HIGH_INPUT__", SN_CHECK);
MakeNameEx(0x475F1, "P1152_FRONT_O2_SENSOR_RANGEPERF_LOW_B1_S1__", SN_CHECK);
MakeNameEx(0x475F2, "P1153_FRONT_O2_SENSOR_RANGEPERF_HIGH_B1_S1__", SN_CHECK);
MakeNameEx(0x47617, "P1095_TGV_SIGNAL_1_SHORT__", SN_CHECK);
MakeNameEx(0x47636, "P1160_ABNORMAL_RETURN_SPRING__", SN_CHECK);
MakeNameEx(0x475FC, "P1301_MISFIRE_HIGH_TEMP_EXHAUST_GAS__", SN_CHECK);
MakeNameEx(0x47621, "P1312_EGT_SENSOR_MALFUNCTION__", SN_CHECK);
MakeNameEx(0x475E6, "P1400_FUEL_TANK_PRESSURE_SOL_LOW__", SN_CHECK);
MakeNameEx(0x475E7, "P1420_FUEL_TANK_PRESSURE_SOL_HIGH_INPUT__", SN_CHECK);
MakeNameEx(0x475EC, "P1443_VENT_CONTROL_SOLENOID_FUNCTION_PROBLEM__", SN_CHECK);
MakeNameEx(0x475D3, "P1446_FUEL_TANK_SENSOR_CONTROL_CIRCUIT_LOW__", SN_CHECK);
MakeNameEx(0x475D4, "P1447_FUEL_TANK_SENSOR_CONTROL_CIRCUIT_HIGH__", SN_CHECK);
MakeNameEx(0x475DD, "P1448_FUEL_TANK_SENSOR_CONTROL_RANGEPERF__", SN_CHECK);
MakeNameEx(0x47610, "P1491_PCV_BLOWBY_FUNCTION_PROBLEM__", SN_CHECK);
MakeNameEx(0x475C9, "P1518_STARTER_SWITCH_LOW_INPUT__", SN_CHECK);
MakeNameEx(0x47627, "P1282_PCV_SYSTEM_CIRCUIT_OPEN__", SN_CHECK);
MakeNameEx(0x47622, "P1544_EGT_TOO_HIGH__", SN_CHECK);
MakeNameEx(0x47611, "P1560_BACKUP_VOLTAGE_MALFUNCTION__", SN_CHECK);
MakeNameEx(0x47651, "P2088_OCV_SOLENOID_A1_CIRCUIT_OPEN__", SN_CHECK);
MakeNameEx(0x47650, "P2089_OCV_SOLENOID_A1_CIRCUIT_SHORT__", SN_CHECK);
MakeNameEx(0x4764F, "P2092_OCV_SOLENOID_A2_CIRCUIT_OPEN__", SN_CHECK);
MakeNameEx(0x4764E, "P2093_OCV_SOLENOID_A2_CIRCUIT_SHORT__", SN_CHECK);
MakeNameEx(0x4763A, "P2096_POST_CATALYST_TOO_LEAN_B1__", SN_CHECK);
MakeNameEx(0x47643, "P2097_POST_CATALYST_TOO_RICH_B1__", SN_CHECK);
MakeNameEx(0x47639, "P2101_THROTTLE_ACTUATOR_CIRCUIT_RANGEPERF__", SN_CHECK);
MakeNameEx(0x47637, "P2102_THROTTLE_ACTUATOR_CIRCUIT_LOW__", SN_CHECK);
MakeNameEx(0x47633, "P2109_TPS_A_MINIMUM_STOP_PERF__", SN_CHECK);
MakeNameEx(0x47640, "P2122_TPS_D_CIRCUIT_LOW_INPUT__", SN_CHECK);
MakeNameEx(0x47641, "P2123_TPS_D_CIRCUIT_HIGH_INPUT__", SN_CHECK);
MakeNameEx(0x4763E, "P2127_TPS_E_CIRCUIT_LOW_INPUT__", SN_CHECK);
MakeNameEx(0x4763F, "P2128_TPS_E_CIRCUIT_HIGH_INPUT__", SN_CHECK);
MakeNameEx(0x47642, "P2135_TPS_AB_VOLTAGE__", SN_CHECK);
MakeNameEx(0x4763D, "P2138_TPS_DE_VOLTAGE__", SN_CHECK);
MakeNameEx(0x61664, "Requested_Torque_Accelerator_Pedal__", SN_CHECK);
referenceAddress = DfirstB(0x61664);
{
if (referenceAddress > 0)
    referenceAddress = referenceAddress - 12;
    MakeNameEx(referenceAddress, "Table_Requested_Torque_Accelerator_Pedal__", SN_CHECK);
}
else
{
    Message("No reference to Requested_Torque_Accelerator_Pedal__\n");
}
MakeNameEx(0x47638, "P2103_THROTTLE_ACTUATOR_CIRCUIT_HIGH__", SN_CHECK);

MakeNameEx(0x615EC, "Requested_Torque_Accelerator_Pedal_X_AXIS__", SN_CHECK);
MakeNameEx(0x61628, "Requested_Torque_Accelerator_Pedal_Y_AXIS__", SN_CHECK);
MakeNameEx(0x613CC, "Target_Throttle_Plate_Position_Requested_Torque__", SN_CHECK);
referenceAddress = DfirstB(0x613CC);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 12;
    MakeNameEx(referenceAddress, "Table_Target_Throttle_Plate_Position_Requested_Torque__", SN_CHECK);
}
{
else
    Message("No reference to Target_Throttle_Plate_Position_Requested_Torque__\n");

}
MakeNameEx(0x61348, "Target_Throttle_Plate_Position_Requested_Torque_X_AXIS__", SN_CHECK);
MakeNameEx(0x6138C, "Target_Throttle_Plate_Position_Requested_Torque_Y_AXIS__", SN_CHECK);
MakeNameEx(0x5D12C, "AF_Learning_1_Limits__", SN_CHECK);
MakeNameEx(0x5D138, "AF_Learning_1_Airflow_Ranges__", SN_CHECK);
MakeNameEx(0x5CE3E, "CL_to_OL_Delay__", SN_CHECK);
referenceAddress = DfirstB(0x5D6EC);
MakeNameEx(0x5D6EC, "CL_to_OL_Transition_with_Delay_Throttle__", SN_CHECK);
{
if (referenceAddress > 0)
    referenceAddress = referenceAddress - 8;
}
else
{
    Message("No reference to CL_to_OL_Transition_with_Delay_Throttle__\n");
    MakeNameEx(referenceAddress, "Table_CL_to_OL_Transition_with_Delay_Throttle__", SN_CHECK);

}
MakeNameEx(0x5D184, "CL_to_OL_Transition_with_Delay_Throttle_Hysteresis__", SN_CHECK);
MakeNameEx(0x5DDD4, "CL_to_OL_Transition_with_Delay_Base_Pulse_Width__", SN_CHECK);
referenceAddress = DfirstB(0x5DDD4);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
MakeNameEx(0x4760B, "P1110_ATMOS_PRESSURE_SENSOR_LOW_INPUT__", SN_CHECK);
    MakeNameEx(referenceAddress, "Table_CL_to_OL_Transition_with_Delay_Base_Pulse_Width__", SN_CHECK);
else
MakeNameEx(0x5D6AC, "CL_to_OL_Transition_with_Delay_Throttle_Y_AXIS__", SN_CHECK);
    Message("No reference to CL_to_OL_Transition_with_Delay_Base_Pulse_Width__\n");
}
}
MakeNameEx(0x5D188, "CL_to_OL_Transition_with_Delay_BPW_Hysteresis__", SN_CHECK);

MakeNameEx(0x5DD94, "CL_to_OL_Transition_with_Delay_Base_Pulse_Width_Y_AXIS__", SN_CHECK);
{
MakeNameEx(0x5D1FC, "CL_Delay_Maximum_Vehicle_Speed__", SN_CHECK);
MakeNameEx(0x5D204, "CL_Delay_Maximum_EGT__", SN_CHECK);
MakeNameEx(0x5D1B8, "CL_Delay_Maximum_Engine_Speed_Per_Gear__", SN_CHECK);
MakeNameEx(0x5D1E0, "CL_Delay_Maximum_Engine_Speed_Neutral__", SN_CHECK);
MakeNameEx(0x62124, "Front_Oxygen_Sensor_Scaling__", SN_CHECK);
if (referenceAddress > 0)
referenceAddress = DfirstB(0x62124);
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Front_Oxygen_Sensor_Scaling__", SN_CHECK);
MakeNameEx(0x5D18C, "CL_Delay_Minimum_ECT__", SN_CHECK);
MakeNameEx(0x5D1F8, "CL_Delay_Maximum_Throttle__", SN_CHECK);
{
}
}

MakeNameEx(0x620F0, "Front_Oxygen_Sensor_Scaling_Y_AXIS__", SN_CHECK);
MakeNameEx(0x1F5EC, "Front_Oxygen_Sensor_Rich_Limit__", SN_CHECK);
MakeNameEx(0x59750, "Front_Oxygen_Sensor_Compensation_Atm_Pressure__", SN_CHECK);
referenceAddress = DfirstB(0x59750);
    Message("No reference to Front_Oxygen_Sensor_Scaling__\n");
    referenceAddress = referenceAddress - 8;
else
    MakeNameEx(referenceAddress, "Table_Front_Oxygen_Sensor_Compensation_Atm_Pressure__", SN_CHECK);
if (referenceAddress > 0)
else
{
}

MakeNameEx(0x59740, "Front_Oxygen_Sensor_Compensation_Atm_Pressure_Y_AXIS__", SN_CHECK);
MakeNameEx(0x5EE24, "CL_Fueling_Target_Compensation_Load__", SN_CHECK);
referenceAddress = DfirstB(0x5EE24);
}
if (referenceAddress > 0)
    Message("No reference to Front_Oxygen_Sensor_Compensation_Atm_Pressure__\n");
    referenceAddress = referenceAddress - 12;
    MakeNameEx(referenceAddress, "Table_CL_Fueling_Target_Compensation_Load__", SN_CHECK);
}
{
    Message("No reference to CL_Fueling_Target_Compensation_Load__\n");
else
}

MakeNameEx(0x5EDD0, "CL_Fueling_Target_Compensation_Load_X_AXIS__", SN_CHECK);
MakeNameEx(0x5EDFC, "CL_Fueling_Target_Compensation_Load_Y_AXIS__", SN_CHECK);
MakeNameEx(0x5ECA4, "CL_Fueling_Target_Compensation_A_ECT__", SN_CHECK);
referenceAddress = DfirstB(0x5ECA4);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 12;
    MakeNameEx(referenceAddress, "Table_CL_Fueling_Target_Compensation_A_ECT__", SN_CHECK);
}
else
{
    Message("No reference to CL_Fueling_Target_Compensation_A_ECT__\n");
}

MakeNameEx(0x5D430, "CL_Fueling_Target_Compensation_A_ECT_X_AXIS__", SN_CHECK);
MakeNameEx(0x5EC98, "CL_Fueling_Target_Compensation_A_ECT_Y_AXIS__", SN_CHECK);
MakeNameEx(0x5ED58, "CL_Fueling_Target_Compensation_B_ECT__", SN_CHECK);
referenceAddress = DfirstB(0x5ED58);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 12;
    MakeNameEx(referenceAddress, "Table_CL_Fueling_Target_Compensation_B_ECT__", SN_CHECK);
}
else
{
    Message("No reference to CL_Fueling_Target_Compensation_B_ECT__\n");
}

MakeNameEx(0x5D430, "CL_Fueling_Target_Compensation_B_ECT_X_AXIS__", SN_CHECK);
MakeNameEx(0x5ED4C, "CL_Fueling_Target_Compensation_B_ECT_Y_AXIS__", SN_CHECK);
MakeNameEx(0x5D842, "Cranking_Fuel_Injector_Pulse_Width_A_ECT__", SN_CHECK);
referenceAddress = DfirstB(0x5D842);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Cranking_Fuel_Injector_Pulse_Width_A_ECT__", SN_CHECK);
}
else
{
{
}

MakeNameEx(0x5D430, "Cranking_Fuel_Injector_Pulse_Width_A_ECT_Y_AXIS__", SN_CHECK);
MakeNameEx(0x5D862, "Cranking_Fuel_Injector_Pulse_Width_B_ECT__", SN_CHECK);
    Message("No reference to Cranking_Fuel_Injector_Pulse_Width_A_ECT__\n");
referenceAddress = DfirstB(0x5D862);
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Cranking_Fuel_Injector_Pulse_Width_B_ECT__", SN_CHECK);
}
if (referenceAddress > 0)
else
    Message("No reference to Cranking_Fuel_Injector_Pulse_Width_B_ECT__\n");
}

MakeNameEx(0x5D430, "Cranking_Fuel_Injector_Pulse_Width_B_ECT_Y_AXIS__", SN_CHECK);
MakeNameEx(0x5D882, "Cranking_Fuel_Injector_Pulse_Width_C_ECT__", SN_CHECK);
referenceAddress = DfirstB(0x5D882);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
}
{
else
{
}
    Message("No reference to Cranking_Fuel_Injector_Pulse_Width_C_ECT__\n");

MakeNameEx(0x5D430, "Cranking_Fuel_Injector_Pulse_Width_C_ECT_Y_AXIS__", SN_CHECK);
MakeNameEx(0x5D8A2, "Cranking_Fuel_Injector_Pulse_Width_D_ECT__", SN_CHECK);
referenceAddress = DfirstB(0x5D8A2);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Cranking_Fuel_Injector_Pulse_Width_D_ECT__", SN_CHECK);
}
else
{
    Message("No reference to Cranking_Fuel_Injector_Pulse_Width_D_ECT__\n");
}

MakeNameEx(0x5D430, "Cranking_Fuel_Injector_Pulse_Width_D_ECT_Y_AXIS__", SN_CHECK);
MakeNameEx(0x5E130, "Cranking_Fuel_IPW_Compensation_RPM__", SN_CHECK);
referenceAddress = DfirstB(0x5E130);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 12;
    MakeNameEx(referenceAddress, "Table_Cranking_Fuel_IPW_Compensation_RPM__", SN_CHECK);
}
else
{
    Message("No reference to Cranking_Fuel_IPW_Compensation_RPM__\n");
}

MakeNameEx(0x5E100, "Cranking_Fuel_IPW_Compensation_RPM_X_AXIS__", SN_CHECK);
MakeNameEx(0x5E114, "Cranking_Fuel_IPW_Compensation_RPM_Y_AXIS__", SN_CHECK);
MakeNameEx(0x5D4D8, "Cranking_Fuel_IPW_Compensation_Accelerator__", SN_CHECK);
referenceAddress = DfirstB(0x5D4D8);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Cranking_Fuel_IPW_Compensation_Accelerator__", SN_CHECK);
}
else
{
    Message("No reference to Cranking_Fuel_IPW_Compensation_Accelerator__\n");
}

MakeNameEx(0x5D4C0, "Cranking_Fuel_IPW_Compensation_Accelerator_Y_AXIS__", SN_CHECK);
MakeNameEx(0x61C2C, "Injector_Latency__", SN_CHECK);
referenceAddress = DfirstB(0x61C2C);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Injector_Latency__", SN_CHECK);
}
else
{
    Message("No reference to Injector_Latency__\n");
}

MakeNameEx(0x61C18, "Injector_Latency_Y_AXIS__", SN_CHECK);
MakeNameEx(0x5CF14, "Injector_Flow_Scaling__", SN_CHECK);
MakeNameEx(0x5E60C, "Per_Injector_Primary_Fuel_Offset_Compensation_A__", SN_CHECK);
referenceAddress = DfirstB(0x5E60C);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 12;
    MakeNameEx(referenceAddress, "Table_Per_Injector_Primary_Fuel_Offset_Compensation_A__", SN_CHECK);
}
else
{
    Message("No reference to Per_Injector_Primary_Fuel_Offset_Compensation_A__\n");
}

{
MakeNameEx(0x5E778, "Per_Injector_Primary_Fuel_Offset_Compensation_B__", SN_CHECK);
referenceAddress = DfirstB(0x5E778);
if (referenceAddress > 0)
{
MakeNameEx(0x5E590, "Per_Injector_Primary_Fuel_Offset_Compensation_A_X_AXIS__", SN_CHECK);
MakeNameEx(0x5E5D4, "Per_Injector_Primary_Fuel_Offset_Compensation_A_Y_AXIS__", SN_CHECK);
    MakeNameEx(referenceAddress, "Table_Per_Injector_Primary_Fuel_Offset_Compensation_B__", SN_CHECK);
}
else
    referenceAddress = referenceAddress - 12;
{
    Message("No reference to Per_Injector_Primary_Fuel_Offset_Compensation_B__\n");
}
MakeNameEx(0x5E740, "Per_Injector_Primary_Fuel_Offset_Compensation_B_Y_AXIS__", SN_CHECK);
MakeNameEx(0x5E6FC, "Per_Injector_Primary_Fuel_Offset_Compensation_B_X_AXIS__", SN_CHECK);

referenceAddress = DfirstB(0x5E8E4);
MakeNameEx(0x5E8E4, "Per_Injector_Primary_Fuel_Offset_Compensation_C__", SN_CHECK);
    referenceAddress = referenceAddress - 12;
if (referenceAddress > 0)
{
}
    MakeNameEx(referenceAddress, "Table_Per_Injector_Primary_Fuel_Offset_Compensation_C__", SN_CHECK);
else
{
    Message("No reference to Per_Injector_Primary_Fuel_Offset_Compensation_C__\n");
}

MakeNameEx(0x5E868, "Per_Injector_Primary_Fuel_Offset_Compensation_C_X_AXIS__", SN_CHECK);
MakeNameEx(0x5E8AC, "Per_Injector_Primary_Fuel_Offset_Compensation_C_Y_AXIS__", SN_CHECK);
MakeNameEx(0x5EA50, "Per_Injector_Primary_Fuel_Offset_Compensation_D__", SN_CHECK);
referenceAddress = DfirstB(0x5EA50);
if (referenceAddress > 0)
    referenceAddress = referenceAddress - 12;
    MakeNameEx(referenceAddress, "Table_Per_Injector_Primary_Fuel_Offset_Compensation_D__", SN_CHECK);
}
else
{
    Message("No reference to Per_Injector_Primary_Fuel_Offset_Compensation_D__\n");
}

MakeNameEx(0x5E9D4, "Per_Injector_Primary_Fuel_Offset_Compensation_D_X_AXIS__", SN_CHECK);
MakeNameEx(0x5EA18, "Per_Injector_Primary_Fuel_Offset_Compensation_D_Y_AXIS__", SN_CHECK);
MakeNameEx(0x5E2D8, "Primary_Open_Loop_Fueling__", SN_CHECK);
referenceAddress = DfirstB(0x5E2D8);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 12;
{
    MakeNameEx(referenceAddress, "Table_Primary_Open_Loop_Fueling__", SN_CHECK);
else
{
    Message("No reference to Primary_Open_Loop_Fueling__\n");
}

MakeNameEx(0x5E254, "Primary_Open_Loop_Fueling_X_AXIS__", SN_CHECK);
MakeNameEx(0x5E290, "Primary_Open_Loop_Fueling_Y_AXIS__", SN_CHECK);
MakeNameEx(0x5E480, "Primary_Open_Loop_Fueling_Failsafe__", SN_CHECK);
    MakeNameEx(referenceAddress, "Table_Cranking_Fuel_Injector_Pulse_Width_C_ECT__", SN_CHECK);
if (referenceAddress > 0)
referenceAddress = DfirstB(0x5E480);
{
    referenceAddress = referenceAddress - 12;
    MakeNameEx(referenceAddress, "Table_Primary_Open_Loop_Fueling_Failsafe__", SN_CHECK);
else
{
}
    Message("No reference to Primary_Open_Loop_Fueling_Failsafe__\n");

}
MakeNameEx(0x5D21C, "Primary_Open_Loop_Fuel_Map_Switch_IAM__", SN_CHECK);
MakeNameEx(0x5D180, "Minimum_Active_Primary_Open_Loop_Enrichment__", SN_CHECK);
MakeNameEx(0x5D714, "Minimum_Primary_Open_Loop_Enrichment_Throttle__", SN_CHECK);
referenceAddress = DfirstB(0x5D714);
if (referenceAddress > 0)
MakeNameEx(0x5E3FC, "Primary_Open_Loop_Fueling_Failsafe_X_AXIS__", SN_CHECK);
{
MakeNameEx(0x5E438, "Primary_Open_Loop_Fueling_Failsafe_Y_AXIS__", SN_CHECK);
}
    MakeNameEx(referenceAddress, "Table_Minimum_Primary_Open_Loop_Enrichment_Throttle__", SN_CHECK);
else
}
}

MakeNameEx(0x5D6FC, "Minimum_Primary_Open_Loop_Enrichment_Throttle_Y_AXIS__", SN_CHECK);
MakeNameEx(0x5DDF4, "Primary_Open_Loop_Fueling_Compensation_ECT__", SN_CHECK);
    Message("No reference to Minimum_Primary_Open_Loop_Enrichment_Throttle__\n");
referenceAddress = DfirstB(0x5DDF4);
if (referenceAddress > 0)
    referenceAddress = referenceAddress - 8;
{
{
else
}
    Message("No reference to Primary_Open_Loop_Fueling_Compensation_ECT__\n");
{
}

MakeNameEx(0x5D430, "Primary_Open_Loop_Fueling_Compensation_ECT_Y_AXIS__", SN_CHECK);
MakeNameEx(0x5D734, "Primary_Open_Loop_Fueling_Compensation_Timing_Compensation___", SN_CHECK);
referenceAddress = DfirstB(0x5D734);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Primary_Open_Loop_Fueling_Compensation_Timing_Compensation___", SN_CHECK);
}
else
{
    Message("No reference to Primary_Open_Loop_Fueling_Compensation_Timing_Compensation___\n");
}

MakeNameEx(0x5D71C, "Primary_Open_Loop_Fueling_Compensation_Timing_Compensation_Y_AXIS__", SN_CHECK);
MakeNameEx(0x5DEFC, "Throttle_Tipin_Enrichment__", SN_CHECK);
referenceAddress = DfirstB(0x5DEFC);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Throttle_Tipin_Enrichment__", SN_CHECK);
}
else
{
    Message("No reference to Throttle_Tipin_Enrichment__\n");
}

MakeNameEx(0x5DEB4, "Throttle_Tipin_Enrichment_Y_AXIS__", SN_CHECK);
MakeNameEx(0x5D31C, "Minimum_Tipin_Enrichment_Activation__", SN_CHECK);
MakeNameEx(0x5D318, "Minimum_Tipin_Enrichment_Activation_Throttle__", SN_CHECK);
MakeNameEx(0x5D7B8, "Tipin_Enrichment_Compensation_Boost_Error__", SN_CHECK);
referenceAddress = DfirstB(0x5D7B8);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Tipin_Enrichment_Compensation_Boost_Error__", SN_CHECK);
}
else
{
    MakeNameEx(referenceAddress, "Table_Primary_Open_Loop_Fueling_Compensation_ECT__", SN_CHECK);
}

MakeNameEx(0x5D794, "Tipin_Enrichment_Compensation_Boost_Error_Y_AXIS__", SN_CHECK);
MakeNameEx(0x5DF20, "Tipin_Enrichment_Compensation_ECT__", SN_CHECK);
referenceAddress = DfirstB(0x5DF20);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    Message("No reference to Tipin_Enrichment_Compensation_Boost_Error__\n");
}
else
{
    Message("No reference to Tipin_Enrichment_Compensation_ECT__\n");
}

MakeNameEx(0x5D430, "Tipin_Enrichment_Compensation_ECT_Y_AXIS__", SN_CHECK);
MakeNameEx(0x5CE07, "Tipin_Enrichment_Disable_Applied_Counter_Threshold__", SN_CHECK);
MakeNameEx(0x5CE08, "Tipin_Enrichment_Applied_Counter_Reset__", SN_CHECK);
MakeNameEx(0x5D320, "Tipin_Enrichment_Disable_Throttle_Cumulative_Threshold__", SN_CHECK);
    MakeNameEx(referenceAddress, "Table_Tipin_Enrichment_Compensation_ECT__", SN_CHECK);
MakeNameEx(0x5D52E, "Min_Primary_Base_Enrichment_1__", SN_CHECK);
MakeNameEx(0x5CE09, "Tipin_Throttle_Cumulative_Reset__", SN_CHECK);
if (referenceAddress > 0)
referenceAddress = DfirstB(0x5D52E);
{
    MakeNameEx(referenceAddress, "Table_Min_Primary_Base_Enrichment_1__", SN_CHECK);
}
else
{
    Message("No reference to Min_Primary_Base_Enrichment_1__\n");
}

MakeNameEx(0x5D430, "Min_Primary_Base_Enrichment_1_Y_AXIS__", SN_CHECK);
MakeNameEx(0x5E228, "Min_Primary_Base_Enrichment_1_NonPrimary_OL__", SN_CHECK);
referenceAddress = DfirstB(0x5E228);
    referenceAddress = referenceAddress - 8;
{
    referenceAddress = referenceAddress - 12;
    MakeNameEx(referenceAddress, "Table_Min_Primary_Base_Enrichment_1_NonPrimary_OL__", SN_CHECK);
}
else
{
    Message("No reference to Min_Primary_Base_Enrichment_1_NonPrimary_OL__\n");
}

MakeNameEx(0x5E1FC, "Min_Primary_Base_Enrichment_1_NonPrimary_OL_X_AXIS__", SN_CHECK);
MakeNameEx(0x5E21C, "Min_Primary_Base_Enrichment_1_NonPrimary_OL_Y_AXIS__", SN_CHECK);
if (referenceAddress > 0)
referenceAddress = DfirstB(0x5D942);
MakeNameEx(0x5D942, "Min_Primary_Base_Enrich_2_Initial_Start_1A__", SN_CHECK);
if (referenceAddress > 0)
    referenceAddress = referenceAddress - 8;
{
    MakeNameEx(referenceAddress, "Table_Min_Primary_Base_Enrich_2_Initial_Start_1A__", SN_CHECK);
}
else
{
    Message("No reference to Min_Primary_Base_Enrich_2_Initial_Start_1A__\n");
}

MakeNameEx(0x5D430, "Min_Primary_Base_Enrich_2_Initial_Start_1A_Y_AXIS__", SN_CHECK);
referenceAddress = DfirstB(0x5D982);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Min_Primary_Base_Enrich_2_Initial_Start_1B__", SN_CHECK);
}
else
{
    Message("No reference to Min_Primary_Base_Enrich_2_Initial_Start_1B__\n");
}

MakeNameEx(0x5D430, "Min_Primary_Base_Enrich_2_Initial_Start_1B_Y_AXIS__", SN_CHECK);
MakeNameEx(0x5D962, "Min_Primary_Base_Enrich_2_Initial_Start_2A__", SN_CHECK);
referenceAddress = DfirstB(0x5D962);
MakeNameEx(0x5D982, "Min_Primary_Base_Enrich_2_Initial_Start_1B__", SN_CHECK);
{
if (referenceAddress > 0)
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Min_Primary_Base_Enrich_2_Initial_Start_2A__", SN_CHECK);
}
    referenceAddress = referenceAddress - 8;
    Message("No reference to Min_Primary_Base_Enrich_2_Initial_Start_2A__\n");
}
else

MakeNameEx(0x5D430, "Min_Primary_Base_Enrich_2_Initial_Start_2A_Y_AXIS__", SN_CHECK);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
{
referenceAddress = DfirstB(0x5D9A2);
MakeNameEx(0x5D9A2, "Min_Primary_Base_Enrich_2_Initial_Start_2B__", SN_CHECK);
else
{
    Message("No reference to Min_Primary_Base_Enrich_2_Initial_Start_2B__\n");
}

MakeNameEx(0x5D430, "Min_Primary_Base_Enrich_2_Initial_Start_2B_Y_AXIS__", SN_CHECK);
MakeNameEx(0x5D9C2, "Min_Primary_Base_Enrich_2_Decay_Step_1__", SN_CHECK);
referenceAddress = DfirstB(0x5D9C2);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Min_Primary_Base_Enrich_2_Decay_Step_1__", SN_CHECK);
    MakeNameEx(referenceAddress, "Table_Min_Primary_Base_Enrich_2_Initial_Start_2B__", SN_CHECK);
{
    Message("No reference to Min_Primary_Base_Enrich_2_Decay_Step_1__\n");
}
else
}
MakeNameEx(0x5D9E2, "Min_Primary_Base_Enrich_2_Decay_Step_2__", SN_CHECK);
referenceAddress = DfirstB(0x5D9E2);
if (referenceAddress > 0)
{
MakeNameEx(0x5D430, "Min_Primary_Base_Enrich_2_Decay_Step_1_Y_AXIS__", SN_CHECK);
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Min_Primary_Base_Enrich_2_Decay_Step_2__", SN_CHECK);
else
}
{
    Message("No reference to Min_Primary_Base_Enrich_2_Decay_Step_2__\n");
}

MakeNameEx(0x5D8C2, "Min_Primary_Base_Enrich_3_Initial_Start_1A__", SN_CHECK);
MakeNameEx(0x5D430, "Min_Primary_Base_Enrich_2_Decay_Step_2_Y_AXIS__", SN_CHECK);
}
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Min_Primary_Base_Enrich_3_Initial_Start_1A__", SN_CHECK);
}
else
{
    Message("No reference to Min_Primary_Base_Enrich_3_Initial_Start_1A__\n");
}

MakeNameEx(0x5D430, "Min_Primary_Base_Enrich_3_Initial_Start_1A_Y_AXIS__", SN_CHECK);
MakeNameEx(0x5D8E2, "Min_Primary_Base_Enrich_3_Initial_Start_1B__", SN_CHECK);
referenceAddress = DfirstB(0x5D8E2);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Min_Primary_Base_Enrich_3_Initial_Start_1B__", SN_CHECK);
}
else
{
    Message("No reference to Min_Primary_Base_Enrich_3_Initial_Start_1B__\n");
}

MakeNameEx(0x5D430, "Min_Primary_Base_Enrich_3_Initial_Start_1B_Y_AXIS__", SN_CHECK);
MakeNameEx(0x5D902, "Min_Primary_Base_Enrich_3_Initial_Start_2A__", SN_CHECK);
referenceAddress = DfirstB(0x5D8C2);
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Min_Primary_Base_Enrich_3_Initial_Start_2A__", SN_CHECK);
referenceAddress = DfirstB(0x5D902);
}
if (referenceAddress > 0)
{
    Message("No reference to Min_Primary_Base_Enrich_3_Initial_Start_2A__\n");
}

MakeNameEx(0x5D430, "Min_Primary_Base_Enrich_3_Initial_Start_2A_Y_AXIS__", SN_CHECK);
MakeNameEx(0x5D922, "Min_Primary_Base_Enrich_3_Initial_Start_2B__", SN_CHECK);
referenceAddress = DfirstB(0x5D922);

{
if (referenceAddress > 0)
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Min_Primary_Base_Enrich_3_Initial_Start_2B__", SN_CHECK);
}
else
{
    Message("No reference to Min_Primary_Base_Enrich_3_Initial_Start_2B__\n");

MakeNameEx(0x5D430, "Min_Primary_Base_Enrich_3_Initial_Start_2B_Y_AXIS__", SN_CHECK);
}
MakeNameEx(0x5D4EE, "Min_Primary_Base_Enrich_3_Decay_Delay_A__", SN_CHECK);
referenceAddress = DfirstB(0x5D4EE);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Min_Primary_Base_Enrich_3_Decay_Delay_A__", SN_CHECK);
}
else
else

MakeNameEx(0x5D430, "Min_Primary_Base_Enrich_3_Decay_Delay_A_Y_AXIS__", SN_CHECK);
MakeNameEx(0x5D4FE, "Min_Primary_Base_Enrich_3_Decay_Delay_B__", SN_CHECK);
referenceAddress = DfirstB(0x5D4FE);
if (referenceAddress > 0)
{
    Message("No reference to Min_Primary_Base_Enrich_3_Decay_Delay_A__\n");
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Min_Primary_Base_Enrich_3_Decay_Delay_B__", SN_CHECK);
}
else
{
    Message("No reference to Min_Primary_Base_Enrich_3_Decay_Delay_B__\n");
}

MakeNameEx(0x5D430, "Min_Primary_Base_Enrich_3_Decay_Delay_B_Y_AXIS__", SN_CHECK);
MakeNameEx(0x5CF18, "Min_Primary_Base_Enrich_3_Decay_Multiplier__", SN_CHECK);
referenceAddress = DfirstB(0x60B54);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Idle_Speed_Target_A__", SN_CHECK);
}
else
{
    Message("No reference to Idle_Speed_Target_A__\n");
}

MakeNameEx(0x60B54, "Idle_Speed_Target_A__", SN_CHECK);
MakeNameEx(0x60B94, "Idle_Speed_Target_B__", SN_CHECK);
referenceAddress = DfirstB(0x60B94);
{
if (referenceAddress > 0)
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Idle_Speed_Target_B__", SN_CHECK);
}
else
{
}

    Message("No reference to Idle_Speed_Target_B__\n");
}
MakeNameEx(0x60BD4, "Idle_Speed_Target_C__", SN_CHECK);
if (referenceAddress > 0)
MakeNameEx(0x6062C, "Idle_Speed_Target_B_Y_AXIS__", SN_CHECK);
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Idle_Speed_Target_C__", SN_CHECK);
}
else
{
    Message("No reference to Idle_Speed_Target_C__\n");
}

MakeNameEx(0x6062C, "Idle_Speed_Target_C_Y_AXIS__", SN_CHECK);
MakeNameEx(0x5FD38, "Base_Timing__", SN_CHECK);
referenceAddress = DfirstB(0x5FD38);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 12;
    MakeNameEx(referenceAddress, "Table_Base_Timing__", SN_CHECK);
}
else
{
    Message("No reference to Base_Timing__\n");
}

MakeNameEx(0x5FCB4, "Base_Timing_X_AXIS__", SN_CHECK);
referenceAddress = DfirstB(0x60BD4);
MakeNameEx(0x5F05C, "Base_Timing_Idle_Below_Speed_Threshold__", SN_CHECK);
MakeNameEx(0x5FCF0, "Base_Timing_Y_AXIS__", SN_CHECK);
MakeNameEx(0x5F430, "Base_Timing_Idle_Above_Speed_Threshold__", SN_CHECK);
referenceAddress = DfirstB(0x5F430);
if (referenceAddress > 0)
    referenceAddress = referenceAddress - 8;
{
}
    MakeNameEx(referenceAddress, "Table_Base_Timing_Idle_Above_Speed_Threshold__", SN_CHECK);
else
    Message("No reference to Base_Timing_Idle_Above_Speed_Threshold__\n");
}

MakeNameEx(0x5F40C, "Base_Timing_Idle_Above_Speed_Threshold_Y_AXIS__", SN_CHECK);
{
MakeNameEx(0x5F030, "Base_Timing_Idle_Vehicle_Speed_Threshold__", SN_CHECK);
referenceAddress = DfirstB(0x6000C);
MakeNameEx(0x6000C, "Knock_Correction_Advance_Max__", SN_CHECK);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 12;
    MakeNameEx(referenceAddress, "Table_Knock_Correction_Advance_Max__", SN_CHECK);
else
}
{
}
    Message("No reference to Knock_Correction_Advance_Max__\n");

MakeNameEx(0x5FF84, "Knock_Correction_Advance_Max_X_AXIS__", SN_CHECK);
MakeNameEx(0x5FFC4, "Knock_Correction_Advance_Max_Y_AXIS__", SN_CHECK);
referenceAddress = DfirstB(0x5F49C);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
MakeNameEx(0x5F49C, "Timing_Compensation_IAT__", SN_CHECK);
}
    MakeNameEx(referenceAddress, "Table_Timing_Compensation_IAT__", SN_CHECK);
else
{
    Message("No reference to Timing_Compensation_IAT__\n");
}

MakeNameEx(0x5F45C, "Timing_Compensation_IAT_Y_AXIS__", SN_CHECK);
MakeNameEx(0x5F060, "Timing_Comp_Min_Load_IAT__", SN_CHECK);
referenceAddress = DfirstB(0x5F449);
MakeNameEx(0x5F449, "Timing_Compensation_ECT__", SN_CHECK);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Timing_Compensation_ECT__", SN_CHECK);
}
{
    Message("No reference to Timing_Compensation_ECT__\n");
}

MakeNameEx(0x5F2DC, "Timing_Compensation_ECT_Y_AXIS__", SN_CHECK);
else
MakeNameEx(0x60160, "Timing_Compensation_MRP__", SN_CHECK);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 12;
    MakeNameEx(referenceAddress, "Table_Timing_Compensation_MRP__", SN_CHECK);
}
referenceAddress = DfirstB(0x60160);
else
{
}
    Message("No reference to Timing_Compensation_MRP__\n");

MakeNameEx(0x60140, "Timing_Compensation_MRP_X_AXIS__", SN_CHECK);
MakeNameEx(0x60154, "Timing_Compensation_MRP_Y_AXIS__", SN_CHECK);
MakeNameEx(0x5F894, "Timing_Compensation_Per_Cylinder_A___", SN_CHECK);
referenceAddress = DfirstB(0x5F894);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
}
else
{
    Message("No reference to Timing_Compensation_Per_Cylinder_A___\n");
    MakeNameEx(referenceAddress, "Table_Timing_Compensation_Per_Cylinder_A___", SN_CHECK);

MakeNameEx(0x5F85C, "Timing_Compensation_Per_Cylinder_A__Y_AXIS__", SN_CHECK);
MakeNameEx(0x5F8DC, "Timing_Compensation_Per_Cylinder_B___", SN_CHECK);
referenceAddress = DfirstB(0x5F8DC);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Timing_Compensation_Per_Cylinder_B___", SN_CHECK);
}
else
{
    Message("No reference to Timing_Compensation_Per_Cylinder_B___\n");
}

}
MakeNameEx(0x5F924, "Timing_Compensation_Per_Cylinder_C___", SN_CHECK);
MakeNameEx(0x5F8A4, "Timing_Compensation_Per_Cylinder_B__Y_AXIS__", SN_CHECK);
if (referenceAddress > 0)
referenceAddress = DfirstB(0x5F924);
    referenceAddress = referenceAddress - 8;
{
    MakeNameEx(referenceAddress, "Table_Timing_Compensation_Per_Cylinder_C___", SN_CHECK);
}
else
    Message("No reference to Timing_Compensation_Per_Cylinder_C___\n");
}

MakeNameEx(0x5F8EC, "Timing_Compensation_Per_Cylinder_C__Y_AXIS__", SN_CHECK);
MakeNameEx(0x5F96C, "Timing_Compensation_Per_Cylinder_D___", SN_CHECK);
referenceAddress = DfirstB(0x5F96C);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Timing_Compensation_Per_Cylinder_D___", SN_CHECK);
}
{
else
{
    Message("No reference to Timing_Compensation_Per_Cylinder_D___\n");
}

MakeNameEx(0x5F934, "Timing_Compensation_Per_Cylinder_D__Y_AXIS__", SN_CHECK);
MakeNameEx(0x5F16C, "Timing_Comp_Minimum_Load_Per_Cylinder__", SN_CHECK);
MakeNameEx(0x5F168, "Timing_Comp_Maximum_RPM_Per_Cylinder__", SN_CHECK);
MakeNameEx(0x5F170, "Timing_Comp_Minimum_Coolant_Temp_Per_Cylinder__", SN_CHECK);
MakeNameEx(0x5F1A0, "Feedback_Correction_Range_RPM__", SN_CHECK);
MakeNameEx(0x5F184, "Feedback_Correction_Retard_Value__", SN_CHECK);
MakeNameEx(0x5F1B0, "Feedback_Correction_Minimum_Load__", SN_CHECK);
MakeNameEx(0x5F180, "Feedback_Correction_Retard_Limit__", SN_CHECK);
MakeNameEx(0x5F188, "Feedback_Correction_Negative_Advance_Value__", SN_CHECK);
MakeNameEx(0x5F1B8, "Extended_Feedback_Correction_High_RPM_Compensation__", SN_CHECK);
MakeNameEx(0x5EF5C, "Feedback_Correction_Negative_Advance_Delay__", SN_CHECK);
MakeNameEx(0x5F288, "Fine_Correction_Range_RPM__", SN_CHECK);
MakeNameEx(0x5F298, "Fine_Correction_Range_Load__", SN_CHECK);
MakeNameEx(0x5F2A8, "Fine_Correction_Columns_Load__", SN_CHECK);
MakeNameEx(0x5F2D0, "Fine_Correction_Retard_Value__", SN_CHECK);
MakeNameEx(0x5F280, "Fine_Correction_Retard_Limit__", SN_CHECK);
MakeNameEx(0x5F284, "Fine_Correction_Advance_Value__", SN_CHECK);
MakeNameEx(0x5F27C, "Fine_Correction_Advance_Limit__", SN_CHECK);
MakeNameEx(0x5F2B8, "Fine_Correction_Rows_RPM__", SN_CHECK);
MakeNameEx(0x5F230, "Rough_Correction_Range_RPM__", SN_CHECK);
MakeNameEx(0x5EF6A, "Fine_Correction_Advance_Delay__", SN_CHECK);
MakeNameEx(0x5F250, "Rough_Correction_Minimum_KC_Advance_Map_Value__", SN_CHECK);
MakeNameEx(0x5F240, "Rough_Correction_Range_Load__", SN_CHECK);
referenceAddress = DfirstB(0x5F9A4);
MakeNameEx(0x5F9A4, "Rough_Correction_Learning_Delay_Increasing__", SN_CHECK);
if (referenceAddress > 0)
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Rough_Correction_Learning_Delay_Increasing__", SN_CHECK);
}
else
{
{
}
    Message("No reference to Rough_Correction_Learning_Delay_Increasing__\n");
MakeNameEx(0x5F97C, "Rough_Correction_Learning_Delay_Increasing_Y_AXIS__", SN_CHECK);

MakeNameEx(0x5F22C, "Advance_Multiplier_Initial__", SN_CHECK);
MakeNameEx(0x5F254, "Advance_Multiplier_Step_Value__", SN_CHECK);
MakeNameEx(0x57CB8, "Manifold_Pressure_Sensor_Scaling__", SN_CHECK);
MakeNameEx(0x5A00D, "Manifold_Pressure_Sensor_CEL_Delays__", SN_CHECK);
MakeNameEx(0x61B72, "Manifold_Pressure_Sensor_Limits_CEL__", SN_CHECK);
MakeNameEx(0x61F40, "MAF_Sensor_Scaling__", SN_CHECK);
MakeNameEx(0x59344, "MAF_Limit_Maximum__", SN_CHECK);
referenceAddress = DfirstB(0x61F40);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_MAF_Sensor_Scaling__", SN_CHECK);
}
{
else
    Message("No reference to MAF_Sensor_Scaling__\n");

}
MakeNameEx(0x59AF0, "MAF_Compensation_IAT__", SN_CHECK);
MakeNameEx(0x61E80, "MAF_Sensor_Scaling_Y_AXIS__", SN_CHECK);
if (referenceAddress > 0)
referenceAddress = DfirstB(0x59AF0);
    referenceAddress = referenceAddress - 12;
{
}
    MakeNameEx(referenceAddress, "Table_MAF_Compensation_IAT__", SN_CHECK);
{
else
}

MakeNameEx(0x59ABC, "MAF_Compensation_IAT_X_AXIS__", SN_CHECK);
MakeNameEx(0x59AD0, "MAF_Compensation_IAT_Y_AXIS__", SN_CHECK);
MakeNameEx(0x1D754, "Engine_Load_Limit_Maximum__", SN_CHECK);
    Message("No reference to MAF_Compensation_IAT__\n");
MakeNameEx(0x59A38, "Engine_Load_Compensation_MP__", SN_CHECK);
referenceAddress = DfirstB(0x59A38);
{
if (referenceAddress > 0)
    MakeNameEx(referenceAddress, "Table_Engine_Load_Compensation_MP__", SN_CHECK);
}
    referenceAddress = referenceAddress - 12;
else
{
    Message("No reference to Engine_Load_Compensation_MP__\n");

MakeNameEx(0x599DC, "Engine_Load_Compensation_MP_X_AXIS__", SN_CHECK);
MakeNameEx(0x59A08, "Engine_Load_Compensation_MP_Y_AXIS__", SN_CHECK);
MakeNameEx(0x5D364, "Rev_Limit_Fuel_Cut__", SN_CHECK);
MakeNameEx(0x5D36C, "Rev_Limit_Fuel_Resume_Boost__", SN_CHECK);
MakeNameEx(0x5D3B4, "Speed_Limiting_Enable_Fuel_Cut__", SN_CHECK);
MakeNameEx(0x5D3BC, "Speed_Limiting_Disable_Fuel_Cut__", SN_CHECK);
MakeNameEx(0x59604, "Speed_Limiting_Throttle__", SN_CHECK);
MakeNameEx(0x62078, "EGT_Sensor_Scaling__", SN_CHECK);
referenceAddress = DfirstB(0x62078);
if (referenceAddress > 0)
}
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_EGT_Sensor_Scaling__", SN_CHECK);
}
else
{
    Message("No reference to EGT_Sensor_Scaling__\n");
}

MakeNameEx(0x62000, "EGT_Sensor_Scaling_Y_AXIS__", SN_CHECK);
MakeNameEx(0x61E08, "Fuel_Temp_Sensor_Scaling__", SN_CHECK);
referenceAddress = DfirstB(0x61E08);
{
if (referenceAddress > 0)
{
    MakeNameEx(referenceAddress, "Table_Fuel_Temp_Sensor_Scaling__", SN_CHECK);
}
else
{
    referenceAddress = referenceAddress - 8;
MakeNameEx(0x6062C, "Idle_Speed_Target_A_Y_AXIS__", SN_CHECK);
    Message("No reference to Fuel_Temp_Sensor_Scaling__\n");
}
MakeNameEx(0x57A6C, "Intake_Temp_Sensor_Scaling__", SN_CHECK);
referenceAddress = DfirstB(0x57A6C);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Intake_Temp_Sensor_Scaling__", SN_CHECK);
}
else
{
    Message("No reference to Intake_Temp_Sensor_Scaling__\n");
}

MakeNameEx(0x579F4, "Intake_Temp_Sensor_Scaling_Y_AXIS__", SN_CHECK);
MakeNameEx(0x57984, "Coolant_Temp_Sensor_Scaling__", SN_CHECK);
referenceAddress = DfirstB(0x57984);
if (referenceAddress > 0)
{
    referenceAddress = referenceAddress - 8;
    MakeNameEx(referenceAddress, "Table_Coolant_Temp_Sensor_Scaling__", SN_CHECK);
MakeNameEx(0x61D90, "Fuel_Temp_Sensor_Scaling_Y_AXIS__", SN_CHECK);
else
}
{
    Message("No reference to Coolant_Temp_Sensor_Scaling__\n");

}
MakeNameEx(0x57C5C, "Atmospheric_Pressure_Sensor_Scaling__", SN_CHECK);
MakeNameEx(0x628A0, "Radiator_Fan_Modes_ECT__", SN_CHECK);
MakeNameEx(0x57914, "Coolant_Temp_Sensor_Scaling_Y_AXIS__", SN_CHECK);
MakeNameEx(0x628B0, "Radiator_Fan_Modes_Veh_Speed__", SN_CHECK);
MakeNameEx(0x59558, "Gear_Determination_Thresholds__", SN_CHECK);
MakeNameEx(0x4A812, "Force_Pass_Readiness_Monitors__", SN_CHECK);
referenceAddress = DfirstB(0x634A0);
if (referenceAddress > 0)
{
MakeNameEx(0x634A0, "Intake_Cam_Advance_Angle_AVCS__", SN_CHECK);
    MakeNameEx(referenceAddress, "Table_Intake_Cam_Advance_Angle_AVCS__", SN_CHECK);
}
else
    referenceAddress = referenceAddress - 12;
    Message("No reference to Intake_Cam_Advance_Angle_AVCS__\n");
}

MakeNameEx(0x63420, "Intake_Cam_Advance_Angle_AVCS_X_AXIS__", SN_CHECK);
MakeNameEx(0x63458, "Intake_Cam_Advance_Angle_AVCS_Y_AXIS__", SN_CHECK);
}   // end of Tables

static StdParams ()
{
Message("--- Now marking StdParams ---\n");
{
auto addr;

MakeUnknown(0x00042748, 4, DOUNK_SIMPLE);
MakeDword(0x00042748);
MakeNameEx(0x00042748, "PtrSsmGet_Engine_Load_Relative_P1__", SN_CHECK);
addr = Dword(0x00042748);
MakeNameEx(addr, "SsmGet_Engine_Load_Relative_P1__", SN_CHECK);

MakeUnknown(0x0004274C, 4, DOUNK_SIMPLE);
MakeDword(0x0004274C);
MakeNameEx(0x0004274C, "PtrSsmGet_Coolant_Temperature_P2__", SN_CHECK);
addr = Dword(0x0004274C);
MakeNameEx(addr, "SsmGet_Coolant_Temperature_P2__", SN_CHECK);

MakeUnknown(0x00042750, 4, DOUNK_SIMPLE);
MakeDword(0x00042750);
MakeNameEx(0x00042750, "PtrSsmGet_AF_Correction_1_P3__", SN_CHECK);
addr = Dword(0x00042750);
MakeNameEx(addr, "SsmGet_AF_Correction_1_P3__", SN_CHECK);

MakeUnknown(0x00042754, 4, DOUNK_SIMPLE);
MakeDword(0x00042754);
MakeNameEx(0x00042754, "PtrSsmGet_AF_Learning_1_P4__", SN_CHECK);
addr = Dword(0x00042754);
MakeNameEx(addr, "SsmGet_AF_Learning_1_P4__", SN_CHECK);

MakeUnknown(0x00042758, 4, DOUNK_SIMPLE);
MakeDword(0x00042758);
MakeNameEx(0x00042758, "PtrSsmGet_AF_Correction_2_P5__", SN_CHECK);
addr = Dword(0x00042758);
MakeNameEx(addr, "SsmGet_AF_Correction_2_P5__", SN_CHECK);

MakeUnknown(0x0004275C, 4, DOUNK_SIMPLE);
MakeDword(0x0004275C);
MakeNameEx(0x0004275C, "PtrSsmGet_AF_Learning_2_P6__", SN_CHECK);
addr = Dword(0x0004275C);
MakeNameEx(addr, "SsmGet_AF_Learning_2_P6__", SN_CHECK);

MakeUnknown(0x00042760, 4, DOUNK_SIMPLE);
MakeDword(0x00042760);
MakeNameEx(0x00042760, "PtrSsmGet_Manifold_Absolute_Pressure_P7__", SN_CHECK);
addr = Dword(0x00042760);
MakeNameEx(addr, "SsmGet_Manifold_Absolute_Pressure_P7__", SN_CHECK);

MakeUnknown(0x00042764, 4, DOUNK_SIMPLE);
MakeDword(0x00042764);
MakeNameEx(0x00042764, "PtrSsmGet_Engine_Speed_P8__", SN_CHECK);
addr = Dword(0x00042764);
MakeNameEx(addr, "SsmGet_Engine_Speed_P8__", SN_CHECK);

MakeUnknown(0x0004276C, 4, DOUNK_SIMPLE);
MakeDword(0x0004276C);
MakeNameEx(0x0004276C, "PtrSsmGet_Vehicle_Speed_P9__", SN_CHECK);
addr = Dword(0x0004276C);
MakeNameEx(addr, "SsmGet_Vehicle_Speed_P9__", SN_CHECK);

MakeUnknown(0x00042770, 4, DOUNK_SIMPLE);
MakeDword(0x00042770);
MakeNameEx(0x00042770, "PtrSsmGet_Ignition_Total_Timing_P10__", SN_CHECK);
addr = Dword(0x00042770);
MakeNameEx(addr, "SsmGet_Ignition_Total_Timing_P10__", SN_CHECK);

MakeUnknown(0x00042774, 4, DOUNK_SIMPLE);
MakeDword(0x00042774);
MakeNameEx(0x00042774, "PtrSsmGet_Intake_Air_Temperature_P11__", SN_CHECK);
addr = Dword(0x00042774);
MakeNameEx(addr, "SsmGet_Intake_Air_Temperature_P11__", SN_CHECK);

MakeUnknown(0x00042778, 4, DOUNK_SIMPLE);
MakeDword(0x00042778);
MakeNameEx(0x00042778, "PtrSsmGet_Mass_Airflow_P12__", SN_CHECK);
addr = Dword(0x00042778);
MakeNameEx(addr, "SsmGet_Mass_Airflow_P12__", SN_CHECK);

MakeUnknown(0x00042780, 4, DOUNK_SIMPLE);
MakeDword(0x00042780);
MakeNameEx(0x00042780, "PtrSsmGet_Throttle_Opening_Angle_P13__", SN_CHECK);
addr = Dword(0x00042780);
MakeNameEx(addr, "SsmGet_Throttle_Opening_Angle_P13__", SN_CHECK);

MakeUnknown(0x00042784, 4, DOUNK_SIMPLE);
MakeDword(0x00042784);
MakeNameEx(0x00042784, "PtrSsmGet_Front_O2_Sensor_1_P14__", SN_CHECK);
addr = Dword(0x00042784);
MakeNameEx(addr, "SsmGet_Front_O2_Sensor_1_P14__", SN_CHECK);

MakeUnknown(0x0004278C, 4, DOUNK_SIMPLE);
MakeDword(0x0004278C);
MakeNameEx(0x0004278C, "PtrSsmGet_Rear_O2_Sensor_P15__", SN_CHECK);
addr = Dword(0x0004278C);
MakeNameEx(addr, "SsmGet_Rear_O2_Sensor_P15__", SN_CHECK);

MakeUnknown(0x00042794, 4, DOUNK_SIMPLE);
MakeDword(0x00042794);
MakeNameEx(0x00042794, "PtrSsmGet_Front_O2_Sensor_2_P16__", SN_CHECK);
addr = Dword(0x00042794);
MakeNameEx(addr, "SsmGet_Front_O2_Sensor_2_P16__", SN_CHECK);

MakeUnknown(0x0004279C, 4, DOUNK_SIMPLE);
MakeDword(0x0004279C);
MakeNameEx(0x0004279C, "PtrSsmGet_Battery_Voltage_P17__", SN_CHECK);
addr = Dword(0x0004279C);
MakeNameEx(addr, "SsmGet_Battery_Voltage_P17__", SN_CHECK);

MakeUnknown(0x000427A0, 4, DOUNK_SIMPLE);
MakeDword(0x000427A0);
MakeNameEx(0x000427A0, "PtrSsmGet_Mass_Airflow_Sensor_Voltage_P18__", SN_CHECK);
addr = Dword(0x000427A0);
MakeNameEx(addr, "SsmGet_Mass_Airflow_Sensor_Voltage_P18__", SN_CHECK);

MakeUnknown(0x000427A4, 4, DOUNK_SIMPLE);
MakeDword(0x000427A4);
MakeNameEx(0x000427A4, "PtrSsmGet_Throttle_Sensor_Voltage_P19__", SN_CHECK);
addr = Dword(0x000427A4);
MakeNameEx(addr, "SsmGet_Throttle_Sensor_Voltage_P19__", SN_CHECK);

MakeUnknown(0x000427A8, 4, DOUNK_SIMPLE);
MakeDword(0x000427A8);
MakeNameEx(0x000427A8, "PtrSsmGet_Differential_Pressure_Sensor_Voltage_P20__", SN_CHECK);
addr = Dword(0x000427A8);
MakeNameEx(addr, "SsmGet_Differential_Pressure_Sensor_Voltage_P20__", SN_CHECK);

MakeUnknown(0x000427AC, 4, DOUNK_SIMPLE);
MakeDword(0x000427AC);
MakeNameEx(0x000427AC, "PtrSsmGet_Fuel_Injector_1_Pulse_Width_P21__", SN_CHECK);
addr = Dword(0x000427AC);
MakeNameEx(addr, "SsmGet_Fuel_Injector_1_Pulse_Width_P21__", SN_CHECK);

MakeUnknown(0x000427B0, 4, DOUNK_SIMPLE);
MakeDword(0x000427B0);
MakeNameEx(0x000427B0, "PtrSsmGet_Fuel_Injector_2_Pulse_Width_P22__", SN_CHECK);
addr = Dword(0x000427B0);
MakeNameEx(addr, "SsmGet_Fuel_Injector_2_Pulse_Width_P22__", SN_CHECK);

MakeUnknown(0x000427B4, 4, DOUNK_SIMPLE);
MakeDword(0x000427B4);
MakeNameEx(0x000427B4, "PtrSsmGet_Knock_Correction_Advance_P23__", SN_CHECK);
addr = Dword(0x000427B4);
MakeNameEx(addr, "SsmGet_Knock_Correction_Advance_P23__", SN_CHECK);

MakeNameEx(0x000427B8, "PtrSsmGet_Atmospheric_Pressure_P24__", SN_CHECK);
addr = Dword(0x000427B8);
MakeUnknown(0x000427B8, 4, DOUNK_SIMPLE);
MakeDword(0x000427B8);
MakeNameEx(addr, "SsmGet_Atmospheric_Pressure_P24__", SN_CHECK);

addr = Dword(0x000427BC);
MakeNameEx(addr, "SsmGet_Manifold_Relative_Pressure_P25__", SN_CHECK);
MakeNameEx(0x000427BC, "PtrSsmGet_Manifold_Relative_Pressure_P25__", SN_CHECK);
MakeUnknown(0x000427C0, 4, DOUNK_SIMPLE);
MakeDword(0x000427C0);

MakeDword(0x000427BC);
addr = Dword(0x000427C0);
MakeNameEx(addr, "SsmGet_Pressure_Differential_Sensor_P26__", SN_CHECK);

MakeUnknown(0x000427C4, 4, DOUNK_SIMPLE);
MakeDword(0x000427C4);
MakeNameEx(0x000427C4, "PtrSsmGet_Fuel_Tank_Pressure_P27__", SN_CHECK);
addr = Dword(0x000427C4);
MakeNameEx(addr, "SsmGet_Fuel_Tank_Pressure_P27__", SN_CHECK);

MakeUnknown(0x000427C8, 4, DOUNK_SIMPLE);
MakeDword(0x000427C8);
MakeNameEx(0x000427C8, "PtrSsmGet_CO_Adjustment_P28__", SN_CHECK);
addr = Dword(0x000427C8);
MakeNameEx(0x000427C0, "PtrSsmGet_Pressure_Differential_Sensor_P26__", SN_CHECK);
MakeUnknown(0x000427CC, 4, DOUNK_SIMPLE);
MakeDword(0x000427CC);
MakeNameEx(0x000427CC, "PtrSsmGet_Learned_Ignition_Timing_P29__", SN_CHECK);
MakeUnknown(0x000427BC, 4, DOUNK_SIMPLE);
addr = Dword(0x000427CC);
MakeNameEx(addr, "SsmGet_CO_Adjustment_P28__", SN_CHECK);
MakeNameEx(addr, "SsmGet_Learned_Ignition_Timing_P29__", SN_CHECK);
MakeUnknown(0x000427D0, 4, DOUNK_SIMPLE);
MakeDword(0x000427D0);
MakeNameEx(0x000427D0, "PtrSsmGet_Accelerator_Pedal_Angle_P30__", SN_CHECK);
addr = Dword(0x000427D0);
MakeNameEx(addr, "SsmGet_Accelerator_Pedal_Angle_P30__", SN_CHECK);

MakeUnknown(0x000427D4, 4, DOUNK_SIMPLE);
MakeDword(0x000427D4);
MakeNameEx(0x000427D4, "PtrSsmGet_Fuel_Temperature_P31__", SN_CHECK);
addr = Dword(0x000427D4);
MakeNameEx(addr, "SsmGet_Fuel_Temperature_P31__", SN_CHECK);

MakeUnknown(0x000427D8, 4, DOUNK_SIMPLE);
MakeDword(0x000427D8);
MakeNameEx(0x000427D8, "PtrSsmGet_Front_O2_Heater_Current_1_P32__", SN_CHECK);
addr = Dword(0x000427D8);
MakeNameEx(addr, "SsmGet_Front_O2_Heater_Current_1_P32__", SN_CHECK);

MakeUnknown(0x000427DC, 4, DOUNK_SIMPLE);
MakeDword(0x000427DC);
MakeNameEx(0x000427DC, "PtrSsmGet_Rear_O2_Heater_Current_P33__", SN_CHECK);
addr = Dword(0x000427DC);
MakeNameEx(addr, "SsmGet_Rear_O2_Heater_Current_P33__", SN_CHECK);

MakeUnknown(0x000427E0, 4, DOUNK_SIMPLE);
MakeDword(0x000427E0);
MakeNameEx(0x000427E0, "PtrSsmGet_Front_O2_Heater_Current_2_P34__", SN_CHECK);
addr = Dword(0x000427E0);
MakeNameEx(addr, "SsmGet_Front_O2_Heater_Current_2_P34__", SN_CHECK);
MakeUnknown(0x000427E4, 4, DOUNK_SIMPLE);

MakeDword(0x000427E4);
MakeNameEx(0x000427E4, "PtrSsmGet_Fuel_Level_P35__", SN_CHECK);
addr = Dword(0x000427E4);
MakeNameEx(addr, "SsmGet_Fuel_Level_P35__", SN_CHECK);

MakeUnknown(0x000427EC, 4, DOUNK_SIMPLE);
MakeDword(0x000427EC);
MakeNameEx(0x000427EC, "PtrSsmGet_Primary_Wastegate_Duty_Cycle_P36__", SN_CHECK);
addr = Dword(0x000427EC);
MakeNameEx(addr, "SsmGet_Primary_Wastegate_Duty_Cycle_P36__", SN_CHECK);

MakeUnknown(0x000427F0, 4, DOUNK_SIMPLE);
MakeDword(0x000427F0);
MakeNameEx(0x000427F0, "PtrSsmGet_Secondary_Wastegate_Duty_Cycle_P37__", SN_CHECK);
addr = Dword(0x000427F0);
MakeNameEx(addr, "SsmGet_Secondary_Wastegate_Duty_Cycle_P37__", SN_CHECK);

MakeUnknown(0x000427F4, 4, DOUNK_SIMPLE);
MakeDword(0x000427F4);
MakeNameEx(0x000427F4, "PtrSsmGet_CPC_Valve_Duty_Ratio_P38__", SN_CHECK);
addr = Dword(0x000427F4);
MakeNameEx(addr, "SsmGet_CPC_Valve_Duty_Ratio_P38__", SN_CHECK);

MakeUnknown(0x000427F8, 4, DOUNK_SIMPLE);
MakeDword(0x000427F8);
MakeNameEx(0x000427F8, "PtrSsmGet_Tumble_Valve_Position_Sensor_Right_P39__", SN_CHECK);
addr = Dword(0x000427F8);
MakeNameEx(addr, "SsmGet_Tumble_Valve_Position_Sensor_Right_P39__", SN_CHECK);

MakeUnknown(0x000427FC, 4, DOUNK_SIMPLE);
MakeDword(0x000427FC);
MakeNameEx(0x000427FC, "PtrSsmGet_Tumble_Valve_Position_Sensor_Left_P40__", SN_CHECK);
addr = Dword(0x000427FC);
MakeNameEx(addr, "SsmGet_Tumble_Valve_Position_Sensor_Left_P40__", SN_CHECK);

MakeUnknown(0x00042800, 4, DOUNK_SIMPLE);
MakeDword(0x00042800);
MakeNameEx(0x00042800, "PtrSsmGet_Idle_Speed_Control_Valve_Duty_Ratio_P41__", SN_CHECK);
addr = Dword(0x00042800);
MakeNameEx(addr, "SsmGet_Idle_Speed_Control_Valve_Duty_Ratio_P41__", SN_CHECK);

MakeUnknown(0x00042804, 4, DOUNK_SIMPLE);
MakeDword(0x00042804);
MakeNameEx(0x00042804, "PtrSsmGet_AF_Lean_Correction_P42__", SN_CHECK);
addr = Dword(0x00042804);
MakeNameEx(addr, "SsmGet_AF_Lean_Correction_P42__", SN_CHECK);

MakeUnknown(0x00042808, 4, DOUNK_SIMPLE);
MakeDword(0x00042808);
MakeNameEx(0x00042808, "PtrSsmGet_AF_Heater_Duty_P43__", SN_CHECK);
addr = Dword(0x00042808);
MakeNameEx(addr, "SsmGet_AF_Heater_Duty_P43__", SN_CHECK);

MakeUnknown(0x0004280C, 4, DOUNK_SIMPLE);
MakeDword(0x0004280C);
MakeNameEx(0x0004280C, "PtrSsmGet_Idle_Speed_Control_Valve_Step_P44__", SN_CHECK);
addr = Dword(0x0004280C);
MakeNameEx(addr, "SsmGet_Idle_Speed_Control_Valve_Step_P44__", SN_CHECK);

MakeUnknown(0x00042810, 4, DOUNK_SIMPLE);
MakeDword(0x00042810);
MakeNameEx(0x00042810, "PtrSsmGet_Number_of_Exh_Gas_Recirc_Steps_P45__", SN_CHECK);
addr = Dword(0x00042810);
MakeNameEx(addr, "SsmGet_Number_of_Exh_Gas_Recirc_Steps_P45__", SN_CHECK);

MakeUnknown(0x00042814, 4, DOUNK_SIMPLE);
MakeDword(0x00042814);
MakeNameEx(0x00042814, "PtrSsmGet_Alternator_Duty_P46__", SN_CHECK);
addr = Dword(0x00042814);
MakeNameEx(addr, "SsmGet_Alternator_Duty_P46__", SN_CHECK);

MakeUnknown(0x00042818, 4, DOUNK_SIMPLE);
MakeDword(0x00042818);
MakeNameEx(0x00042818, "PtrSsmGet_Fuel_Pump_Duty_P47__", SN_CHECK);
addr = Dword(0x00042818);
MakeNameEx(addr, "SsmGet_Fuel_Pump_Duty_P47__", SN_CHECK);


MakeUnknown(0x0004281C, 4, DOUNK_SIMPLE);
MakeDword(0x0004281C);
MakeNameEx(0x0004281C, "PtrSsmGet_Intake_VVT_Advance_Angle_Right_P48__", SN_CHECK);


MakeUnknown(0x00042820, 4, DOUNK_SIMPLE);
MakeDword(0x00042820);
MakeNameEx(0x00042820, "PtrSsmGet_Intake_VVT_Advance_Angle_Left_P49__", SN_CHECK);
addr = Dword(0x00042820);
MakeNameEx(addr, "SsmGet_Intake_VVT_Advance_Angle_Left_P49__", SN_CHECK);

MakeUnknown(0x00042824, 4, DOUNK_SIMPLE);
MakeDword(0x00042824);
MakeNameEx(0x00042824, "PtrSsmGet_Intake_OCV_Duty_Right_P50__", SN_CHECK);
addr = Dword(0x00042824);
MakeNameEx(addr, "SsmGet_Intake_OCV_Duty_Right_P50__", SN_CHECK);

MakeUnknown(0x00042828, 4, DOUNK_SIMPLE);
MakeDword(0x00042828);
MakeNameEx(0x00042828, "PtrSsmGet_Intake_OCV_Duty_Left_P51__", SN_CHECK);
addr = Dword(0x00042828);
MakeNameEx(addr, "SsmGet_Intake_OCV_Duty_Left_P51__", SN_CHECK);

MakeUnknown(0x0004282C, 4, DOUNK_SIMPLE);
MakeDword(0x0004282C);
MakeNameEx(0x0004282C, "PtrSsmGet_Intake_OCV_Current_Right_P52__", SN_CHECK);
addr = Dword(0x0004282C);
MakeNameEx(addr, "SsmGet_Intake_OCV_Current_Right_P52__", SN_CHECK);

MakeUnknown(0x00042830, 4, DOUNK_SIMPLE);
MakeDword(0x00042830);
MakeNameEx(0x00042830, "PtrSsmGet_Intake_OCV_Current_Left_P53__", SN_CHECK);
addr = Dword(0x00042830);
MakeNameEx(addr, "SsmGet_Intake_OCV_Current_Left_P53__", SN_CHECK);

MakeUnknown(0x00042834, 4, DOUNK_SIMPLE);
MakeDword(0x00042834);
MakeNameEx(0x00042834, "PtrSsmGet_AF_Sensor_1_Current_P54__", SN_CHECK);
MakeNameEx(addr, "SsmGet_Intake_VVT_Advance_Angle_Right_P48__", SN_CHECK);
MakeNameEx(addr, "SsmGet_AF_Sensor_1_Current_P54__", SN_CHECK);

addr = Dword(0x00042834);
MakeUnknown(0x00042838, 4, DOUNK_SIMPLE);
MakeDword(0x00042838);
MakeNameEx(0x00042838, "PtrSsmGet_AF_Sensor_2_Current_P55__", SN_CHECK);
addr = Dword(0x00042838);
MakeNameEx(addr, "SsmGet_AF_Sensor_2_Current_P55__", SN_CHECK);

MakeUnknown(0x0004283C, 4, DOUNK_SIMPLE);
MakeDword(0x0004283C);
MakeNameEx(0x0004283C, "PtrSsmGet_AF_Sensor_1_Resistance_P56__", SN_CHECK);
addr = Dword(0x0004283C);
MakeNameEx(addr, "SsmGet_AF_Sensor_1_Resistance_P56__", SN_CHECK);
MakeDword(0x00042840);
MakeNameEx(0x00042840, "PtrSsmGet_AF_Sensor_2_Resistance_P57__", SN_CHECK);
addr = Dword(0x00042840);
MakeNameEx(addr, "SsmGet_AF_Sensor_2_Resistance_P57__", SN_CHECK);

MakeUnknown(0x00042844, 4, DOUNK_SIMPLE);
MakeDword(0x00042844);
MakeNameEx(0x00042844, "PtrSsmGet_AF_Sensor_1_P58__", SN_CHECK);
addr = Dword(0x00042844);
MakeNameEx(addr, "SsmGet_AF_Sensor_1_P58__", SN_CHECK);

MakeUnknown(0x00042848, 4, DOUNK_SIMPLE);
MakeDword(0x00042848);
MakeNameEx(0x00042848, "PtrSsmGet_AF_Sensor_2_P59__", SN_CHECK);
addr = Dword(0x00042848);
MakeNameEx(addr, "SsmGet_AF_Sensor_2_P59__", SN_CHECK);

MakeUnknown(0x00042854, 4, DOUNK_SIMPLE);
MakeDword(0x00042854);
MakeNameEx(0x00042854, "PtrSsmGet_Gear_Position_P60__", SN_CHECK);
addr = Dword(0x00042854);
MakeNameEx(addr, "SsmGet_Gear_Position_P60__", SN_CHECK);

MakeUnknown(0x00042878, 4, DOUNK_SIMPLE);
MakeDword(0x00042878);
MakeNameEx(0x00042878, "PtrSsmGet_AF_Sensor_1_Heater_Current_P61__", SN_CHECK);
addr = Dword(0x00042878);
MakeNameEx(addr, "SsmGet_AF_Sensor_1_Heater_Current_P61__", SN_CHECK);


MakeUnknown(0x0004287C, 4, DOUNK_SIMPLE);
MakeDword(0x0004287C);
MakeNameEx(0x0004287C, "PtrSsmGet_AF_Sensor_2_Heater_Current_P62__", SN_CHECK);
addr = Dword(0x0004287C);
MakeNameEx(addr, "SsmGet_AF_Sensor_2_Heater_Current_P62__", SN_CHECK);

MakeUnknown(0x00042840, 4, DOUNK_SIMPLE);
MakeUnknown(0x00042A64, 4, DOUNK_SIMPLE);
addr = Dword(0x00042A64);
addr = Dword(0x0004281C);
MakeDword(0x00042A64);

MakeDword(0x00042A68);
MakeNameEx(0x00042A64, "PtrSsmGet_Roughness_Monitor_Cylinder_1_P63__", SN_CHECK);
MakeNameEx(0x00042A68, "PtrSsmGet_Roughness_Monitor_Cylinder_2_P64__", SN_CHECK);
addr = Dword(0x00042A68);
MakeNameEx(addr, "SsmGet_Roughness_Monitor_Cylinder_2_P64__", SN_CHECK);

MakeUnknown(0x00042A6C, 4, DOUNK_SIMPLE);
MakeNameEx(addr, "SsmGet_Roughness_Monitor_Cylinder_1_P63__", SN_CHECK);
MakeDword(0x00042A6C);
MakeNameEx(0x00042A6C, "PtrSsmGet_AF_Correction_3_16bit_ECU_P65__", SN_CHECK);
MakeNameEx(addr, "SsmGet_AF_Correction_3_16bit_ECU_P65__", SN_CHECK);

MakeUnknown(0x00042A70, 4, DOUNK_SIMPLE);
MakeDword(0x00042A70);
MakeNameEx(0x00042A70, "PtrSsmGet_AF_Learning_3_P66__", SN_CHECK);
addr = Dword(0x00042A70);
MakeNameEx(addr, "SsmGet_AF_Learning_3_P66__", SN_CHECK);

MakeUnknown(0x00042A74, 4, DOUNK_SIMPLE);
MakeDword(0x00042A74);
MakeNameEx(0x00042A74, "PtrSsmGet_Rear_O2_Heater_Voltage_P67__", SN_CHECK);
addr = Dword(0x00042A6C);
addr = Dword(0x00042A74);
MakeUnknown(0x00042A78, 4, DOUNK_SIMPLE);
MakeDword(0x00042A78);
MakeNameEx(0x00042A78, "PtrSsmGet_AF_Adjustment_Voltage_P68__", SN_CHECK);
addr = Dword(0x00042A78);
MakeNameEx(addr, "SsmGet_AF_Adjustment_Voltage_P68__", SN_CHECK);


MakeDword(0x00042A8C);
MakeUnknown(0x00042A68, 4, DOUNK_SIMPLE);
MakeNameEx(0x00042A8C, "PtrSsmGet_Roughness_Monitor_Cylinder_3_P69__", SN_CHECK);
addr = Dword(0x00042A8C);

MakeUnknown(0x00042A8C, 4, DOUNK_SIMPLE);
MakeUnknown(0x00042A90, 4, DOUNK_SIMPLE);
MakeDword(0x00042A90);
MakeNameEx(0x00042A90, "PtrSsmGet_Roughness_Monitor_Cylinder_4_P70__", SN_CHECK);
addr = Dword(0x00042A90);
MakeNameEx(addr, "SsmGet_Rear_O2_Heater_Voltage_P67__", SN_CHECK);
MakeNameEx(addr, "SsmGet_Roughness_Monitor_Cylinder_3_P69__", SN_CHECK);

MakeUnknown(0x00042B14, 4, DOUNK_SIMPLE);
MakeDword(0x00042B14);
addr = Dword(0x00042B14);
MakeNameEx(0x00042B14, "PtrSsmGet_Throttle_Motor_Duty_P71__", SN_CHECK);
MakeNameEx(addr, "SsmGet_Throttle_Motor_Duty_P71__", SN_CHECK);

MakeUnknown(0x00042B18, 4, DOUNK_SIMPLE);
MakeDword(0x00042B18);
MakeNameEx(0x00042B18, "PtrSsmGet_Throttle_Motor_Voltage_P72__", SN_CHECK);
addr = Dword(0x00042B18);
MakeNameEx(addr, "SsmGet_Throttle_Motor_Voltage_P72__", SN_CHECK);

MakeDword(0x00042B2C);
MakeUnknown(0x00042B2C, 4, DOUNK_SIMPLE);
MakeNameEx(0x00042B2C, "PtrSsmGet_Sub_Throttle_Sensor_P73__", SN_CHECK);
MakeNameEx(addr, "SsmGet_Sub_Throttle_Sensor_P73__", SN_CHECK);
addr = Dword(0x00042B2C);
MakeUnknown(0x00042B30, 4, DOUNK_SIMPLE);
MakeDword(0x00042B30);
MakeNameEx(0x00042B30, "PtrSsmGet_Main_Throttle_Sensor_P74__", SN_CHECK);
addr = Dword(0x00042B30);
MakeNameEx(addr, "SsmGet_Main_Throttle_Sensor_P74__", SN_CHECK);

MakeUnknown(0x00042B34, 4, DOUNK_SIMPLE);
MakeNameEx(addr, "SsmGet_Roughness_Monitor_Cylinder_4_P70__", SN_CHECK);
MakeDword(0x00042B34);
MakeNameEx(0x00042B34, "PtrSsmGet_Sub_Accelerator_Sensor_P75__", SN_CHECK);
addr = Dword(0x00042B34);

MakeNameEx(addr, "SsmGet_Sub_Accelerator_Sensor_P75__", SN_CHECK);

MakeUnknown(0x00042B38, 4, DOUNK_SIMPLE);
MakeDword(0x00042B38);
MakeNameEx(0x00042B38, "PtrSsmGet_Main_Accelerator_Sensor_P76__", SN_CHECK);
addr = Dword(0x00042B38);
MakeNameEx(addr, "SsmGet_Main_Accelerator_Sensor_P76__", SN_CHECK);

MakeUnknown(0x00042B3C, 4, DOUNK_SIMPLE);
MakeDword(0x00042B3C);
MakeNameEx(0x00042B3C, "PtrSsmGet_Brake_Booster_Pressure_P77__", SN_CHECK);
addr = Dword(0x00042B3C);
MakeNameEx(addr, "SsmGet_Brake_Booster_Pressure_P77__", SN_CHECK);

MakeUnknown(0x00042B40, 4, DOUNK_SIMPLE);
MakeDword(0x00042B40);
MakeNameEx(0x00042B40, "PtrSsmGet_Fuel_Pressure_High_P78__", SN_CHECK);
addr = Dword(0x00042B40);
MakeNameEx(addr, "SsmGet_Fuel_Pressure_High_P78__", SN_CHECK);

MakeUnknown(0x00042B44, 4, DOUNK_SIMPLE);
MakeDword(0x00042B44);
MakeNameEx(0x00042B44, "PtrSsmGet_Exhaust_Gas_Temperature_P79__", SN_CHECK);
addr = Dword(0x00042B44);
MakeNameEx(addr, "SsmGet_Exhaust_Gas_Temperature_P79__", SN_CHECK);

MakeUnknown(0x00042B4C, 4, DOUNK_SIMPLE);
MakeDword(0x00042B4C);
MakeNameEx(0x00042B4C, "PtrSsmGet_Cold_Start_Injector_Air_Pump_P80__", SN_CHECK);
addr = Dword(0x00042B4C);
MakeNameEx(addr, "SsmGet_Cold_Start_Injector_Air_Pump_P80__", SN_CHECK);

MakeUnknown(0x00042B50, 4, DOUNK_SIMPLE);
MakeDword(0x00042B50);
MakeNameEx(0x00042B50, "PtrSsmGet_SCV_Step_P81__", SN_CHECK);
addr = Dword(0x00042B50);
MakeNameEx(addr, "SsmGet_SCV_Step_P81__", SN_CHECK);

MakeUnknown(0x00042B54, 4, DOUNK_SIMPLE);
MakeDword(0x00042B54);
MakeNameEx(0x00042B54, "PtrSsmGet_Memorised_Cruise_Speed_P82__", SN_CHECK);
addr = Dword(0x00042B54);
MakeNameEx(addr, "SsmGet_Memorised_Cruise_Speed_P82__", SN_CHECK);
MakeUnknown(0x00042B8C, 4, DOUNK_SIMPLE);
MakeDword(0x00042B8C);

MakeNameEx(0x00042B8C, "PtrSsmGet_Exhaust_VVT_Advance_Angle_Right_P83__", SN_CHECK);
addr = Dword(0x00042B8C);
MakeNameEx(addr, "SsmGet_Exhaust_VVT_Advance_Angle_Right_P83__", SN_CHECK);

MakeUnknown(0x00042B90, 4, DOUNK_SIMPLE);
MakeDword(0x00042B90);
MakeNameEx(0x00042B90, "PtrSsmGet_Exhaust_VVT_Advance_Angle_Left_P84__", SN_CHECK);
addr = Dword(0x00042B90);
MakeNameEx(addr, "SsmGet_Exhaust_VVT_Advance_Angle_Left_P84__", SN_CHECK);

MakeUnknown(0x00042B94, 4, DOUNK_SIMPLE);
MakeDword(0x00042B94);
MakeNameEx(0x00042B94, "PtrSsmGet_Exhaust_OCV_Duty_Right_P85__", SN_CHECK);
addr = Dword(0x00042B94);
MakeNameEx(addr, "SsmGet_Exhaust_OCV_Duty_Right_P85__", SN_CHECK);

MakeUnknown(0x00042B98, 4, DOUNK_SIMPLE);
MakeDword(0x00042B98);
MakeNameEx(0x00042B98, "PtrSsmGet_Exhaust_OCV_Duty_Left_P86__", SN_CHECK);
addr = Dword(0x00042B98);
MakeNameEx(addr, "SsmGet_Exhaust_OCV_Duty_Left_P86__", SN_CHECK);

MakeUnknown(0x00042B9C, 4, DOUNK_SIMPLE);
MakeDword(0x00042B9C);
MakeNameEx(0x00042B9C, "PtrSsmGet_Exhaust_OCV_Current_Right_P87__", SN_CHECK);
addr = Dword(0x00042B9C);
MakeNameEx(addr, "SsmGet_Exhaust_OCV_Current_Right_P87__", SN_CHECK);

MakeUnknown(0x00042BA0, 4, DOUNK_SIMPLE);
MakeDword(0x00042BA0);
MakeNameEx(0x00042BA0, "PtrSsmGet_Exhaust_OCV_Current_Left_P88__", SN_CHECK);
addr = Dword(0x00042BA0);
MakeNameEx(addr, "SsmGet_Exhaust_OCV_Current_Left_P88__", SN_CHECK);

MakeUnknown(0x00042A6C, 4, DOUNK_SIMPLE);
MakeDword(0x00042A6C);
MakeNameEx(0x00042A6C, "PtrSsmGet_AF_Correction_3_32bit_ECU_P89__", SN_CHECK);
addr = Dword(0x00042A6C);
MakeNameEx(addr, "SsmGet_AF_Correction_3_32bit_ECU_P89__", SN_CHECK);

MakeUnknown(0x00042B10, 4, DOUNK_SIMPLE);
MakeDword(0x00042B10);
MakeNameEx(0x00042B10, "PtrSsmGet_IAM_P90__", SN_CHECK);
addr = Dword(0x00042B10);
MakeNameEx(addr, "SsmGet_IAM_P90__", SN_CHECK);

MakeUnknown(0x00042D90, 4, DOUNK_SIMPLE);
MakeDword(0x00042D90);
MakeNameEx(0x00042D90, "PtrSsmGet_Fine_Learning_Knock_Correction_P91__", SN_CHECK);
addr = Dword(0x00042D90);
MakeUnknown(0x000427E8, 4, DOUNK_SIMPLE);

MakeDword(0x000427E8);
MakeNameEx(addr, "SsmGet_Fine_Learning_Knock_Correction_P91__", SN_CHECK);
MakeNameEx(0x000427E8, "PtrSsmGet_Radiator_Fan_Control_P92__", SN_CHECK);
addr = Dword(0x000427E8);
MakeNameEx(addr, "SsmGet_Radiator_Fan_Control_P92__", SN_CHECK);

MakeUnknown(0x00042CD4, 4, DOUNK_SIMPLE);
MakeDword(0x00042CD4);
MakeNameEx(0x00042CD4, "PtrSsmGet_SIDrive_Mode_P114__", SN_CHECK);
addr = Dword(0x00042CD4);
MakeNameEx(addr, "SsmGet_SIDrive_Mode_P114__", SN_CHECK);

MakeUnknown(0x00042CD8, 4, DOUNK_SIMPLE);
MakeDword(0x00042CD8);
MakeNameEx(0x00042CD8, "PtrSsmGet_Throttle_Sensor_Closed_Voltage_P115__", SN_CHECK);
addr = Dword(0x00042CD8);
MakeNameEx(addr, "SsmGet_Throttle_Sensor_Closed_Voltage_P115__", SN_CHECK);

MakeUnknown(0x00042B48, 4, DOUNK_SIMPLE);
MakeDword(0x00042B48);
MakeNameEx(0x00042B48, "PtrSsmGet_Exhaust_Gas_Temperature_2_P116__", SN_CHECK);
addr = Dword(0x00042B48);
MakeNameEx(addr, "SsmGet_Exhaust_Gas_Temperature_2_P116__", SN_CHECK);

MakeUnknown(0x00042B58, 4, DOUNK_SIMPLE);
MakeDword(0x00042B58);
MakeNameEx(0x00042B58, "PtrSsmGet_AirFuel_Correction_4_P117__", SN_CHECK);
addr = Dword(0x00042B58);
MakeNameEx(addr, "SsmGet_AirFuel_Correction_4_P117__", SN_CHECK);

MakeUnknown(0x00042B5C, 4, DOUNK_SIMPLE);
MakeDword(0x00042B5C);
MakeNameEx(0x00042B5C, "PtrSsmGet_AirFuel_Learning_4_P118__", SN_CHECK);
addr = Dword(0x00042B5C);
MakeNameEx(addr, "SsmGet_AirFuel_Learning_4_P118__", SN_CHECK);

MakeUnknown(0x00042B60, 4, DOUNK_SIMPLE);
MakeDword(0x00042B60);
MakeNameEx(0x00042B60, "PtrSsmGet_Fuel_Level_Sensor_Resistance_P119__", SN_CHECK);
addr = Dword(0x00042B60);
MakeNameEx(addr, "SsmGet_Fuel_Level_Sensor_Resistance_P119__", SN_CHECK);

MakeUnknown(0x00042B64, 4, DOUNK_SIMPLE);
MakeDword(0x00042B64);
MakeNameEx(0x00042B64, "PtrSsmGet_Estimated_odometer_P120__", SN_CHECK);
addr = Dword(0x00042B64);
MakeNameEx(addr, "SsmGet_Estimated_odometer_P120__", SN_CHECK);
MakeUnknown(0x00042CF4, 4, DOUNK_SIMPLE);
MakeDword(0x00042CF4);
MakeNameEx(0x00042CF4, "PtrSsmGet_Fuel_Tank_Air_Pressure_P121__", SN_CHECK);

addr = Dword(0x00042CF4);
MakeNameEx(addr, "SsmGet_Fuel_Tank_Air_Pressure_P121__", SN_CHECK);

MakeUnknown(0x00042B78, 4, DOUNK_SIMPLE);
MakeDword(0x00042B78);
MakeNameEx(0x00042B78, "PtrSsmGet_Oil_Temperature_P122__", SN_CHECK);
MakeNameEx(addr, "SsmGet_Oil_Temperature_P122__", SN_CHECK);

MakeUnknown(0x00042B7C, 4, DOUNK_SIMPLE);
addr = Dword(0x00042B78);
addr = Dword(0x00042B7C);
MakeNameEx(0x00042B7C, "PtrSsmGet_Oil_Switching_Solenoid_Valve_OSV_Duty_Right_P123__", SN_CHECK);
MakeNameEx(addr, "SsmGet_Oil_Switching_Solenoid_Valve_OSV_Duty_Right_P123__", SN_CHECK);

MakeDword(0x00042B80);
MakeUnknown(0x00042B80, 4, DOUNK_SIMPLE);
MakeNameEx(0x00042B80, "PtrSsmGet_Oil_Switching_Solenoid_Valve_OSV_Duty_Left_P124__", SN_CHECK);

MakeUnknown(0x00042B84, 4, DOUNK_SIMPLE);
MakeDword(0x00042B84);
MakeNameEx(0x00042B84, "PtrSsmGet_Oil_Switching_Solenoid_Valve_OSV_Current_Right_P125__", SN_CHECK);
addr = Dword(0x00042B84);
MakeNameEx(addr, "SsmGet_Oil_Switching_Solenoid_Valve_OSV_Current_Right_P125__", SN_CHECK);

addr = Dword(0x00042B80);
MakeDword(0x00042B7C);
MakeUnknown(0x00042B88, 4, DOUNK_SIMPLE);
MakeNameEx(0x00042B88, "PtrSsmGet_Oil_Switching_Solenoid_Valve_OSV_Current_Left_P126__", SN_CHECK);
addr = Dword(0x00042B88);
MakeNameEx(addr, "SsmGet_Oil_Switching_Solenoid_Valve_OSV_Current_Left_P126__", SN_CHECK);

MakeUnknown(0x00042BA4, 4, DOUNK_SIMPLE);
MakeDword(0x00042BA4);
MakeNameEx(0x00042BA4, "PtrSsmGet_VVL_Lift_Mode_P127__", SN_CHECK);
addr = Dword(0x00042BA4);
MakeNameEx(addr, "SsmGet_VVL_Lift_Mode_P127__", SN_CHECK);

MakeUnknown(0x00042AE8, 4, DOUNK_SIMPLE);
MakeDword(0x00042AE8);
MakeNameEx(0x00042AE8, "PtrSsmGet_Roughness_Monitor_Cylinder_5_P151__", SN_CHECK);
addr = Dword(0x00042AE8);
MakeNameEx(addr, "SsmGet_Roughness_Monitor_Cylinder_5_P151__", SN_CHECK);

MakeNameEx(addr, "SsmGet_Oil_Switching_Solenoid_Valve_OSV_Duty_Left_P124__", SN_CHECK);
MakeDword(0x00042B0C);
MakeNameEx(0x00042B0C, "PtrSsmGet_Roughness_Monitor_Cylinder_6_P152__", SN_CHECK);
MakeUnknown(0x00042B0C, 4, DOUNK_SIMPLE);
addr = Dword(0x00042B0C);

MakeUnknown(0x00042B10, 4, DOUNK_SIMPLE);
MakeDword(0x00042B10);
MakeNameEx(addr, "SsmGet_Roughness_Monitor_Cylinder_6_P152__", SN_CHECK);
MakeNameEx(0x00042B10, "PtrSsmGet_Learned_Ignition_Timing_Correction_P153__", SN_CHECK);
addr = Dword(0x00042B10);
MakeNameEx(addr, "SsmGet_Learned_Ignition_Timing_Correction_P153__", SN_CHECK);
MakeUnknown(0x00042D94, 4, DOUNK_SIMPLE);
MakeDword(0x00042D94);
MakeNameEx(0x00042D94, "PtrSsmGet_Fuel_Tank_Pressure_P154__", SN_CHECK);

addr = Dword(0x00042D94);
MakeNameEx(addr, "SsmGet_Fuel_Tank_Pressure_P154__", SN_CHECK);

MakeDword(0x00042B88);
MakeUnknown(0x00042EB0, 4, DOUNK_SIMPLE);
MakeDword(0x00042EB0);
MakeNameEx(0x00042EB0, "PtrSsmGet_Main_Injection_Period_P155__", SN_CHECK);
addr = Dword(0x00042EB0);
MakeNameEx(addr, "SsmGet_Main_Injection_Period_P155__", SN_CHECK);

MakeUnknown(0x00042EB4, 4, DOUNK_SIMPLE);
MakeDword(0x00042EB4);
MakeNameEx(0x00042EB4, "PtrSsmGet_Final_Injection_Amount_P156__", SN_CHECK);
addr = Dword(0x00042EB4);
MakeNameEx(addr, "SsmGet_Final_Injection_Amount_P156__", SN_CHECK);

MakeUnknown(0x00042EBC, 4, DOUNK_SIMPLE);
MakeDword(0x00042EBC);
MakeNameEx(0x00042EBC, "PtrSsmGet_Number_of_Times_Injected_P157__", SN_CHECK);
addr = Dword(0x00042EBC);
MakeNameEx(addr, "SsmGet_Number_of_Times_Injected_P157__", SN_CHECK);

MakeUnknown(0x00042EC0, 4, DOUNK_SIMPLE);
MakeDword(0x00042EC0);
MakeNameEx(0x00042EC0, "PtrSsmGet_Target_Intake_Manifold_Pressure_P158__", SN_CHECK);
addr = Dword(0x00042EC0);
MakeNameEx(addr, "SsmGet_Target_Intake_Manifold_Pressure_P158__", SN_CHECK);

MakeUnknown(0x00042EC4, 4, DOUNK_SIMPLE);
MakeDword(0x00042EC4);
MakeNameEx(0x00042EC4, "PtrSsmGet_Target_Intake_Air_Amount_P159__", SN_CHECK);
addr = Dword(0x00042EC4);
MakeNameEx(addr, "SsmGet_Target_Intake_Air_Amount_P159__", SN_CHECK);

MakeUnknown(0x00042EC8, 4, DOUNK_SIMPLE);
MakeDword(0x00042EC8);
MakeNameEx(0x00042EC8, "PtrSsmGet_Air_Mass_P160__", SN_CHECK);
addr = Dword(0x00042EC8);
MakeNameEx(addr, "SsmGet_Air_Mass_P160__", SN_CHECK);

MakeUnknown(0x00042ECC, 4, DOUNK_SIMPLE);
MakeDword(0x00042ECC);
MakeNameEx(0x00042ECC, "PtrSsmGet_Exhaust_Gas_Recirculation_EGR_Target_Valve_Opening_Angle_P161__", SN_CHECK);
addr = Dword(0x00042ECC);
MakeNameEx(addr, "SsmGet_Exhaust_Gas_Recirculation_EGR_Target_Valve_Opening_Angle_P161__", SN_CHECK);

MakeUnknown(0x00042ED0, 4, DOUNK_SIMPLE);
MakeDword(0x00042ED0);
MakeNameEx(0x00042ED0, "PtrSsmGet_Exhaust_Gas_Recirculation_EGR_Valve_Opening_Angle_P162__", SN_CHECK);
addr = Dword(0x00042ED0);
MakeNameEx(addr, "SsmGet_Exhaust_Gas_Recirculation_EGR_Valve_Opening_Angle_P162__", SN_CHECK);

MakeUnknown(0x00042ED4, 4, DOUNK_SIMPLE);
MakeDword(0x00042ED4);
MakeNameEx(0x00042ED4, "PtrSsmGet_Exhaust_Gas_Recirculation_EGR_Duty_P163__", SN_CHECK);
addr = Dword(0x00042ED4);
MakeUnknown(0x00042ED8, 4, DOUNK_SIMPLE);
MakeDword(0x00042ED8);

addr = Dword(0x00042ED8);
MakeNameEx(addr, "SsmGet_Common_Rail_Target_Pressure_P164__", SN_CHECK);

MakeUnknown(0x00042EDC, 4, DOUNK_SIMPLE);
MakeDword(0x00042EDC);
MakeNameEx(0x00042EDC, "PtrSsmGet_Common_Rail_Pressure_P165__", SN_CHECK);
addr = Dword(0x00042EDC);
MakeNameEx(addr, "SsmGet_Common_Rail_Pressure_P165__", SN_CHECK);

MakeNameEx(addr, "SsmGet_Exhaust_Gas_Recirculation_EGR_Duty_P163__", SN_CHECK);
MakeUnknown(0x00042EE0, 4, DOUNK_SIMPLE);
MakeDword(0x00042EE0);
MakeNameEx(0x00042EE0, "PtrSsmGet_Intake_Air_Temperature_combined_P166__", SN_CHECK);
addr = Dword(0x00042EE0);
MakeNameEx(0x00042ED8, "PtrSsmGet_Common_Rail_Target_Pressure_P164__", SN_CHECK);
MakeNameEx(addr, "SsmGet_Intake_Air_Temperature_combined_P166__", SN_CHECK);

MakeUnknown(0x00042EE4, 4, DOUNK_SIMPLE);
MakeDword(0x00042EE4);
MakeNameEx(0x00042EE4, "PtrSsmGet_Target_Engine_Speed_P167__", SN_CHECK);
addr = Dword(0x00042EE4);
MakeNameEx(addr, "SsmGet_Target_Engine_Speed_P167__", SN_CHECK);

MakeUnknown(0x00042EEC, 4, DOUNK_SIMPLE);
MakeDword(0x00042EEC);
MakeNameEx(0x00042EEC, "PtrSsmGet_Boost_Pressure_Feedback_P168__", SN_CHECK);
addr = Dword(0x00042EEC);
MakeNameEx(addr, "SsmGet_Boost_Pressure_Feedback_P168__", SN_CHECK);

MakeUnknown(0x00042F00, 4, DOUNK_SIMPLE);
MakeDword(0x00042F00);
MakeNameEx(0x00042F00, "PtrSsmGet_Electric_Power_Steering_Current_P169__", SN_CHECK);
addr = Dword(0x00042F00);
MakeNameEx(addr, "SsmGet_Electric_Power_Steering_Current_P169__", SN_CHECK);

MakeUnknown(0x00042F04, 4, DOUNK_SIMPLE);
MakeDword(0x00042F04);
MakeNameEx(0x00042F04, "PtrSsmGet_Fuel_Pump_Suction_Control_Valve_Current_Target_P170__", SN_CHECK);
addr = Dword(0x00042F04);

MakeNameEx(addr, "SsmGet_Fuel_Pump_Suction_Control_Valve_Current_Target_P170__", SN_CHECK);
MakeUnknown(0x00042F0C, 4, DOUNK_SIMPLE);
MakeDword(0x00042F0C);
MakeNameEx(0x00042F0C, "PtrSsmGet_Fuel_Pump_Suction_Control_Valve_Current_Actual_P175__", SN_CHECK);
addr = Dword(0x00042F0C);

MakeUnknown(0x00042F14, 4, DOUNK_SIMPLE);
MakeDword(0x00042F14);
MakeNameEx(addr, "SsmGet_Fuel_Pump_Suction_Control_Valve_Current_Actual_P175__", SN_CHECK);
MakeNameEx(0x00042F14, "PtrSsmGet_Mileage_after_Injector_Learning_P176__", SN_CHECK);
addr = Dword(0x00042F14);
MakeNameEx(addr, "SsmGet_Mileage_after_Injector_Learning_P176__", SN_CHECK);

MakeUnknown(0x00042F3C, 4, DOUNK_SIMPLE);
MakeDword(0x00042F3C);
MakeNameEx(0x00042F3C, "PtrSsmGet_Mileage_after_Injector_Replacement_P177__", SN_CHECK);
addr = Dword(0x00042F3C);
MakeNameEx(addr, "SsmGet_Mileage_after_Injector_Replacement_P177__", SN_CHECK);

MakeUnknown(0x000430EC, 4, DOUNK_SIMPLE);
MakeDword(0x000430EC);
MakeNameEx(0x000430EC, "PtrSsmGet_Interior_Heater_P178__", SN_CHECK);
addr = Dword(0x000430EC);
MakeNameEx(addr, "SsmGet_Interior_Heater_P178__", SN_CHECK);

MakeUnknown(0x000430A0, 4, DOUNK_SIMPLE);
MakeDword(0x000430A0);
MakeNameEx(0x000430A0, "PtrSsmGet_Quantity_Correction_Cylinder_1_P179__", SN_CHECK);
addr = Dword(0x000430A0);
MakeNameEx(addr, "SsmGet_Quantity_Correction_Cylinder_1_P179__", SN_CHECK);

MakeUnknown(0x000430A4, 4, DOUNK_SIMPLE);
MakeDword(0x000430A4);
MakeNameEx(0x000430A4, "PtrSsmGet_Quantity_Correction_Cylinder_2_P180__", SN_CHECK);
addr = Dword(0x000430A4);
MakeNameEx(addr, "SsmGet_Quantity_Correction_Cylinder_2_P180__", SN_CHECK);

MakeUnknown(0x000430A8, 4, DOUNK_SIMPLE);
MakeDword(0x000430A8);
MakeNameEx(0x000430A8, "PtrSsmGet_Quantity_Correction_Cylinder_3_P181__", SN_CHECK);
addr = Dword(0x000430A8);
MakeNameEx(addr, "SsmGet_Quantity_Correction_Cylinder_3_P181__", SN_CHECK);

MakeUnknown(0x000430AC, 4, DOUNK_SIMPLE);
MakeDword(0x000430AC);
MakeNameEx(0x000430AC, "PtrSsmGet_Quantity_Correction_Cylinder_4_P182__", SN_CHECK);
addr = Dword(0x000430AC);
MakeNameEx(addr, "SsmGet_Quantity_Correction_Cylinder_4_P182__", SN_CHECK);

MakeUnknown(0x000430F0, 4, DOUNK_SIMPLE);
MakeDword(0x000430F0);
MakeNameEx(0x000430F0, "PtrSsmGet_Battery_Current_P183__", SN_CHECK);
addr = Dword(0x000430F0);
MakeNameEx(addr, "SsmGet_Battery_Current_P183__", SN_CHECK);

MakeUnknown(0x000430F8, 4, DOUNK_SIMPLE);
MakeDword(0x000430F8);
MakeNameEx(0x000430F8, "PtrSsmGet_Battery_Temperature_P184__", SN_CHECK);
addr = Dword(0x000430F8);
MakeNameEx(addr, "SsmGet_Battery_Temperature_P184__", SN_CHECK);

MakeUnknown(0x000430F4, 4, DOUNK_SIMPLE);
MakeDword(0x000430F4);
MakeNameEx(0x000430F4, "PtrSsmGet_Alternator_Control_Mode_P185__", SN_CHECK);
addr = Dword(0x000430F4);
MakeNameEx(addr, "SsmGet_Alternator_Control_Mode_P185__", SN_CHECK);

MakeUnknown(0x00043100, 4, DOUNK_SIMPLE);
MakeDword(0x00043100);
MakeNameEx(0x00043100, "PtrSsmGet_Cumulative_Ash_Ratio_P186__", SN_CHECK);
addr = Dword(0x00043100);
MakeNameEx(addr, "SsmGet_Cumulative_Ash_Ratio_P186__", SN_CHECK);

MakeUnknown(0x00043104, 4, DOUNK_SIMPLE);
MakeDword(0x00043104);
MakeNameEx(0x00043104, "PtrSsmGet_Pressure_Difference_between_Diesel_Particulate_Filter_DPF_Inlet_and_Outlet_P187__", SN_CHECK);
addr = Dword(0x00043104);
MakeNameEx(addr, "SsmGet_Pressure_Difference_between_Diesel_Particulate_Filter_DPF_Inlet_and_Outlet_P187__", SN_CHECK);

MakeUnknown(0x00043108, 4, DOUNK_SIMPLE);
MakeDword(0x00043108);
MakeNameEx(0x00043108, "PtrSsmGet_Exhaust_Gas_Temperature_at_Catalyst_Inlet_P188__", SN_CHECK);
addr = Dword(0x00043108);
MakeNameEx(addr, "SsmGet_Exhaust_Gas_Temperature_at_Catalyst_Inlet_P188__", SN_CHECK);

MakeUnknown(0x0004310C, 4, DOUNK_SIMPLE);
MakeDword(0x0004310C);
MakeNameEx(0x0004310C, "PtrSsmGet_Exhaust_Gas_Temperature_at_Diesel_Particulate_Filter_DPF_Inlet_P189__", SN_CHECK);
addr = Dword(0x0004310C);
MakeNameEx(addr, "SsmGet_Exhaust_Gas_Temperature_at_Diesel_Particulate_Filter_DPF_Inlet_P189__", SN_CHECK);

MakeUnknown(0x00043110, 4, DOUNK_SIMPLE);
MakeDword(0x00043110);
MakeNameEx(0x00043110, "PtrSsmGet_Estimated_Catalyst_Temperature_P190__", SN_CHECK);
addr = Dword(0x00043110);
MakeNameEx(addr, "SsmGet_Estimated_Catalyst_Temperature_P190__", SN_CHECK);

MakeUnknown(0x00043114, 4, DOUNK_SIMPLE);
MakeDword(0x00043114);
MakeNameEx(0x00043114, "PtrSsmGet_Estimated_Temperature_of_the_Diesel_Particulate_Filter_DPF_P191__", SN_CHECK);
addr = Dword(0x00043114);
MakeNameEx(addr, "SsmGet_Estimated_Temperature_of_the_Diesel_Particulate_Filter_DPF_P191__", SN_CHECK);

MakeUnknown(0x00043118, 4, DOUNK_SIMPLE);
MakeDword(0x00043118);
MakeNameEx(0x00043118, "PtrSsmGet_Soot_Accumulation_Ratio_P192__", SN_CHECK);
addr = Dword(0x00043118);

MakeNameEx(addr, "SsmGet_Soot_Accumulation_Ratio_P192__", SN_CHECK);
MakeUnknown(0x0004311C, 4, DOUNK_SIMPLE);
MakeDword(0x0004311C);
MakeNameEx(0x0004311C, "PtrSsmGet_Oil_Dilution_Ratio_P193__", SN_CHECK);
addr = Dword(0x0004311C);
MakeNameEx(addr, "SsmGet_Oil_Dilution_Ratio_P193__", SN_CHECK);

MakeUnknown(0x0004318C, 4, DOUNK_SIMPLE);
MakeDword(0x0004318C);
MakeNameEx(0x0004318C, "PtrSsmGet_Accumulated_Count_of_Overspeed_Instances_Very_High_RPM_P198__", SN_CHECK);
addr = Dword(0x0004318C);
MakeNameEx(addr, "SsmGet_Accumulated_Count_of_Overspeed_Instances_Very_High_RPM_P198__", SN_CHECK);

MakeUnknown(0x00043190, 4, DOUNK_SIMPLE);
MakeDword(0x00043190);
MakeNameEx(0x00043190, "PtrSsmGet_Accumulated_Count_of_Overspeed_Instances_High_RPM_P199__", SN_CHECK);
addr = Dword(0x00043190);
MakeNameEx(addr, "SsmGet_Accumulated_Count_of_Overspeed_Instances_High_RPM_P199__", SN_CHECK);

MakeUnknown(0x00042FA8, 4, DOUNK_SIMPLE);
MakeDword(0x00042FA8);
MakeNameEx(0x00042FA8, "PtrSsmGet_Actual_Common_Rail_Pressure_Time_Synchronized_P204__", SN_CHECK);
addr = Dword(0x00042FA8);
MakeNameEx(addr, "SsmGet_Actual_Common_Rail_Pressure_Time_Synchronized_P204__", SN_CHECK);

MakeUnknown(0x00043194, 4, DOUNK_SIMPLE);
MakeDword(0x00043194);
MakeNameEx(0x00043194, "PtrSsmGet_Estimated_Distance_to_Oil_Change_P205__", SN_CHECK);
addr = Dword(0x00043194);
MakeNameEx(addr, "SsmGet_Estimated_Distance_to_Oil_Change_P205__", SN_CHECK);

MakeUnknown(0x00043198, 4, DOUNK_SIMPLE);
MakeDword(0x00043198);
MakeNameEx(0x00043198, "PtrSsmGet_Running_Distance_since_last_Diesel_Particulate_Filter_DPF_Regeneration_P206__", SN_CHECK);
addr = Dword(0x00043198);
MakeNameEx(addr, "SsmGet_Running_Distance_since_last_Diesel_Particulate_Filter_DPF_Regeneration_P206__", SN_CHECK);

MakeUnknown(0x000431A0, 4, DOUNK_SIMPLE);
MakeDword(0x000431A0);
MakeNameEx(0x000431A0, "PtrSsmGet_Diesel_Particulate_Filter_DPF_Regeneration_Count_P207__", SN_CHECK);
addr = Dword(0x000431A0);
MakeNameEx(addr, "SsmGet_Diesel_Particulate_Filter_DPF_Regeneration_Count_P207__", SN_CHECK);

MakeUnknown(0x00043020, 4, DOUNK_SIMPLE);
MakeDword(0x00043020);
MakeNameEx(0x00043020, "PtrSsmGet_MicroQuantityInjection_Final_Learning_Value_11_P208__", SN_CHECK);
addr = Dword(0x00043020);
MakeNameEx(addr, "SsmGet_MicroQuantityInjection_Final_Learning_Value_11_P208__", SN_CHECK);

MakeUnknown(0x00043024, 4, DOUNK_SIMPLE);
MakeDword(0x00043024);
MakeNameEx(0x00043024, "PtrSsmGet_MicroQuantityInjection_Final_Learning_Value_12_P209__", SN_CHECK);
addr = Dword(0x00043024);
MakeNameEx(addr, "SsmGet_MicroQuantityInjection_Final_Learning_Value_12_P209__", SN_CHECK);

MakeUnknown(0x00043028, 4, DOUNK_SIMPLE);
MakeDword(0x00043028);
MakeNameEx(0x00043028, "PtrSsmGet_MicroQuantityInjection_Final_Learning_Value_13_P210__", SN_CHECK);
addr = Dword(0x00043028);
MakeNameEx(addr, "SsmGet_MicroQuantityInjection_Final_Learning_Value_13_P210__", SN_CHECK);

MakeUnknown(0x0004302C, 4, DOUNK_SIMPLE);
MakeDword(0x0004302C);
MakeNameEx(0x0004302C, "PtrSsmGet_MicroQuantityInjection_Final_Learning_Value_14_P211__", SN_CHECK);
addr = Dword(0x0004302C);
MakeNameEx(addr, "SsmGet_MicroQuantityInjection_Final_Learning_Value_14_P211__", SN_CHECK);

MakeUnknown(0x00043030, 4, DOUNK_SIMPLE);
MakeDword(0x00043030);
MakeNameEx(0x00043030, "PtrSsmGet_MicroQuantityInjection_Final_Learning_Value_21_P212__", SN_CHECK);
addr = Dword(0x00043030);
MakeNameEx(addr, "SsmGet_MicroQuantityInjection_Final_Learning_Value_21_P212__", SN_CHECK);

MakeUnknown(0x00043034, 4, DOUNK_SIMPLE);
MakeDword(0x00043034);
MakeNameEx(0x00043034, "PtrSsmGet_MicroQuantityInjection_Final_Learning_Value_22_P213__", SN_CHECK);
addr = Dword(0x00043034);
MakeNameEx(addr, "SsmGet_MicroQuantityInjection_Final_Learning_Value_22_P213__", SN_CHECK);

MakeUnknown(0x00043038, 4, DOUNK_SIMPLE);
MakeDword(0x00043038);
MakeNameEx(0x00043038, "PtrSsmGet_MicroQuantityInjection_Final_Learning_Value_23_P214__", SN_CHECK);
addr = Dword(0x00043038);
MakeNameEx(addr, "SsmGet_MicroQuantityInjection_Final_Learning_Value_23_P214__", SN_CHECK);

MakeUnknown(0x0004303C, 4, DOUNK_SIMPLE);
MakeDword(0x0004303C);
MakeNameEx(0x0004303C, "PtrSsmGet_MicroQuantityInjection_Final_Learning_Value_24_P215__", SN_CHECK);
addr = Dword(0x0004303C);
MakeNameEx(addr, "SsmGet_MicroQuantityInjection_Final_Learning_Value_24_P215__", SN_CHECK);

MakeUnknown(0x00043040, 4, DOUNK_SIMPLE);
MakeDword(0x00043040);
MakeNameEx(0x00043040, "PtrSsmGet_MicroQuantityInjection_Final_Learning_Value_31_P216__", SN_CHECK);
addr = Dword(0x00043040);
MakeNameEx(addr, "SsmGet_MicroQuantityInjection_Final_Learning_Value_31_P216__", SN_CHECK);

MakeUnknown(0x00043044, 4, DOUNK_SIMPLE);
MakeDword(0x00043044);
MakeNameEx(0x00043044, "PtrSsmGet_MicroQuantityInjection_Final_Learning_Value_32_P217__", SN_CHECK);
addr = Dword(0x00043044);
MakeNameEx(addr, "SsmGet_MicroQuantityInjection_Final_Learning_Value_32_P217__", SN_CHECK);

MakeUnknown(0x00043048, 4, DOUNK_SIMPLE);
MakeDword(0x00043048);
addr = Dword(0x00043048);
MakeNameEx(0x00043048, "PtrSsmGet_MicroQuantityInjection_Final_Learning_Value_33_P218__", SN_CHECK);

MakeUnknown(0x0004304C, 4, DOUNK_SIMPLE);
MakeDword(0x0004304C);
addr = Dword(0x0004304C);
MakeNameEx(addr, "SsmGet_MicroQuantityInjection_Final_Learning_Value_34_P219__", SN_CHECK);

MakeUnknown(0x00043050, 4, DOUNK_SIMPLE);
MakeNameEx(0x0004304C, "PtrSsmGet_MicroQuantityInjection_Final_Learning_Value_34_P219__", SN_CHECK);
MakeDword(0x00043050);
addr = Dword(0x00043050);

MakeNameEx(addr, "SsmGet_MicroQuantityInjection_Final_Learning_Value_41_P220__", SN_CHECK);
MakeUnknown(0x00043054, 4, DOUNK_SIMPLE);
MakeDword(0x00043054);
MakeNameEx(0x00043054, "PtrSsmGet_MicroQuantityInjection_Final_Learning_Value_42_P221__", SN_CHECK);
addr = Dword(0x00043054);
MakeNameEx(addr, "SsmGet_MicroQuantityInjection_Final_Learning_Value_42_P221__", SN_CHECK);

MakeUnknown(0x00043058, 4, DOUNK_SIMPLE);
MakeDword(0x00043058);
MakeNameEx(0x00043050, "PtrSsmGet_MicroQuantityInjection_Final_Learning_Value_41_P220__", SN_CHECK);
addr = Dword(0x00043058);
MakeNameEx(0x00043058, "PtrSsmGet_MicroQuantityInjection_Final_Learning_Value_43_P222__", SN_CHECK);
MakeNameEx(addr, "SsmGet_MicroQuantityInjection_Final_Learning_Value_43_P222__", SN_CHECK);

MakeNameEx(addr, "SsmGet_MicroQuantityInjection_Final_Learning_Value_33_P218__", SN_CHECK);
MakeUnknown(0x0004305C, 4, DOUNK_SIMPLE);
MakeDword(0x0004305C);
MakeNameEx(0x0004305C, "PtrSsmGet_MicroQuantityInjection_Final_Learning_Value_44_P223__", SN_CHECK);
addr = Dword(0x0004305C);
MakeNameEx(addr, "SsmGet_MicroQuantityInjection_Final_Learning_Value_44_P223__", SN_CHECK);

MakeUnknown(0x00043060, 4, DOUNK_SIMPLE);
MakeDword(0x00043060);
MakeNameEx(0x00043060, "PtrSsmGet_MicroQuantityInjection_Final_Learning_Value_51_P224__", SN_CHECK);
addr = Dword(0x00043060);
MakeNameEx(addr, "SsmGet_MicroQuantityInjection_Final_Learning_Value_51_P224__", SN_CHECK);

MakeUnknown(0x00043064, 4, DOUNK_SIMPLE);
MakeDword(0x00043064);
MakeNameEx(0x00043064, "PtrSsmGet_MicroQuantityInjection_Final_Learning_Value_52_P225__", SN_CHECK);
addr = Dword(0x00043064);
MakeNameEx(addr, "SsmGet_MicroQuantityInjection_Final_Learning_Value_52_P225__", SN_CHECK);

MakeUnknown(0x00043068, 4, DOUNK_SIMPLE);
MakeDword(0x00043068);
MakeNameEx(0x00043068, "PtrSsmGet_MicroQuantityInjection_Final_Learning_Value_53_P226__", SN_CHECK);
addr = Dword(0x00043068);
MakeNameEx(addr, "SsmGet_MicroQuantityInjection_Final_Learning_Value_53_P226__", SN_CHECK);

MakeUnknown(0x0004306C, 4, DOUNK_SIMPLE);
MakeDword(0x0004306C);
MakeNameEx(0x0004306C, "PtrSsmGet_MicroQuantityInjection_Final_Learning_Value_54_P227__", SN_CHECK);
addr = Dword(0x0004306C);
MakeNameEx(addr, "SsmGet_MicroQuantityInjection_Final_Learning_Value_54_P227__", SN_CHECK);

MakeUnknown(0x0004300C, 4, DOUNK_SIMPLE);
MakeDword(0x0004300C);
MakeNameEx(0x0004300C, "PtrSsmGet_Individual_Pump_Difference_Learning_Value_P228__", SN_CHECK);
addr = Dword(0x0004300C);
MakeNameEx(addr, "SsmGet_Individual_Pump_Difference_Learning_Value_P228__", SN_CHECK);

MakeUnknown(0x00043088, 4, DOUNK_SIMPLE);
MakeDword(0x00043088);
MakeNameEx(0x00043088, "PtrSsmGet_Final_Main_Injection_Period_P229__", SN_CHECK);
addr = Dword(0x00043088);
MakeNameEx(addr, "SsmGet_Final_Main_Injection_Period_P229__", SN_CHECK);

MakeUnknown(0x00043080, 4, DOUNK_SIMPLE);
MakeDword(0x00043080);
MakeNameEx(0x00043080, "PtrSsmGet_PreInjection_Final_Period_P233__", SN_CHECK);
addr = Dword(0x00043080);
MakeNameEx(addr, "SsmGet_PreInjection_Final_Period_P233__", SN_CHECK);

MakeUnknown(0x00042FE8, 4, DOUNK_SIMPLE);
MakeDword(0x00042FE8);
MakeNameEx(0x00042FE8, "PtrSsmGet_PreInjection_Amount_P234__", SN_CHECK);
addr = Dword(0x00042FE8);
MakeNameEx(addr, "SsmGet_PreInjection_Amount_P234__", SN_CHECK);

MakeUnknown(0x00042FF0, 4, DOUNK_SIMPLE);
MakeDword(0x00042FF0);
MakeNameEx(0x00042FF0, "PtrSsmGet_PreInjection_Interval_P235__", SN_CHECK);
addr = Dword(0x00042FF0);
MakeNameEx(addr, "SsmGet_PreInjection_Interval_P235__", SN_CHECK);

MakeUnknown(0x000431B4, 4, DOUNK_SIMPLE);
MakeDword(0x000431B4);
MakeNameEx(0x000431B4, "PtrSsmGet_Cumulative_oil_diesel_entry_P236__", SN_CHECK);
addr = Dword(0x000431B4);
MakeNameEx(addr, "SsmGet_Cumulative_oil_diesel_entry_P236__", SN_CHECK);

MakeUnknown(0x00042FF4, 4, DOUNK_SIMPLE);
MakeDword(0x00042FF4);
MakeNameEx(0x00042FF4, "PtrSsmGet_Final_Initial_Torque_P238__", SN_CHECK);
addr = Dword(0x00042FF4);
MakeNameEx(addr, "SsmGet_Final_Initial_Torque_P238__", SN_CHECK);

MakeUnknown(0x000428E8, 4, DOUNK_SIMPLE);
MakeDword(0x000428E8);
MakeNameEx(0x000428E8, "PtrSsmGet_Global_Timing_User_Adjustment_Value_P239__", SN_CHECK);
addr = Dword(0x000428E8);
MakeNameEx(addr, "SsmGet_Global_Timing_User_Adjustment_Value_P239__", SN_CHECK);

MakeUnknown(0x000428EC, 4, DOUNK_SIMPLE);
MakeDword(0x000428EC);
MakeNameEx(0x000428EC, "PtrSsmGet_Engine_Idle_Speed_User_Adjustment_AC_off_P240__", SN_CHECK);
addr = Dword(0x000428EC);
MakeNameEx(addr, "SsmGet_Engine_Idle_Speed_User_Adjustment_AC_off_P240__", SN_CHECK);

MakeUnknown(0x000428F0, 4, DOUNK_SIMPLE);
MakeDword(0x000428F0);
MakeNameEx(0x000428F0, "PtrSsmGet_Engine_Idle_Speed_User_Adjustment_AC_on_P241__", SN_CHECK);
addr = Dword(0x000428F0);
MakeNameEx(addr, "SsmGet_Engine_Idle_Speed_User_Adjustment_AC_on_P241__", SN_CHECK);

MakeUnknown(0x00042B4C, 4, DOUNK_SIMPLE);
MakeDword(0x00042B4C);
MakeNameEx(0x00042B4C, "PtrSsmGet_Secondary_Air_Piping_Pressure_P244__", SN_CHECK);
addr = Dword(0x00042B4C);
MakeNameEx(addr, "SsmGet_Secondary_Air_Piping_Pressure_P244__", SN_CHECK);

MakeUnknown(0x00042D34, 4, DOUNK_SIMPLE);
MakeDword(0x00042D34);
MakeNameEx(0x00042D34, "PtrSsmGet_Secondary_Air_Flow_P245__", SN_CHECK);
addr = Dword(0x00042D34);
MakeNameEx(addr, "SsmGet_Secondary_Air_Flow_P245__", SN_CHECK);

// Switch Bit Position Name format: Switches_b7_b6_b5_b4_b3_b2_b1_b0
MakeUnknown(0x000428B0, 4, DOUNK_SIMPLE);
MakeDword(0x000428B0);
MakeNameEx(0x000428B0, "PtrSsmGet_Switches_x_1_2_3_x_69_70_71__", SN_CHECK);
addr = Dword(0x000428B0);
MakeNameEx(addr, "SsmGet_Switches_x_1_2_3_x_69_70_71__", SN_CHECK);

MakeDword(0x000428B4);
MakeNameEx(0x000428B4, "PtrSsmGet_Switches_4_5_x_6_7_8_9_x__", SN_CHECK);
addr = Dword(0x000428B4);
MakeNameEx(addr, "SsmGet_Switches_4_5_x_6_7_8_9_x__", SN_CHECK);

MakeUnknown(0x000428B8, 4, DOUNK_SIMPLE);
MakeDword(0x000428B8);
MakeNameEx(0x000428B8, "PtrSsmGet_Switches_10_11_12_13_14_15_16_17__", SN_CHECK);
addr = Dword(0x000428B8);
MakeNameEx(addr, "SsmGet_Switches_10_11_12_13_14_15_16_17__", SN_CHECK);

MakeUnknown(0x000428B4, 4, DOUNK_SIMPLE);
MakeUnknown(0x000428BC, 4, DOUNK_SIMPLE);
MakeDword(0x000428BC);
addr = Dword(0x000428BC);
MakeNameEx(addr, "SsmGet_Switches_18_19_20_21_22_23_24_25__", SN_CHECK);

MakeDword(0x000428C0);
MakeNameEx(0x000428C0, "PtrSsmGet_Switches_26_27_28_29_30_31_32_33__", SN_CHECK);
addr = Dword(0x000428C0);

MakeUnknown(0x000428C4, 4, DOUNK_SIMPLE);
MakeDword(0x000428C4);
MakeNameEx(0x000428C4, "PtrSsmGet_Switches_34_35_36_37_38_39_40_41__", SN_CHECK);
MakeUnknown(0x000428C0, 4, DOUNK_SIMPLE);
MakeNameEx(addr, "SsmGet_Switches_34_35_36_37_38_39_40_41__", SN_CHECK);
addr = Dword(0x000428C4);
MakeNameEx(addr, "SsmGet_Switches_26_27_28_29_30_31_32_33__", SN_CHECK);

MakeDword(0x000428C8);
MakeNameEx(0x000428C8, "PtrSsmGet_Switches_42_43_44_45_46_47_48_49__", SN_CHECK);
addr = Dword(0x000428C8);
MakeUnknown(0x000428C8, 4, DOUNK_SIMPLE);
MakeUnknown(0x000428CC, 4, DOUNK_SIMPLE);
MakeDword(0x000428CC);
MakeNameEx(0x000428CC, "PtrSsmGet_Switches_72_73_74_75_50_51_52_53__", SN_CHECK);
addr = Dword(0x000428CC);
MakeNameEx(addr, "SsmGet_Switches_72_73_74_75_50_51_52_53__", SN_CHECK);

MakeUnknown(0x000428D0, 4, DOUNK_SIMPLE);
MakeDword(0x000428D0);
MakeNameEx(0x000428D0, "PtrSsmGet_Switches_54_55_56_57_58_59_60_61__", SN_CHECK);
addr = Dword(0x000428D0);
MakeNameEx(addr, "SsmGet_Switches_54_55_56_57_58_59_60_61__", SN_CHECK);

MakeUnknown(0x00042BAC, 4, DOUNK_SIMPLE);
MakeDword(0x00042BAC);
MakeNameEx(0x00042BAC, "PtrSsmGet_Switches_130_62_131_x_x_x_x_x__", SN_CHECK);
addr = Dword(0x00042BAC);
MakeNameEx(addr, "SsmGet_Switches_130_62_131_x_x_x_x_x__", SN_CHECK);

MakeUnknown(0x00042BB0, 4, DOUNK_SIMPLE);
MakeDword(0x00042BB0);
MakeNameEx(0x00042BB0, "PtrSsmGet_Switches_63_64_65_66_67_132_68_133__", SN_CHECK);
addr = Dword(0x00042BB0);
MakeNameEx(addr, "SsmGet_Switches_63_64_65_66_67_132_68_133__", SN_CHECK);

MakeUnknown(0x000428D4, 4, DOUNK_SIMPLE);
MakeDword(0x000428D4);
MakeNameEx(0x000428D4, "PtrSsmGet_Switches_x_x_x_x_x_x_82_x__", SN_CHECK);
addr = Dword(0x000428D4);
MakeNameEx(addr, "SsmGet_Switches_x_x_x_x_x_x_82_x__", SN_CHECK);

MakeUnknown(0x000428E4, 4, DOUNK_SIMPLE);
MakeDword(0x000428E4);
MakeNameEx(0x000428E4, "PtrSsmGet_Switches_108_x_x_x_x_x_x_x__", SN_CHECK);
addr = Dword(0x000428E4);
MakeNameEx(addr, "SsmGet_Switches_108_x_x_x_x_x_x_x__", SN_CHECK);

MakeNameEx(0x000428BC, "PtrSsmGet_Switches_18_19_20_21_22_23_24_25__", SN_CHECK);
MakeUnknown(0x00042A88, 4, DOUNK_SIMPLE);
MakeDword(0x00042A88);
MakeNameEx(0x00042A88, "PtrSsmGet_Switches_148_149_x_150_151_152_153_154__", SN_CHECK);
addr = Dword(0x00042A88);
MakeNameEx(addr, "SsmGet_Switches_148_149_x_150_151_152_153_154__", SN_CHECK);

MakeUnknown(0x00042D84, 4, DOUNK_SIMPLE);
MakeDword(0x00042D84);
MakeNameEx(0x00042D84, "PtrSsmGet_Switches_155_156_157_x_x_x_x_x__", SN_CHECK);
addr = Dword(0x00042D84);
MakeNameEx(addr, "SsmGet_Switches_42_43_44_45_46_47_48_49__", SN_CHECK);
MakeNameEx(addr, "SsmGet_Switches_155_156_157_x_x_x_x_x__", SN_CHECK);

MakeUnknown(0x00042D88, 4, DOUNK_SIMPLE);
MakeDword(0x00042D88);
MakeNameEx(0x00042D88, "PtrSsmGet_Switches_158_159_160_161_162_163_164_165__", SN_CHECK);
MakeNameEx(addr, "SsmGet_Switches_158_159_160_161_162_163_164_165__", SN_CHECK);

MakeUnknown(0x00042E64, 4, DOUNK_SIMPLE);
MakeDword(0x00042E64);
MakeNameEx(0x00042E64, "PtrSsmGet_Switches_168_169_170_171_172_x_x_x__", SN_CHECK);
addr = Dword(0x00042E64);
MakeNameEx(addr, "SsmGet_Switches_168_169_170_171_172_x_x_x__", SN_CHECK);

addr = Dword(0x00042D88);


}   // end of StdParams
{
static ExtParams ()
Message("--- Now marking ExtParams ---\n");
MakeNameEx(0xFFFF8550, "E_IAM_4byteExt___E31", SN_CHECK);
MakeUnknown(0xFFFF8550, 4, DOUNK_SIMPLE);
MakeFloat(0xFFFF8550);
MakeNameEx(0xFFFFA6AC, "E_Engine_Load_4ByteExt___E32", SN_CHECK);
MakeUnknown(0xFFFFA6AC, 4, DOUNK_SIMPLE);
MakeFloat(0xFFFFA6AC);
MakeNameEx(0xFFFFC11D, "E_CLOL_FuelingExt___E33", SN_CHECK);
MakeUnknown(0xFFFFC11D, 1, DOUNK_SIMPLE);
MakeByte(0xFFFFC11D);
MakeNameEx(0xFFFFA290, "E_Turbo_Dynamics_Integral_4byteExt___E34", SN_CHECK);
MakeUnknown(0xFFFFA290, 4, DOUNK_SIMPLE);
MakeFloat(0xFFFFA290);
MakeNameEx(0xFFFFA284, "E_Boost_ErrorExt___E35", SN_CHECK);
MakeUnknown(0xFFFFA284, 4, DOUNK_SIMPLE);
MakeFloat(0xFFFFA284);
MakeNameEx(0xFFFFA288, "E_Target_Boost_4byteExt___E36", SN_CHECK);
MakeUnknown(0xFFFFA288, 4, DOUNK_SIMPLE);
MakeFloat(0xFFFFA288);
MakeNameEx(0xFFFFA28C, "E_Turbo_Dynamics_Proportional_4byteExt___E37", SN_CHECK);
MakeUnknown(0xFFFFA28C, 4, DOUNK_SIMPLE);
MakeFloat(0xFFFFA28C);
MakeNameEx(0xFFFFA5B8, "E_Throttle_Plate_Opening_Angle_4byteExt___E38", SN_CHECK);
MakeUnknown(0xFFFFA5B8, 4, DOUNK_SIMPLE);
MakeFloat(0xFFFFA5B8);
MakeNameEx(0xFFFFB030, "E_Feedback_Knock_Correction_4byteExt___E39", SN_CHECK);
MakeUnknown(0xFFFFB030, 4, DOUNK_SIMPLE);
MakeFloat(0xFFFFB030);
MakeNameEx(0xFFFFB074, "E_Knock_Correction_Advance_IAM_onlyExt___E40", SN_CHECK);
MakeUnknown(0xFFFFB074, 4, DOUNK_SIMPLE);
MakeFloat(0xFFFFB074);
MakeNameEx(0xFFFFB08C, "E_Fine_Learning_Knock_Correction_4byteExt___E41", SN_CHECK);
MakeUnknown(0xFFFFB08C, 4, DOUNK_SIMPLE);
MakeFloat(0xFFFFB08C);
MakeNameEx(0xFFFFB81C, "E_Map_Ratio_PrimaryExt___E42", SN_CHECK);
MakeUnknown(0xFFFFB81C, 4, DOUNK_SIMPLE);
MakeFloat(0xFFFFB81C);
MakeNameEx(0xFFFF84FC, "E_AF_Learning_1_A_StoredExt___E44", SN_CHECK);
MakeUnknown(0xFFFF84FC, 4, DOUNK_SIMPLE);
MakeFloat(0xFFFF84FC);
MakeNameEx(0xFFFF8504, "E_AF_Learning_1_B_StoredExt___E45", SN_CHECK);
MakeUnknown(0xFFFF8504, 4, DOUNK_SIMPLE);
MakeFloat(0xFFFF8504);
MakeNameEx(0xFFFF850C, "E_AF_Learning_1_C_StoredExt___E46", SN_CHECK);
MakeUnknown(0xFFFF850C, 4, DOUNK_SIMPLE);
MakeFloat(0xFFFF850C);
MakeNameEx(0xFFFF8514, "E_AF_Learning_1_D_StoredExt___E47", SN_CHECK);
MakeUnknown(0xFFFF8514, 4, DOUNK_SIMPLE);
MakeFloat(0xFFFF8514);
MakeNameEx(0xFFFFABE4, "E_AF_Learning_1_4byteExt___E48", SN_CHECK);
MakeUnknown(0xFFFFABE4, 4, DOUNK_SIMPLE);
MakeFloat(0xFFFFABE4);
MakeNameEx(0xFFFFB2E4, "E_Idle_Speed_Map_SelectionExt___E49", SN_CHECK);
MakeUnknown(0xFFFFB2E4, 1, DOUNK_SIMPLE);
MakeByte(0xFFFFB2E4);
MakeNameEx(0xFFFFAE24, "E_Fuel_Injector_1_Latency_4byteExt___E50", SN_CHECK);
MakeUnknown(0xFFFFAE24, 4, DOUNK_SIMPLE);
MakeFloat(0xFFFFAE24);
MakeNameEx(0xFFFFA528, "E_Manifold_Absolute_Pressure_4byteExt___E51", SN_CHECK);
MakeUnknown(0xFFFFA528, 4, DOUNK_SIMPLE);
MakeFloat(0xFFFFA528);
MakeNameEx(0xFFFFA528, "E_Manifold_Relative_Sea_Level_Pressure_4byteExt___E52", SN_CHECK);
MakeUnknown(0xFFFFA528, 4, DOUNK_SIMPLE);
MakeFloat(0xFFFFA528);
MakeNameEx(0xFFFFAF40, "E_Ignition_Base_TimingExt___E53", SN_CHECK);
MakeUnknown(0xFFFFAF40, 4, DOUNK_SIMPLE);
MakeFloat(0xFFFFAF40);
MakeNameEx(0xFFFFA5BC, "E_Tipin_ThrottleExt___E54", SN_CHECK);
MakeUnknown(0xFFFFA5BC, 4, DOUNK_SIMPLE);
MakeFloat(0xFFFFA5BC);
MakeNameEx(0xFFFFAD44, "E_Tipin_Enrichment_Last_CalculatedExt___E55", SN_CHECK);
MakeUnknown(0xFFFFAD44, 4, DOUNK_SIMPLE);
MakeFloat(0xFFFFAD44);
MakeNameEx(0xFFFFB16C, "E_Requested_TorqueExt___E56", SN_CHECK);
MakeUnknown(0xFFFFB16C, 4, DOUNK_SIMPLE);
MakeFloat(0xFFFFB16C);
MakeNameEx(0xFFFFB168, "E_Target_Throttle_Plate_PositionExt___E57", SN_CHECK);
MakeUnknown(0xFFFFB168, 4, DOUNK_SIMPLE);
MakeFloat(0xFFFFB168);
MakeNameEx(0xFFFFB095, "E_Fine_Learning_Table_OffsetExt___E58", SN_CHECK);
MakeUnknown(0xFFFFB095, 1, DOUNK_SIMPLE);
MakeByte(0xFFFFB095);
MakeNameEx(0xFFFFA8D1, "E_Gear_CalculatedExt___E59", SN_CHECK);
MakeUnknown(0xFFFFA8D1, 1, DOUNK_SIMPLE);
MakeByte(0xFFFFA8D1);
MakeNameEx(0xFFFFAE10, "E_Fuel_Injector_1_Pulse_Width_4byteExt___E60", SN_CHECK);
MakeUnknown(0xFFFFAE10, 4, DOUNK_SIMPLE);
MakeFloat(0xFFFFAE10);
MakeNameEx(0xFFFFABED, "E_AF_Learning_Airflow_Range_CurrentExt___E61", SN_CHECK);
MakeUnknown(0xFFFFABED, 1, DOUNK_SIMPLE);
MakeByte(0xFFFFABED);
MakeNameEx(0xFFFFA2AC, "E_Primary_Wastegate_Duty_MaximumExt_4byteExt_____E70", SN_CHECK);
MakeUnknown(0xFFFFA2AC, 4, DOUNK_SIMPLE);
MakeFloat(0xFFFFA2AC);
MakeNameEx(0xFFFFA2AC, "E_Primary_Wastegate_Duty_MaximumExt_4byteExt______E77", SN_CHECK);
MakeUnknown(0xFFFFA2AC, 4, DOUNK_SIMPLE);
MakeFloat(0xFFFFA2AC);
MakeNameEx(0xFFFFAA9C, "E_AF_Correction_1_4byteExt___E81", SN_CHECK);
MakeUnknown(0xFFFFAA9C, 4, DOUNK_SIMPLE);
MakeFloat(0xFFFFAA9C);
MakeNameEx(0xFFFFAC3C, "E_Primary_Open_Loop_Map_Enrichment_4byteExt___E84", SN_CHECK);
MakeUnknown(0xFFFFAC3C, 4, DOUNK_SIMPLE);
MakeFloat(0xFFFFAC3C);
MakeNameEx(0xFFFFA78C, "E_AF_Sensor_1_4byteExt___E91", SN_CHECK);
MakeUnknown(0xFFFFA78C, 4, DOUNK_SIMPLE);
MakeFloat(0xFFFFA78C);
MakeNameEx(0xFFFFA52C, "E_Manifold_Relative_Pressure_4byteExt___E113", SN_CHECK);
MakeUnknown(0xFFFFA52C, 4, DOUNK_SIMPLE);
MakeFloat(0xFFFFA52C);
MakeNameEx(0xFFFFAA20, "E_Primary_Enrichment_Final_4byteExt___E115", SN_CHECK);
MakeUnknown(0xFFFFAA20, 4, DOUNK_SIMPLE);
MakeFloat(0xFFFFAA20);
MakeNameEx(0xFFFFAAE4, "E_Closed_Loop_Fueling_Target_4byteExt___E121", SN_CHECK);
MakeUnknown(0xFFFFAAE4, 4, DOUNK_SIMPLE);
MakeFloat(0xFFFFAAE4);
MakeNameEx(0xFFFFA9F0, "E_Final_Fueling_Base_4byteExt___E123", SN_CHECK);
MakeUnknown(0xFFFFA9F0, 4, DOUNK_SIMPLE);
MakeFloat(0xFFFFA9F0);
